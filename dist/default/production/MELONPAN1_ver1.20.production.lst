

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Feb 20 10:47:43 2021

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 1.44
    46                           ; Generated 14/09/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F67K40 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  000928                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _before_DS_data
    85  000928  FF                 	db	255
    86  000929  FF                 	db	255
    87                           
    88                           ;initializer for read_ds_dual_de_gozaru@first_communication
    89  00092A  01                 	db	1
    90                           
    91                           ;initializer for _DS_time_out
    92  00092B  64                 	db	100
    93  0000                     _RD6PPS	set	3696
    94  0000                     _RX2PPSbits	set	3601
    95  0000                     _RD4PPS	set	3694
    96  0000                     _RX1PPSbits	set	3599
    97  0000                     _SSP2CLKPPSbits	set	3612
    98  0000                     _SSP2DATPPSbits	set	3613
    99  0000                     _RB1PPS	set	3675
   100  0000                     _RB0PPS	set	3674
   101  0000                     _RC6PPS	set	3688
   102  0000                     _SSP1CLKPPSbits	set	3609
   103  0000                     _SSP1DATPPSbits	set	3610
   104  0000                     _RC0PPS	set	3682
   105  0000                     _ODCONH	set	3775
   106  0000                     _ODCONG	set	3770
   107  0000                     _ODCONF	set	3762
   108  0000                     _ODCONE	set	3757
   109  0000                     _ODCOND	set	3749
   110  0000                     _ODCONC	set	3744
   111  0000                     _ODCONB	set	3736
   112  0000                     _ODCONA	set	3728
   113  0000                     _WPUH	set	3776
   114  0000                     _WPUG	set	3771
   115  0000                     _WPUF	set	3763
   116  0000                     _WPUE	set	3758
   117  0000                     _WPUD	set	3750
   118  0000                     _WPUC	set	3745
   119  0000                     _WPUB	set	3737
   120  0000                     _WPUA	set	3729
   121  0000                     _ANSELG	set	3772
   122  0000                     _ANSELF	set	3764
   123  0000                     _ANSELE	set	3759
   124  0000                     _ANSELD	set	3751
   125  0000                     _ANSELB	set	3738
   126  0000                     _ANSELA	set	3730
   127  0000                     _PIE4bits	set	3629
   128  0000                     _PIE3bits	set	3628
   129  0000                     _PIE5bits	set	3630
   130  0000                     _PIR5bits	set	3640
   131  0000                     _PIE0bits	set	3625
   132  0000                     _PIR0bits	set	3635
   133  0000                     _TX5REG	set	3805
   134  0000                     _TX5STAbits	set	3809
   135  0000                     _RC5REG	set	3804
   136  0000                     _BAUD5CON	set	3810
   137  0000                     _RC5STA	set	3808
   138  0000                     _TX5STA	set	3809
   139  0000                     _SP5BRGL	set	3806
   140  0000                     _SP5BRGH	set	3807
   141  0000                     _TX4REG	set	3812
   142  0000                     _TX4STAbits	set	3816
   143  0000                     _RC4REG	set	3811
   144  0000                     _BAUD4CON	set	3817
   145  0000                     _RC4STA	set	3815
   146  0000                     _TX4STA	set	3816
   147  0000                     _SP4BRGL	set	3813
   148  0000                     _SP4BRGH	set	3814
   149  0000                     _TX3REG	set	3819
   150  0000                     _TX3STAbits	set	3823
   151  0000                     _RC3REG	set	3818
   152  0000                     _PIR4bits	set	3639
   153  0000                     _BAUD3CON	set	3824
   154  0000                     _RC3STA	set	3822
   155  0000                     _TX3STA	set	3823
   156  0000                     _SP3BRGL	set	3820
   157  0000                     _SP3BRGH	set	3821
   158  0000                     _TX2REG	set	3826
   159  0000                     _TX2STAbits	set	3830
   160  0000                     _RC2REG	set	3825
   161  0000                     _BAUD2CON	set	3831
   162  0000                     _RC2STA	set	3829
   163  0000                     _TX2STA	set	3830
   164  0000                     _SP2BRGL	set	3827
   165  0000                     _SP2BRGH	set	3828
   166  0000                     _SSP2STATbits	set	3800
   167  0000                     _SSP2BUF	set	3797
   168  0000                     _PIR3bits	set	3638
   169  0000                     _SSP2CON2bits	set	3802
   170  0000                     _SSP2STAT	set	3800
   171  0000                     _SSP2ADD	set	3798
   172  0000                     _SSP2CON3	set	3803
   173  0000                     _SSP2CON1	set	3801
   174  0000                     _TMR8	set	3880
   175  0000                     _T8CONbits	set	3882
   176  0000                     _T8CON	set	3882
   177  0000                     _T8CLKCON	set	3884
   178  0000                     _T8PR	set	3881
   179  0000                     _T8HLT	set	3883
   180  0000                     _T8RST	set	3885
   181  0000                     _TMR7L	set	3886
   182  0000                     _TMR7H	set	3887
   183  0000                     _T7CONbits	set	3888
   184  0000                     _T7CON	set	3888
   185  0000                     _TMR7CLK	set	3891
   186  0000                     _T7GCON	set	3889
   187  0000                     _ADPCH	set	3935
   188  0000                     _ADACQ	set	3932
   189  0000                     _ADPRE	set	3934
   190  0000                     _ADREF	set	3928
   191  0000                     _ADCLK	set	3927
   192  0000                     _ADCON3	set	3931
   193  0000                     _ADCON2	set	3930
   194  0000                     _ADCON1	set	3929
   195  0000                     _LATDbits	set	3964
   196  0000                     _LATGbits	set	3967
   197  0000                     _LATHbits	set	3968
   198  0000                     _LATAbits	set	3961
   199  0000                     _LATEbits	set	3965
   200  0000                     _TRISH	set	3976
   201  0000                     _TRISG	set	3975
   202  0000                     _TRISF	set	3974
   203  0000                     _TRISE	set	3973
   204  0000                     _TRISD	set	3972
   205  0000                     _TRISC	set	3971
   206  0000                     _TRISB	set	3970
   207  0000                     _TRISA	set	3969
   208  0000                     _LATH	set	3968
   209  0000                     _LATG	set	3967
   210  0000                     _LATF	set	3966
   211  0000                     _LATE	set	3965
   212  0000                     _LATD	set	3964
   213  0000                     _LATC	set	3963
   214  0000                     _LATB	set	3962
   215  0000                     _LATA	set	3961
   216  0000                     _INTCONbits	set	4082
   217  0000                     _TMR6	set	4015
   218  0000                     _T6CONbits	set	4017
   219  0000                     _T6CON	set	4017
   220  0000                     _T6CLKCON	set	4019
   221  0000                     _T6PR	set	4016
   222  0000                     _T6HLT	set	4018
   223  0000                     _T6RST	set	4020
   224  0000                     _TMR4	set	4021
   225  0000                     _T4CONbits	set	4023
   226  0000                     _T4CON	set	4023
   227  0000                     _T4CLKCON	set	4025
   228  0000                     _T4PR	set	4022
   229  0000                     _T4HLT	set	4024
   230  0000                     _T4RST	set	4026
   231  0000                     _TMR2	set	4027
   232  0000                     _T2CONbits	set	4029
   233  0000                     _T2CON	set	4029
   234  0000                     _T2CLKCON	set	4031
   235  0000                     _T2PR	set	4028
   236  0000                     _T2HLT	set	4030
   237  0000                     _T2RST	set	4032
   238  0000                     _TMR5L	set	4033
   239  0000                     _TMR5H	set	4034
   240  0000                     _T5CONbits	set	4035
   241  0000                     _T5CON	set	4035
   242  0000                     _TMR5CLK	set	4038
   243  0000                     _T5GCON	set	4036
   244  0000                     _TMR3L	set	4039
   245  0000                     _TMR3H	set	4040
   246  0000                     _T3CONbits	set	4041
   247  0000                     _T3CON	set	4041
   248  0000                     _TMR3CLK	set	4044
   249  0000                     _T3GCON	set	4042
   250  0000                     _TMR1L	set	4045
   251  0000                     _TMR1H	set	4046
   252  0000                     _T1CONbits	set	4047
   253  0000                     _T1CON	set	4047
   254  0000                     _TMR1CLK	set	4050
   255  0000                     _T1GCON	set	4048
   256  0000                     _TMR0H	set	4052
   257  0000                     _TMR0L	set	4051
   258  0000                     _T0CON0	set	4053
   259  0000                     _T0CON1	set	4054
   260  0000                     _TX1REG	set	3993
   261  0000                     _TX1STAbits	set	3997
   262  0000                     _RC1REG	set	3992
   263  0000                     _BAUD1CON	set	3998
   264  0000                     _RC1STA	set	3996
   265  0000                     _TX1STA	set	3997
   266  0000                     _SP1BRGL	set	3994
   267  0000                     _SP1BRGH	set	3995
   268  0000                     _SSP1STATbits	set	3988
   269  0000                     _SSP1BUF	set	3985
   270  0000                     _SSP1CON1bits	set	3989
   271  0000                     _SSP1CON1	set	3989
   272  0000                     _SSP1STAT	set	3988
   273  0000                     _ADRESL	set	3939
   274  0000                     _ADRESH	set	3940
   275  0000                     _ADCON0bits	set	3936
   276  0000                     _ADCON0	set	3936
   277                           
   278                           ; #config settings
   279  0000                     
   280                           	psect	cinit
   281  000742                     __pcinit:
   282                           	opt stack 0
   283  000742                     start_initialization:
   284                           	opt stack 0
   285  000742                     __initialization:
   286                           	opt stack 0
   287                           
   288                           ; Initialize objects allocated to COMRAM (4 bytes)
   289                           ; load TBLPTR registers with __pidataCOMRAM
   290  000742  0E28               	movlw	low __pidataCOMRAM
   291  000744  6EF6               	movwf	tblptrl,c
   292  000746  0E09               	movlw	high __pidataCOMRAM
   293  000748  6EF7               	movwf	tblptrh,c
   294  00074A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   295  00074C  6EF8               	movwf	tblptru,c
   296  00074E  EE00  F04B         	lfsr	0,__pdataCOMRAM
   297  000752  EE10 F004          	lfsr	1,4
   298  000756                     copy_data0:
   299  000756  0009               	tblrd		*+
   300  000758  CFF5 FFEE          	movff	tablat,postinc0
   301  00075C  50E5               	movf	postdec1,w,c
   302  00075E  50E1               	movf	fsr1l,w,c
   303  000760  E1FA               	bnz	copy_data0
   304                           
   305                           ; Clear objects allocated to BANK0 (10 bytes)
   306  000762  EE00  F060         	lfsr	0,__pbssBANK0
   307  000766  0E0A               	movlw	10
   308  000768                     clear_0:
   309  000768  6AEE               	clrf	postinc0,c
   310  00076A  06E8               	decf	wreg,f,c
   311  00076C  E1FD               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to COMRAM (54 bytes)
   314  00076E  EE00  F001         	lfsr	0,__pbssCOMRAM
   315  000772  0E36               	movlw	54
   316  000774                     clear_1:
   317  000774  6AEE               	clrf	postinc0,c
   318  000776  06E8               	decf	wreg,f,c
   319  000778  E1FD               	bnz	clear_1
   320  00077A                     end_of_initialization:
   321                           	opt stack 0
   322  00077A                     __end_of__initialization:
   323                           	opt stack 0
   324  00077A  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   325  00077C  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   326  00077E  0100               	movlb	0
   327  000780  EFC2  F003         	goto	_main	;jump to C main() function
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	bssCOMRAM
   338  000001                     __pbssCOMRAM:
   339                           	opt stack 0
   340  000001                     _DS_data:
   341                           	opt stack 0
   342  000001                     	ds	13
   343  00000E                     _sinyounai_DS_data:
   344                           	opt stack 0
   345  00000E                     	ds	13
   346  00001B                     ten_bit_test_unsignedint@F17526:
   347                           	opt stack 0
   348  00001B                     	ds	5
   349  000020                     ten_bit_test@F17522:
   350                           	opt stack 0
   351  000020                     	ds	3
   352  000023                     _csv_data:
   353                           	opt stack 0
   354  000023                     	ds	2
   355  000025                     CSV_timer_task@CSV_lib_count:
   356                           	opt stack 0
   357  000025                     	ds	2
   358  000027                     _CSV_lib_transmit_flag:
   359                           	opt stack 0
   360  000027                     	ds	2
   361  000029                     _CSV_lib_now_time:
   362                           	opt stack 0
   363  000029                     	ds	2
   364  00002B                     _CSV_lib_cycle_time:
   365                           	opt stack 0
   366  00002B                     	ds	2
   367  00002D                     _DS_communication_error_time:
   368                           	opt stack 0
   369  00002D                     	ds	2
   370  00002F                     _push_DS_data:
   371                           	opt stack 0
   372  00002F                     	ds	2
   373  000031                     _CSV_lib_enable:
   374                           	opt stack 0
   375  000031                     	ds	1
   376  000032                     read_ds_dual_de_gozaru@check_sum:
   377                           	opt stack 0
   378  000032                     	ds	1
   379  000033                     read_ds_dual_de_gozaru@mode:
   380                           	opt stack 0
   381  000033                     	ds	1
   382  000034                     read_ds_dual_de_gozaru@read_number:
   383                           	opt stack 0
   384  000034                     	ds	1
   385  000035                     _DS_read_stop:
   386                           	opt stack 0
   387  000035                     	ds	1
   388  000036                     _DS_uart_number:
   389                           	opt stack 0
   390  000036                     	ds	1
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postdec1	equ	0xFE5
   398                           fsr1l	equ	0xFE1
   399                           
   400                           	psect	dataCOMRAM
   401  00004B                     __pdataCOMRAM:
   402                           	opt stack 0
   403  00004B                     _before_DS_data:
   404                           	opt stack 0
   405  00004B                     	ds	2
   406  00004D                     read_ds_dual_de_gozaru@first_communication:
   407                           	opt stack 0
   408  00004D                     	ds	1
   409  00004E                     _DS_time_out:
   410                           	opt stack 0
   411  00004E                     	ds	1
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           postdec1	equ	0xFE5
   419                           fsr1l	equ	0xFE1
   420                           
   421                           	psect	bssBANK0
   422  000060                     __pbssBANK0:
   423                           	opt stack 0
   424  000060                     _data:
   425                           	opt stack 0
   426  000060                     	ds	10
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           postdec1	equ	0xFE5
   434                           fsr1l	equ	0xFE1
   435                           
   436                           	psect	cstackBANK0
   437  00006A                     __pcstackBANK0:
   438                           	opt stack 0
   439  00006A                     ?_DS_LEFT_UD_signed_VALUE:
   440                           	opt stack 0
   441  00006A                     SPI_transfer@send_data:
   442                           	opt stack 0
   443  00006A                     enable_interrupts@data:
   444                           	opt stack 0
   445  00006A                     bit_test@bit_place:
   446                           	opt stack 0
   447  00006A                     output_LED5@num:
   448                           	opt stack 0
   449  00006A                     make_s_driver_ver1_send_data@pwm_value:
   450                           	opt stack 0
   451  00006A                     SPI_begin@data:
   452                           	opt stack 0
   453  00006A                     Serial1_begin@speed:
   454                           	opt stack 0
   455  00006A                     TIMER0_setup@data:
   456                           	opt stack 0
   457  00006A                     TIMER0_16bit_set_count@data:
   458                           	opt stack 0
   459  00006A                     TIMER1_setup@data:
   460                           	opt stack 0
   461  00006A                     TIMER1_set_count@data:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x0
   465  00006A                     	ds	1
   466  00006B                     ??_bit_test:
   467  00006B                     make_s_driver_ver1_send_data@mode:
   468                           	opt stack 0
   469  00006B                     s_driver1_set_value@temp:
   470                           	opt stack 0
   471  00006B                     s_driver2_set_value@temp:
   472                           	opt stack 0
   473  00006B                     s_driver3_set_value@temp:
   474                           	opt stack 0
   475  00006B                     s_driver4_set_value@temp:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x1
   479  00006B                     	ds	1
   480  00006C                     ??_DS_LEFT_UD_signed_VALUE:
   481  00006C                     Serial1_begin@data:
   482                           	opt stack 0
   483  00006C                     s_driver1_set_value@value:
   484                           	opt stack 0
   485  00006C                     s_driver2_set_value@value:
   486                           	opt stack 0
   487  00006C                     s_driver3_set_value@value:
   488                           	opt stack 0
   489  00006C                     s_driver4_set_value@value:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x2
   493  00006C                     	ds	1
   494  00006D                     bit_test@number:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x3
   498  00006D                     	ds	1
   499  00006E                     bit_test@i:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x4
   503  00006E                     	ds	1
   504  00006F                     ??_GOOD_de_gozaru:
   505                           
   506                           ; 1 bytes @ 0x5
   507  00006F                     	ds	1
   508  000070                     
   509                           ; 1 bytes @ 0x6
   510  000070                     	ds	1
   511  000071                     tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520                           ; 1 bytes @ 0x7
   521                           
   522                           	psect	cstackCOMRAM
   523  000037                     __pcstackCOMRAM:
   524                           	opt stack 0
   525  000037                     i2TIMER0_16bit_set_count@data:
   526                           	opt stack 0
   527  000037                     i2TIMER1_set_count@data:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x0
   531  000037                     	ds	2
   532  000039                     ??_wood_isr:
   533  000039                     
   534                           ; 1 bytes @ 0x2
   535  000039                     	ds	18
   536                           tblptru	equ	0xFF8
   537                           tblptrh	equ	0xFF7
   538                           tblptrl	equ	0xFF6
   539                           tablat	equ	0xFF5
   540                           postinc0	equ	0xFEE
   541                           wreg	equ	0xFE8
   542                           postdec1	equ	0xFE5
   543                           fsr1l	equ	0xFE1
   544                           
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 42 in file "MELON PAN1_main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels required when called:    7
   570 ;; This function calls:
   571 ;;		_TIMER1_set_count
   572 ;;		_TIMER1_setup
   573 ;;		_enable_interrupts
   574 ;;		_pin_init
   575 ;;		_read_ds_dual_de_gozaru
   576 ;;		_read_ds_dual_init
   577 ;;		_spi_init
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text0
   584  000784                     __ptext0:
   585                           	opt stack 0
   586  000784                     _main:
   587                           	opt stack 24
   588                           
   589                           ;MELON PAN1_main.c: 44: pin_init();
   590                           
   591                           ;incstack = 0
   592  000784  EC7A  F001         	call	_pin_init	;wreg free
   593                           
   594                           ;MELON PAN1_main.c: 48: spi_init();
   595  000788  ECF4  F003         	call	_spi_init	;wreg free
   596                           
   597                           ;MELON PAN1_main.c: 49: read_ds_dual_init();
   598  00078C  EC7F  F003         	call	_read_ds_dual_init	;wreg free
   599                           
   600                           ;MELON PAN1_main.c: 51: TIMER1_setup(0x0100 | 0x20);
   601  000790  0E01               	movlw	1
   602  000792  0100               	movlb	0	; () banked
   603  000794  6F6B               	movwf	(TIMER1_setup@data+1)& (0+255),b
   604  000796  0E20               	movlw	32
   605  000798  6F6A               	movwf	TIMER1_setup@data& (0+255),b
   606  00079A  EC5F  F004         	call	_TIMER1_setup	;wreg free
   607                           
   608                           ;MELON PAN1_main.c: 52: TIMER1_set_count(25536);
   609  00079E  0E63               	movlw	99
   610  0007A0  0100               	movlb	0	; () banked
   611  0007A2  6F6B               	movwf	(TIMER1_set_count@data+1)& (0+255),b
   612  0007A4  0EC0               	movlw	192
   613  0007A6  6F6A               	movwf	TIMER1_set_count@data& (0+255),b
   614  0007A8  EC7C  F004         	call	_TIMER1_set_count	;wreg free
   615                           
   616                           ;MELON PAN1_main.c: 53: enable_interrupts(2);
   617  0007AC  0E02               	movlw	2
   618  0007AE  ECF6  F001         	call	_enable_interrupts
   619  0007B2                     
   620                           ;MELON PAN1_main.c: 67: read_ds_dual_de_gozaru();
   621  0007B2  ECFB  F000         	call	_read_ds_dual_de_gozaru	;wreg free
   622  0007B6  D7FD               	goto	l1161
   623  0007B8                     __end_of_main:
   624                           	opt stack 0
   625                           tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           postdec1	equ	0xFE5
   632                           fsr1l	equ	0xFE1
   633                           
   634 ;; *************** function _spi_init *****************
   635 ;; Defined at:
   636 ;;		line 205 in file "pindef.h"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    4
   657 ;; This function calls:
   658 ;;		_SPI_begin
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text1
   665  0007E8                     __ptext1:
   666                           	opt stack 0
   667  0007E8                     _spi_init:
   668                           	opt stack 26
   669                           
   670                           ;pindef.h: 206: SPI_begin(0x0000 | 0x01);
   671                           
   672                           ;incstack = 0
   673  0007E8  0E00               	movlw	0
   674  0007EA  0100               	movlb	0	; () banked
   675  0007EC  6F6B               	movwf	(SPI_begin@data+1)& (0+255),b
   676  0007EE  0E01               	movlw	1
   677  0007F0  6F6A               	movwf	SPI_begin@data& (0+255),b
   678  0007F2  EC68  F004         	call	_SPI_begin	;wreg free
   679                           
   680                           ;pindef.h: 207: LATAbits.LATA3=1;
   681  0007F6  8679               	bsf	3961,3,c	;volatile
   682                           
   683                           ;pindef.h: 208: LATAbits.LATA2=1;
   684  0007F8  8479               	bsf	3961,2,c	;volatile
   685                           
   686                           ;pindef.h: 209: LATAbits.LATA1=1;
   687  0007FA  8279               	bsf	3961,1,c	;volatile
   688                           
   689                           ;pindef.h: 210: LATAbits.LATA0=1;
   690  0007FC  8079               	bsf	3961,0,c	;volatile
   691                           
   692                           ;pindef.h: 211: LATHbits.LATH1=1;
   693  0007FE  8280               	bsf	3968,1,c	;volatile
   694                           
   695                           ;pindef.h: 212: LATHbits.LATH0=1;
   696  000800  8080               	bsf	3968,0,c	;volatile
   697                           
   698                           ;pindef.h: 213: LATAbits.LATA5=1;
   699  000802  8A79               	bsf	3961,5,c	;volatile
   700                           
   701                           ;pindef.h: 214: LATAbits.LATA4=1;
   702  000804  8879               	bsf	3961,4,c	;volatile
   703                           
   704                           ;pindef.h: 215: LATGbits.LATG6=1;
   705  000806  8C7F               	bsf	3967,6,c	;volatile
   706                           
   707                           ;pindef.h: 216: LATGbits.LATG1=1;
   708  000808  827F               	bsf	3967,1,c	;volatile
   709                           
   710                           ;pindef.h: 217: LATGbits.LATG0=1;
   711  00080A  807F               	bsf	3967,0,c	;volatile
   712                           
   713                           ;pindef.h: 218: LATEbits.LATE0=1;
   714  00080C  807D               	bsf	3965,0,c	;volatile
   715                           
   716                           ;pindef.h: 219: LATEbits.LATE1=1;
   717  00080E  827D               	bsf	3965,1,c	;volatile
   718                           
   719                           ;pindef.h: 220: LATEbits.LATE2=1;
   720  000810  847D               	bsf	3965,2,c	;volatile
   721  000812  0012               	return		;funcret
   722  000814                     __end_of_spi_init:
   723                           	opt stack 0
   724                           tblptru	equ	0xFF8
   725                           tblptrh	equ	0xFF7
   726                           tblptrl	equ	0xFF6
   727                           tablat	equ	0xFF5
   728                           postinc0	equ	0xFEE
   729                           wreg	equ	0xFE8
   730                           postdec1	equ	0xFE5
   731                           fsr1l	equ	0xFE1
   732                           
   733 ;; *************** function _SPI_begin *****************
   734 ;; Defined at:
   735 ;;		line 383 in file "MELONPAN1_lib_ver1.20.h"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  data            2    0[BANK0 ] unsigned int 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   749 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   752 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   753 ;;Total ram usage:        2 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    3
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_spi_init
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text2
   764  0008D0                     __ptext2:
   765                           	opt stack 0
   766  0008D0                     _SPI_begin:
   767                           	opt stack 26
   768                           
   769                           ;MELONPAN1_lib_ver1.20.h: 384: SSP1STAT=((char)(data>>8)) | 0x00;
   770                           
   771                           ;incstack = 0
   772  0008D0  0100               	movlb	0	; () banked
   773  0008D2  516B               	movf	(SPI_begin@data+1)& (0+255),w,b
   774  0008D4  6E94               	movwf	3988,c	;volatile
   775                           
   776                           ; BSR set to: 0
   777                           ;MELONPAN1_lib_ver1.20.h: 385: SSP1CON1=((char)(data & 0x00ff)) | 0x20;
   778  0008D6  516A               	movf	SPI_begin@data& (0+255),w,b
   779  0008D8  0920               	iorlw	32
   780  0008DA  6E95               	movwf	3989,c	;volatile
   781                           
   782                           ; BSR set to: 0
   783  0008DC  0012               	return		;funcret
   784  0008DE                     __end_of_SPI_begin:
   785                           	opt stack 0
   786                           tblptru	equ	0xFF8
   787                           tblptrh	equ	0xFF7
   788                           tblptrl	equ	0xFF6
   789                           tablat	equ	0xFF5
   790                           postinc0	equ	0xFEE
   791                           wreg	equ	0xFE8
   792                           postdec1	equ	0xFE5
   793                           fsr1l	equ	0xFE1
   794                           
   795 ;; *************** function _read_ds_dual_init *****************
   796 ;; Defined at:
   797 ;;		line 95 in file "ds_dual_wood.h"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    4
   818 ;; This function calls:
   819 ;;		_Serial1_begin
   820 ;;		_TIMER0_16bit_set_count
   821 ;;		_TIMER0_setup
   822 ;;		_enable_interrupts
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text3
   829  0006FE                     __ptext3:
   830                           	opt stack 0
   831  0006FE                     _read_ds_dual_init:
   832                           	opt stack 26
   833                           
   834                           ;ds_dual_wood.h: 97: TIMER0_setup(0x10 | 0x4000 | 0x0300);
   835                           
   836                           ; BSR set to: 0
   837                           ;incstack = 0
   838  0006FE  0E43               	movlw	67
   839  000700  0100               	movlb	0	; () banked
   840  000702  6F6B               	movwf	(TIMER0_setup@data+1)& (0+255),b
   841  000704  0E10               	movlw	16
   842  000706  6F6A               	movwf	TIMER0_setup@data& (0+255),b
   843  000708  EC6F  F004         	call	_TIMER0_setup	;wreg free
   844                           
   845                           ;ds_dual_wood.h: 98: TIMER0_16bit_set_count(25536);
   846  00070C  0E63               	movlw	99
   847  00070E  0100               	movlb	0	; () banked
   848  000710  6F6B               	movwf	(TIMER0_16bit_set_count@data+1)& (0+255),b
   849  000712  0EC0               	movlw	192
   850  000714  6F6A               	movwf	TIMER0_16bit_set_count@data& (0+255),b
   851  000716  EC76  F004         	call	_TIMER0_16bit_set_count	;wreg free
   852                           
   853                           ;ds_dual_wood.h: 104: Serial1_begin(57600,0x00);
   854  00071A  0EE1               	movlw	225
   855  00071C  0100               	movlb	0	; () banked
   856  00071E  6F6B               	movwf	(Serial1_begin@speed+1)& (0+255),b
   857  000720  0E00               	movlw	0
   858  000722  6F6A               	movwf	Serial1_begin@speed& (0+255),b
   859  000724  0E00               	movlw	0
   860  000726  6F6C               	movwf	Serial1_begin@data& (0+255),b
   861  000728  ECEC  F002         	call	_Serial1_begin	;wreg free
   862                           
   863                           ;ds_dual_wood.h: 105: TX1STAbits.TXEN=0;
   864  00072C  9A9D               	bcf	3997,5,c	;volatile
   865                           
   866                           ;ds_dual_wood.h: 107: enable_interrupts(10);
   867  00072E  0E0A               	movlw	10
   868  000730  ECF6  F001         	call	_enable_interrupts
   869                           
   870                           ;ds_dual_wood.h: 108: enable_interrupts(1);
   871  000734  0E01               	movlw	1
   872  000736  ECF6  F001         	call	_enable_interrupts
   873                           
   874                           ;ds_dual_wood.h: 109: enable_interrupts(0);
   875  00073A  0E00               	movlw	0
   876  00073C  ECF6  F001         	call	_enable_interrupts
   877  000740  0012               	return		;funcret
   878  000742                     __end_of_read_ds_dual_init:
   879                           	opt stack 0
   880                           tblptru	equ	0xFF8
   881                           tblptrh	equ	0xFF7
   882                           tblptrl	equ	0xFF6
   883                           tablat	equ	0xFF5
   884                           postinc0	equ	0xFEE
   885                           wreg	equ	0xFE8
   886                           postdec1	equ	0xFE5
   887                           fsr1l	equ	0xFE1
   888                           
   889 ;; *************** function _enable_interrupts *****************
   890 ;; Defined at:
   891 ;;		line 911 in file "MELONPAN1_lib_ver1.20.h"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  data            1    wreg     unsigned char 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  data            1    0[BANK0 ] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   909 ;;Total ram usage:        1 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    3
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_read_ds_dual_init
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text4
   921  0003EC                     __ptext4:
   922                           	opt stack 0
   923  0003EC                     _enable_interrupts:
   924                           	opt stack 26
   925                           
   926                           ;incstack = 0
   927                           ;enable_interrupts@data stored from wreg
   928  0003EC  0100               	movlb	0	; () banked
   929  0003EE  6F6A               	movwf	enable_interrupts@data& (0+255),b
   930                           
   931                           ;MELONPAN1_lib_ver1.20.h: 912: switch(data){
   932  0003F0  D043               	goto	l742
   933  0003F2                     l743:
   934                           
   935                           ; BSR set to: 0
   936                           ;MELONPAN1_lib_ver1.20.h: 914: INTCONbits.GIE=1;
   937  0003F2  8EF2               	bsf	intcon,7,c	;volatile
   938                           
   939                           ;MELONPAN1_lib_ver1.20.h: 915: break;
   940  0003F4  0012               	return	
   941  0003F6                     l745:
   942                           
   943                           ; BSR set to: 0
   944                           ;MELONPAN1_lib_ver1.20.h: 917: INTCONbits.PEIE=1;
   945  0003F6  8CF2               	bsf	intcon,6,c	;volatile
   946                           
   947                           ;MELONPAN1_lib_ver1.20.h: 918: PIR0bits.TMR0IF=0;
   948  0003F8  010E               	movlb	14	; () banked
   949  0003FA  9B33               	bcf	51,5,b	;volatile
   950                           
   951                           ;MELONPAN1_lib_ver1.20.h: 919: PIE0bits.TMR0IE=1;
   952  0003FC  8B29               	bsf	41,5,b	;volatile
   953                           
   954                           ;MELONPAN1_lib_ver1.20.h: 920: break;
   955  0003FE  0012               	return	
   956  000400                     l746:
   957                           
   958                           ; BSR set to: 0
   959                           ;MELONPAN1_lib_ver1.20.h: 922: INTCONbits.PEIE=1;
   960  000400  8CF2               	bsf	intcon,6,c	;volatile
   961                           
   962                           ;MELONPAN1_lib_ver1.20.h: 923: PIR5bits.TMR1IF=0;
   963  000402  010E               	movlb	14	; () banked
   964  000404  9138               	bcf	56,0,b	;volatile
   965                           
   966                           ;MELONPAN1_lib_ver1.20.h: 924: PIE5bits.TMR1IE=1;
   967  000406  812E               	bsf	46,0,b	;volatile
   968                           
   969                           ;MELONPAN1_lib_ver1.20.h: 925: break;
   970  000408  0012               	return	
   971  00040A                     l747:
   972                           
   973                           ; BSR set to: 0
   974                           ;MELONPAN1_lib_ver1.20.h: 927: INTCONbits.PEIE=1;
   975  00040A  8CF2               	bsf	intcon,6,c	;volatile
   976                           
   977                           ;MELONPAN1_lib_ver1.20.h: 928: PIR5bits.TMR3IF=0;
   978  00040C  010E               	movlb	14	; () banked
   979  00040E  9538               	bcf	56,2,b	;volatile
   980                           
   981                           ;MELONPAN1_lib_ver1.20.h: 929: PIE5bits.TMR3IE=1;
   982  000410  852E               	bsf	46,2,b	;volatile
   983                           
   984                           ;MELONPAN1_lib_ver1.20.h: 930: break;
   985  000412  0012               	return	
   986  000414                     l748:
   987                           
   988                           ; BSR set to: 0
   989                           ;MELONPAN1_lib_ver1.20.h: 932: INTCONbits.PEIE=1;
   990  000414  8CF2               	bsf	intcon,6,c	;volatile
   991                           
   992                           ;MELONPAN1_lib_ver1.20.h: 933: PIR5bits.TMR5IF=0;
   993  000416  010E               	movlb	14	; () banked
   994  000418  9938               	bcf	56,4,b	;volatile
   995                           
   996                           ;MELONPAN1_lib_ver1.20.h: 934: PIE5bits.TMR5IE=1;
   997  00041A  892E               	bsf	46,4,b	;volatile
   998                           
   999                           ;MELONPAN1_lib_ver1.20.h: 935: break;
  1000  00041C  0012               	return	
  1001  00041E                     l749:
  1002                           
  1003                           ; BSR set to: 0
  1004                           ;MELONPAN1_lib_ver1.20.h: 937: INTCONbits.PEIE=1;
  1005  00041E  8CF2               	bsf	intcon,6,c	;volatile
  1006                           
  1007                           ;MELONPAN1_lib_ver1.20.h: 938: PIR5bits.TMR7IF=0;
  1008  000420  010E               	movlb	14	; () banked
  1009  000422  9D38               	bcf	56,6,b	;volatile
  1010                           
  1011                           ;MELONPAN1_lib_ver1.20.h: 939: PIE5bits.TMR7IE=1;
  1012  000424  8D2E               	bsf	46,6,b	;volatile
  1013                           
  1014                           ;MELONPAN1_lib_ver1.20.h: 940: break;
  1015  000426  0012               	return	
  1016  000428                     l750:
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;MELONPAN1_lib_ver1.20.h: 942: INTCONbits.PEIE=1;
  1020  000428  8CF2               	bsf	intcon,6,c	;volatile
  1021                           
  1022                           ;MELONPAN1_lib_ver1.20.h: 943: PIR5bits.TMR2IF=0;
  1023  00042A  010E               	movlb	14	; () banked
  1024  00042C  9338               	bcf	56,1,b	;volatile
  1025                           
  1026                           ;MELONPAN1_lib_ver1.20.h: 944: PIE5bits.TMR2IE=1;
  1027  00042E  832E               	bsf	46,1,b	;volatile
  1028                           
  1029                           ;MELONPAN1_lib_ver1.20.h: 945: break;
  1030  000430  0012               	return	
  1031  000432                     l751:
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;MELONPAN1_lib_ver1.20.h: 947: INTCONbits.PEIE=1;
  1035  000432  8CF2               	bsf	intcon,6,c	;volatile
  1036                           
  1037                           ;MELONPAN1_lib_ver1.20.h: 948: PIR5bits.TMR4IF=0;
  1038  000434  010E               	movlb	14	; () banked
  1039  000436  9738               	bcf	56,3,b	;volatile
  1040                           
  1041                           ;MELONPAN1_lib_ver1.20.h: 949: PIE5bits.TMR4IE=1;
  1042  000438  872E               	bsf	46,3,b	;volatile
  1043                           
  1044                           ;MELONPAN1_lib_ver1.20.h: 950: break;
  1045  00043A  0012               	return	
  1046  00043C                     l752:
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;MELONPAN1_lib_ver1.20.h: 952: INTCONbits.PEIE=1;
  1050  00043C  8CF2               	bsf	intcon,6,c	;volatile
  1051                           
  1052                           ;MELONPAN1_lib_ver1.20.h: 953: PIR5bits.TMR6IF=0;
  1053  00043E  010E               	movlb	14	; () banked
  1054  000440  9B38               	bcf	56,5,b	;volatile
  1055                           
  1056                           ;MELONPAN1_lib_ver1.20.h: 954: PIE5bits.TMR6IE=1;
  1057  000442  8B2E               	bsf	46,5,b	;volatile
  1058                           
  1059                           ;MELONPAN1_lib_ver1.20.h: 955: break;
  1060  000444  0012               	return	
  1061  000446                     l753:
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;MELONPAN1_lib_ver1.20.h: 957: INTCONbits.PEIE=1;
  1065  000446  8CF2               	bsf	intcon,6,c	;volatile
  1066                           
  1067                           ;MELONPAN1_lib_ver1.20.h: 958: PIR5bits.TMR8IF=0;
  1068  000448  010E               	movlb	14	; () banked
  1069  00044A  9F38               	bcf	56,7,b	;volatile
  1070                           
  1071                           ;MELONPAN1_lib_ver1.20.h: 959: PIE5bits.TMR8IE=1;
  1072  00044C  8F2E               	bsf	46,7,b	;volatile
  1073                           
  1074                           ;MELONPAN1_lib_ver1.20.h: 960: break;
  1075  00044E  0012               	return	
  1076  000450                     l754:
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;MELONPAN1_lib_ver1.20.h: 962: INTCONbits.PEIE=1;
  1080  000450  8CF2               	bsf	intcon,6,c	;volatile
  1081                           
  1082                           ;MELONPAN1_lib_ver1.20.h: 963: PIE3bits.RC1IE=1;
  1083  000452  010E               	movlb	14	; () banked
  1084  000454  8B2C               	bsf	44,5,b	;volatile
  1085                           
  1086                           ;MELONPAN1_lib_ver1.20.h: 964: break;
  1087  000456  0012               	return	
  1088  000458                     l755:
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;MELONPAN1_lib_ver1.20.h: 966: INTCONbits.PEIE=1;
  1092  000458  8CF2               	bsf	intcon,6,c	;volatile
  1093                           
  1094                           ;MELONPAN1_lib_ver1.20.h: 967: PIE3bits.RC2IE=1;
  1095  00045A  010E               	movlb	14	; () banked
  1096  00045C  8F2C               	bsf	44,7,b	;volatile
  1097                           
  1098                           ;MELONPAN1_lib_ver1.20.h: 968: break;
  1099  00045E  0012               	return	
  1100  000460                     l756:
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;MELONPAN1_lib_ver1.20.h: 970: INTCONbits.PEIE=1;
  1104  000460  8CF2               	bsf	intcon,6,c	;volatile
  1105                           
  1106                           ;MELONPAN1_lib_ver1.20.h: 971: PIE4bits.RC3IE=1;
  1107  000462  010E               	movlb	14	; () banked
  1108  000464  832D               	bsf	45,1,b	;volatile
  1109                           
  1110                           ;MELONPAN1_lib_ver1.20.h: 972: break;
  1111  000466  0012               	return	
  1112  000468                     l757:
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;MELONPAN1_lib_ver1.20.h: 974: INTCONbits.PEIE=1;
  1116  000468  8CF2               	bsf	intcon,6,c	;volatile
  1117                           
  1118                           ;MELONPAN1_lib_ver1.20.h: 975: PIE4bits.RC4IE=1;
  1119  00046A  010E               	movlb	14	; () banked
  1120  00046C  872D               	bsf	45,3,b	;volatile
  1121                           
  1122                           ;MELONPAN1_lib_ver1.20.h: 976: break;
  1123  00046E  0012               	return	
  1124  000470                     l758:
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;MELONPAN1_lib_ver1.20.h: 978: INTCONbits.PEIE=1;
  1128  000470  8CF2               	bsf	intcon,6,c	;volatile
  1129                           
  1130                           ;MELONPAN1_lib_ver1.20.h: 979: PIE4bits.RC5IE=1;
  1131  000472  010E               	movlb	14	; () banked
  1132  000474  8B2D               	bsf	45,5,b	;volatile
  1133                           
  1134                           ; BSR set to: 14
  1135                           ;MELONPAN1_lib_ver1.20.h: 981: }
  1136                           
  1137                           ;MELONPAN1_lib_ver1.20.h: 980: break;
  1138  000476  0012               	return	
  1139  000478                     l742:
  1140                           
  1141                           ; BSR set to: 14
  1142  000478  0100               	movlb	0	; () banked
  1143  00047A  516A               	movf	enable_interrupts@data& (0+255),w,b
  1144                           
  1145                           ; Switch size 1, requested type "space"
  1146                           ; Number of cases is 15, Range of values is 0 to 14
  1147                           ; switch strategies available:
  1148                           ; Name         Instructions Cycles
  1149                           ; simple_byte           46    24 (average)
  1150                           ;	Chosen strategy is simple_byte
  1151  00047C  0A00               	xorlw	0	; case 0
  1152  00047E  B4D8               	btfsc	status,2,c
  1153  000480  D7B8               	goto	l743
  1154  000482  0A01               	xorlw	1	; case 1
  1155  000484  B4D8               	btfsc	status,2,c
  1156  000486  D7B7               	goto	l745
  1157  000488  0A03               	xorlw	3	; case 2
  1158  00048A  B4D8               	btfsc	status,2,c
  1159  00048C  D7B9               	goto	l746
  1160  00048E  0A01               	xorlw	1	; case 3
  1161  000490  B4D8               	btfsc	status,2,c
  1162  000492  D7CA               	goto	l750
  1163  000494  0A07               	xorlw	7	; case 4
  1164  000496  B4D8               	btfsc	status,2,c
  1165  000498  D7B8               	goto	l747
  1166  00049A  0A01               	xorlw	1	; case 5
  1167  00049C  B4D8               	btfsc	status,2,c
  1168  00049E  D7C9               	goto	l751
  1169  0004A0  0A03               	xorlw	3	; case 6
  1170  0004A2  B4D8               	btfsc	status,2,c
  1171  0004A4  D7B7               	goto	l748
  1172  0004A6  0A01               	xorlw	1	; case 7
  1173  0004A8  B4D8               	btfsc	status,2,c
  1174  0004AA  D7C8               	goto	l752
  1175  0004AC  0A0F               	xorlw	15	; case 8
  1176  0004AE  B4D8               	btfsc	status,2,c
  1177  0004B0  D7B6               	goto	l749
  1178  0004B2  0A01               	xorlw	1	; case 9
  1179  0004B4  B4D8               	btfsc	status,2,c
  1180  0004B6  D7C7               	goto	l753
  1181  0004B8  0A03               	xorlw	3	; case 10
  1182  0004BA  B4D8               	btfsc	status,2,c
  1183  0004BC  D7C9               	goto	l754
  1184  0004BE  0A01               	xorlw	1	; case 11
  1185  0004C0  B4D8               	btfsc	status,2,c
  1186  0004C2  D7CA               	goto	l755
  1187  0004C4  0A07               	xorlw	7	; case 12
  1188  0004C6  B4D8               	btfsc	status,2,c
  1189  0004C8  D7CB               	goto	l756
  1190  0004CA  0A01               	xorlw	1	; case 13
  1191  0004CC  B4D8               	btfsc	status,2,c
  1192  0004CE  D7CC               	goto	l757
  1193  0004D0  0A03               	xorlw	3	; case 14
  1194  0004D2  A4D8               	btfss	status,2,c
  1195  0004D4  0012               	return	
  1196  0004D6  D7CC               	goto	l758
  1197  0004D8                     __end_of_enable_interrupts:
  1198                           	opt stack 0
  1199                           tblptru	equ	0xFF8
  1200                           tblptrh	equ	0xFF7
  1201                           tblptrl	equ	0xFF6
  1202                           tablat	equ	0xFF5
  1203                           intcon	equ	0xFF2
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1l	equ	0xFE1
  1208                           status	equ	0xFD8
  1209                           
  1210 ;; *************** function _TIMER0_setup *****************
  1211 ;; Defined at:
  1212 ;;		line 708 in file "MELONPAN1_lib_ver1.20.h"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  data            2    0[BANK0 ] unsigned int 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1226 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1229 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;Total ram usage:        2 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    3
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_read_ds_dual_init
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text5
  1241  0008DE                     __ptext5:
  1242                           	opt stack 0
  1243  0008DE                     _TIMER0_setup:
  1244                           	opt stack 26
  1245                           
  1246                           ;MELONPAN1_lib_ver1.20.h: 709: T0CON1=(char)((data>>8) & 0xff);
  1247                           
  1248                           ;incstack = 0
  1249  0008DE  0100               	movlb	0	; () banked
  1250  0008E0  516B               	movf	(TIMER0_setup@data+1)& (0+255),w,b
  1251  0008E2  6ED6               	movwf	4054,c	;volatile
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;MELONPAN1_lib_ver1.20.h: 710: T0CON0=((char)(data & 0xff)) | 0x80;
  1255  0008E4  516A               	movf	TIMER0_setup@data& (0+255),w,b
  1256  0008E6  0980               	iorlw	128
  1257  0008E8  6ED5               	movwf	4053,c	;volatile
  1258                           
  1259                           ; BSR set to: 0
  1260  0008EA  0012               	return		;funcret
  1261  0008EC                     __end_of_TIMER0_setup:
  1262                           	opt stack 0
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           intcon	equ	0xFF2
  1268                           postinc0	equ	0xFEE
  1269                           wreg	equ	0xFE8
  1270                           postdec1	equ	0xFE5
  1271                           fsr1l	equ	0xFE1
  1272                           status	equ	0xFD8
  1273                           
  1274 ;; *************** function _TIMER0_16bit_set_count *****************
  1275 ;; Defined at:
  1276 ;;		line 721 in file "MELONPAN1_lib_ver1.20.h"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  data            2    0[BANK0 ] unsigned int 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1290 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;Total ram usage:        2 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    3
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_read_ds_dual_init
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text6
  1305  0008EC                     __ptext6:
  1306                           	opt stack 0
  1307  0008EC                     _TIMER0_16bit_set_count:
  1308                           	opt stack 26
  1309                           
  1310                           ;MELONPAN1_lib_ver1.20.h: 722: TMR0H=(char)(data>>8);
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;incstack = 0
  1314  0008EC  0100               	movlb	0	; () banked
  1315  0008EE  516B               	movf	(TIMER0_16bit_set_count@data+1)& (0+255),w,b
  1316  0008F0  6ED4               	movwf	4052,c	;volatile
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;MELONPAN1_lib_ver1.20.h: 723: TMR0L=(char)(data);
  1320  0008F2  C06A  FFD3         	movff	TIMER0_16bit_set_count@data,4051	;volatile
  1321                           
  1322                           ; BSR set to: 0
  1323  0008F6  0012               	return		;funcret
  1324  0008F8                     __end_of_TIMER0_16bit_set_count:
  1325                           	opt stack 0
  1326                           tblptru	equ	0xFF8
  1327                           tblptrh	equ	0xFF7
  1328                           tblptrl	equ	0xFF6
  1329                           tablat	equ	0xFF5
  1330                           intcon	equ	0xFF2
  1331                           postinc0	equ	0xFEE
  1332                           wreg	equ	0xFE8
  1333                           postdec1	equ	0xFE5
  1334                           fsr1l	equ	0xFE1
  1335                           status	equ	0xFD8
  1336                           
  1337 ;; *************** function _Serial1_begin *****************
  1338 ;; Defined at:
  1339 ;;		line 458 in file "MELONPAN1_lib_ver1.20.h"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  speed           2    0[BANK0 ] unsigned int 
  1342 ;;  data            1    2[BANK0 ] unsigned char 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;		None
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, status,0
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1354 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1357 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1358 ;;Total ram usage:        3 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    3
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_read_ds_dual_init
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text7
  1369  0005D8                     __ptext7:
  1370                           	opt stack 0
  1371  0005D8                     _Serial1_begin:
  1372                           	opt stack 26
  1373                           
  1374                           ;MELONPAN1_lib_ver1.20.h: 462: }else if(speed==57600){
  1375                           
  1376                           ;MELONPAN1_lib_ver1.20.h: 461: SP1BRGL=0x8A;
  1377                           
  1378                           ;MELONPAN1_lib_ver1.20.h: 460: SP1BRGH=0x00;
  1379                           
  1380                           ;MELONPAN1_lib_ver1.20.h: 459: if(speed==115200){
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;incstack = 0
  1384  0005D8  0EE1               	movlw	225
  1385  0005DA  0100               	movlb	0	; () banked
  1386  0005DC  196B               	xorwf	(Serial1_begin@speed+1)& (0+255),w,b
  1387  0005DE  116A               	iorwf	Serial1_begin@speed& (0+255),w,b
  1388  0005E0  A4D8               	btfss	status,2,c
  1389  0005E2  D004               	goto	l458
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;MELONPAN1_lib_ver1.20.h: 463: SP1BRGH=0x01;
  1393  0005E4  0E01               	movlw	1
  1394  0005E6  6E9B               	movwf	3995,c	;volatile
  1395                           
  1396                           ;MELONPAN1_lib_ver1.20.h: 464: SP1BRGL=0x15;
  1397  0005E8  0E15               	movlw	21
  1398  0005EA  D029               	goto	L5
  1399  0005EC                     l458:
  1400                           
  1401                           ; BSR set to: 0
  1402                           
  1403                           ; BSR set to: 0
  1404  0005EC  0E4B               	movlw	75
  1405  0005EE  196B               	xorwf	(Serial1_begin@speed+1)& (0+255),w,b
  1406  0005F0  116A               	iorwf	Serial1_begin@speed& (0+255),w,b
  1407  0005F2  A4D8               	btfss	status,2,c
  1408  0005F4  D004               	goto	l460
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;MELONPAN1_lib_ver1.20.h: 466: SP1BRGH=0x03;
  1412  0005F6  0E03               	movlw	3
  1413  0005F8  6E9B               	movwf	3995,c	;volatile
  1414                           
  1415                           ;MELONPAN1_lib_ver1.20.h: 467: SP1BRGL=0x40;
  1416  0005FA  0E40               	movlw	64
  1417  0005FC  D020               	goto	L5
  1418  0005FE                     l460:
  1419                           
  1420                           ; BSR set to: 0
  1421                           
  1422                           ; BSR set to: 0
  1423  0005FE  0E80               	movlw	128
  1424  000600  196A               	xorwf	Serial1_begin@speed& (0+255),w,b
  1425  000602  E108               	bnz	l3666
  1426  000604  0E25               	movlw	37
  1427  000606  196B               	xorwf	(Serial1_begin@speed+1)& (0+255),w,b
  1428  000608  A4D8               	btfss	status,2,c
  1429  00060A  D004               	goto	l462
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;MELONPAN1_lib_ver1.20.h: 469: SP1BRGH=0x06;
  1433  00060C  0E06               	movlw	6
  1434  00060E  6E9B               	movwf	3995,c	;volatile
  1435                           
  1436                           ;MELONPAN1_lib_ver1.20.h: 470: SP1BRGL=0x82;
  1437  000610  0E82               	movlw	130
  1438  000612  D015               	goto	L5
  1439  000614                     l462:
  1440  000614                     l3666:
  1441                           
  1442                           ; BSR set to: 0
  1443  000614  0E60               	movlw	96
  1444  000616  196A               	xorwf	Serial1_begin@speed& (0+255),w,b
  1445  000618  E108               	bnz	l3670
  1446  00061A  0E09               	movlw	9
  1447  00061C  196B               	xorwf	(Serial1_begin@speed+1)& (0+255),w,b
  1448  00061E  A4D8               	btfss	status,2,c
  1449  000620  D004               	goto	l464
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;MELONPAN1_lib_ver1.20.h: 472: SP1BRGH=0x1A;
  1453  000622  0E1A               	movlw	26
  1454  000624  6E9B               	movwf	3995,c	;volatile
  1455                           
  1456                           ;MELONPAN1_lib_ver1.20.h: 473: SP1BRGL=0x0A;
  1457  000626  0E0A               	movlw	10
  1458  000628  D00A               	goto	L5
  1459  00062A                     l464:
  1460  00062A                     l3670:
  1461                           
  1462                           ; BSR set to: 0
  1463  00062A  0EB0               	movlw	176
  1464  00062C  196A               	xorwf	Serial1_begin@speed& (0+255),w,b
  1465  00062E  E108               	bnz	l457
  1466  000630  0E04               	movlw	4
  1467  000632  196B               	xorwf	(Serial1_begin@speed+1)& (0+255),w,b
  1468  000634  A4D8               	btfss	status,2,c
  1469  000636  D004               	goto	l466
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;MELONPAN1_lib_ver1.20.h: 475: SP1BRGH=0x34;
  1473  000638  0E34               	movlw	52
  1474  00063A  6E9B               	movwf	3995,c	;volatile
  1475                           
  1476                           ;MELONPAN1_lib_ver1.20.h: 476: SP1BRGL=0x14;
  1477  00063C  0E14               	movlw	20
  1478  00063E                     L5:
  1479  00063E  6E9A               	movwf	3994,c	;volatile
  1480  000640                     l466:
  1481  000640                     l457:
  1482                           
  1483                           ;MELONPAN1_lib_ver1.20.h: 477: }
  1484                           ;MELONPAN1_lib_ver1.20.h: 479: TX1STA=0x24;
  1485  000640  0E24               	movlw	36
  1486  000642  6E9D               	movwf	3997,c	;volatile
  1487                           
  1488                           ;MELONPAN1_lib_ver1.20.h: 480: RC1STA=0x90;
  1489  000644  0E90               	movlw	144
  1490  000646  6E9C               	movwf	3996,c	;volatile
  1491                           
  1492                           ;MELONPAN1_lib_ver1.20.h: 481: BAUD1CON=0x08 | data;
  1493  000648  0100               	movlb	0	; () banked
  1494  00064A  516C               	movf	Serial1_begin@data& (0+255),w,b
  1495  00064C  0908               	iorlw	8
  1496  00064E  6E9E               	movwf	3998,c	;volatile
  1497                           
  1498                           ; BSR set to: 0
  1499  000650  0012               	return		;funcret
  1500  000652                     __end_of_Serial1_begin:
  1501                           	opt stack 0
  1502                           tblptru	equ	0xFF8
  1503                           tblptrh	equ	0xFF7
  1504                           tblptrl	equ	0xFF6
  1505                           tablat	equ	0xFF5
  1506                           intcon	equ	0xFF2
  1507                           postinc0	equ	0xFEE
  1508                           wreg	equ	0xFE8
  1509                           postdec1	equ	0xFE5
  1510                           fsr1l	equ	0xFE1
  1511                           status	equ	0xFD8
  1512                           
  1513 ;; *************** function _read_ds_dual_de_gozaru *****************
  1514 ;; Defined at:
  1515 ;;		line 130 in file "ds_dual_wood.h"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;		None
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1531 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1532 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1533 ;;Total ram usage:        1 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    6
  1536 ;; This function calls:
  1537 ;;		_BAD_de_gozaru
  1538 ;;		_GOOD_de_gozaru
  1539 ;;		_always_de_gozaru
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text8
  1546  0001F6                     __ptext8:
  1547                           	opt stack 0
  1548  0001F6                     _read_ds_dual_de_gozaru:
  1549                           	opt stack 24
  1550                           
  1551                           ;ds_dual_wood.h: 131: static char read_number;
  1552                           ;ds_dual_wood.h: 132: static char mode=0;
  1553                           ;ds_dual_wood.h: 133: static char check_sum;
  1554                           ;ds_dual_wood.h: 134: static char first_communication=1;
  1555                           ;ds_dual_wood.h: 135: if(DS_read_stop){
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;incstack = 0
  1559  0001F6  5035               	movf	_DS_read_stop,w,c
  1560  0001F8  B4D8               	btfsc	status,2,c
  1561  0001FA  D074               	goto	l1003
  1562                           
  1563                           ;ds_dual_wood.h: 136: DS_time_out=0;
  1564  0001FC  0E00               	movlw	0
  1565  0001FE  6E4E               	movwf	_DS_time_out,c
  1566                           
  1567                           ;ds_dual_wood.h: 137: switch(mode){
  1568  000200  D067               	goto	l1001
  1569  000202                     l1002:
  1570                           
  1571                           ;ds_dual_wood.h: 139: DS_data[0]=sinyounai_DS_data[0];
  1572  000202  C00E  F001         	movff	_sinyounai_DS_data,_DS_data
  1573                           
  1574                           ;ds_dual_wood.h: 140: read_number=1;
  1575  000206  0E01               	movlw	1
  1576  000208  6E34               	movwf	read_ds_dual_de_gozaru@read_number,c
  1577                           
  1578                           ;ds_dual_wood.h: 141: check_sum=0x0d;
  1579  00020A  0E0D               	movlw	13
  1580  00020C  6E32               	movwf	read_ds_dual_de_gozaru@check_sum,c
  1581                           
  1582                           ;ds_dual_wood.h: 142: mode=1;
  1583  00020E  0E01               	movlw	1
  1584  000210  D021               	goto	L6
  1585  000212                     
  1586                           ;ds_dual_wood.h: 145: DS_data[read_number]=sinyounai_DS_data[read_number];
  1587  000212  5034               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1588  000214  0D01               	mullw	1
  1589  000216  0E0E               	movlw	low _sinyounai_DS_data
  1590  000218  24F3               	addwf	prodl,w,c
  1591  00021A  6ED9               	movwf	fsr2l,c
  1592  00021C  0E00               	movlw	high _sinyounai_DS_data
  1593  00021E  20F4               	addwfc	prodh,w,c
  1594  000220  6EDA               	movwf	fsr2h,c
  1595  000222  5034               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1596  000224  0D01               	mullw	1
  1597  000226  0E01               	movlw	low _DS_data
  1598  000228  24F3               	addwf	prodl,w,c
  1599  00022A  6EE1               	movwf	fsr1l,c
  1600  00022C  0E00               	movlw	high _DS_data
  1601  00022E  20F4               	addwfc	prodh,w,c
  1602  000230  6EE2               	movwf	fsr1h,c
  1603  000232  CFDF FFE7          	movff	indf2,indf1
  1604                           
  1605                           ;ds_dual_wood.h: 146: check_sum+=DS_data[read_number];
  1606  000236  5034               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1607  000238  0D01               	mullw	1
  1608  00023A  0E01               	movlw	low _DS_data
  1609  00023C  24F3               	addwf	prodl,w,c
  1610  00023E  6ED9               	movwf	fsr2l,c
  1611  000240  0E00               	movlw	high _DS_data
  1612  000242  20F4               	addwfc	prodh,w,c
  1613  000244  6EDA               	movwf	fsr2h,c
  1614  000246  50DF               	movf	indf2,w,c
  1615  000248  2632               	addwf	read_ds_dual_de_gozaru@check_sum,f,c
  1616                           
  1617                           ;ds_dual_wood.h: 147: read_number++;
  1618  00024A  2A34               	incf	read_ds_dual_de_gozaru@read_number,f,c
  1619                           
  1620                           ;ds_dual_wood.h: 148: if(read_number>13-2){
  1621  00024C  0E0B               	movlw	11
  1622  00024E  6434               	cpfsgt	read_ds_dual_de_gozaru@read_number,c
  1623  000250  D049               	goto	l1003
  1624                           
  1625                           ;ds_dual_wood.h: 149: mode=2;
  1626  000252  0E02               	movlw	2
  1627  000254                     L6:
  1628  000254  6E33               	movwf	read_ds_dual_de_gozaru@mode,c
  1629                           
  1630                           ;ds_dual_wood.h: 150: }
  1631                           ;ds_dual_wood.h: 151: break;
  1632  000256  D046               	goto	l1003
  1633  000258                     
  1634                           ;ds_dual_wood.h: 153: DS_data[read_number]=sinyounai_DS_data[read_number];
  1635  000258  5034               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1636  00025A  0D01               	mullw	1
  1637  00025C  0E0E               	movlw	low _sinyounai_DS_data
  1638  00025E  24F3               	addwf	prodl,w,c
  1639  000260  6ED9               	movwf	fsr2l,c
  1640  000262  0E00               	movlw	high _sinyounai_DS_data
  1641  000264  20F4               	addwfc	prodh,w,c
  1642  000266  6EDA               	movwf	fsr2h,c
  1643  000268  5034               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1644  00026A  0D01               	mullw	1
  1645  00026C  0E01               	movlw	low _DS_data
  1646  00026E  24F3               	addwf	prodl,w,c
  1647  000270  6EE1               	movwf	fsr1l,c
  1648  000272  0E00               	movlw	high _DS_data
  1649  000274  20F4               	addwfc	prodh,w,c
  1650  000276  6EE2               	movwf	fsr1h,c
  1651  000278  CFDF FFE7          	movff	indf2,indf1
  1652                           
  1653                           ;ds_dual_wood.h: 154: DS_uart_number=0;
  1654  00027C  0E00               	movlw	0
  1655  00027E  6E36               	movwf	_DS_uart_number,c
  1656                           
  1657                           ;ds_dual_wood.h: 155: DS_read_stop=0;
  1658  000280  0E00               	movlw	0
  1659  000282  6E35               	movwf	_DS_read_stop,c
  1660                           
  1661                           ;ds_dual_wood.h: 156: mode=0;
  1662  000284  0E00               	movlw	0
  1663  000286  6E33               	movwf	read_ds_dual_de_gozaru@mode,c
  1664                           
  1665                           ;ds_dual_wood.h: 157: if(DS_data[read_number]==check_sum){
  1666  000288  5034               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1667  00028A  0D01               	mullw	1
  1668  00028C  0E01               	movlw	low _DS_data
  1669  00028E  24F3               	addwf	prodl,w,c
  1670  000290  6ED9               	movwf	fsr2l,c
  1671  000292  0E00               	movlw	high _DS_data
  1672  000294  20F4               	addwfc	prodh,w,c
  1673  000296  6EDA               	movwf	fsr2h,c
  1674  000298  5032               	movf	read_ds_dual_de_gozaru@check_sum,w,c
  1675  00029A  18DE               	xorwf	postinc2,w,c
  1676  00029C  A4D8               	btfss	status,2,c
  1677  00029E  D015               	goto	l1007
  1678                           
  1679                           ;ds_dual_wood.h: 158: push_DS_data[0]=~before_DS_data[0] & DS_data[6];
  1680  0002A0  504B               	movf	_before_DS_data,w,c
  1681  0002A2  0AFF               	xorlw	255
  1682  0002A4  1407               	andwf	_DS_data+6,w,c
  1683  0002A6  6E2F               	movwf	_push_DS_data,c
  1684                           
  1685                           ;ds_dual_wood.h: 159: push_DS_data[1]=~before_DS_data[1] & DS_data[7];
  1686  0002A8  504C               	movf	_before_DS_data+1,w,c
  1687  0002AA  0AFF               	xorlw	255
  1688  0002AC  1408               	andwf	_DS_data+7,w,c
  1689  0002AE  6E30               	movwf	_push_DS_data+1,c
  1690                           
  1691                           ;ds_dual_wood.h: 160: before_DS_data[0]=DS_data[6];
  1692  0002B0  C007  F04B         	movff	_DS_data+6,_before_DS_data
  1693                           
  1694                           ;ds_dual_wood.h: 161: before_DS_data[1]=DS_data[7];
  1695  0002B4  C008  F04C         	movff	_DS_data+7,_before_DS_data+1
  1696                           
  1697                           ;ds_dual_wood.h: 162: DS_communication_error_time=0;
  1698  0002B8  0E00               	movlw	0
  1699  0002BA  6E2E               	movwf	_DS_communication_error_time+1,c
  1700  0002BC  0E00               	movlw	0
  1701  0002BE  6E2D               	movwf	_DS_communication_error_time,c
  1702                           
  1703                           ;ds_dual_wood.h: 163: first_communication=0;
  1704  0002C0  0E00               	movlw	0
  1705  0002C2  6E4D               	movwf	read_ds_dual_de_gozaru@first_communication,c
  1706                           
  1707                           ;ds_dual_wood.h: 164: GOOD_de_gozaru();
  1708  0002C4  EC6C  F000         	call	_GOOD_de_gozaru	;wreg free
  1709                           
  1710                           ;ds_dual_wood.h: 165: }else{
  1711  0002C8  D00D               	goto	l1003
  1712  0002CA                     l1007:
  1713                           
  1714                           ;ds_dual_wood.h: 166: BAD_de_gozaru();
  1715  0002CA  EC91  F004         	call	_BAD_de_gozaru	;wreg free
  1716                           
  1717                           ;ds_dual_wood.h: 169: }
  1718                           
  1719                           ;ds_dual_wood.h: 167: }
  1720                           ;ds_dual_wood.h: 168: break;
  1721  0002CE  D00A               	goto	l1003
  1722  0002D0                     l1001:
  1723  0002D0  5033               	movf	read_ds_dual_de_gozaru@mode,w,c
  1724                           
  1725                           ; Switch size 1, requested type "space"
  1726                           ; Number of cases is 3, Range of values is 0 to 2
  1727                           ; switch strategies available:
  1728                           ; Name         Instructions Cycles
  1729                           ; simple_byte           10     6 (average)
  1730                           ;	Chosen strategy is simple_byte
  1731  0002D2  0A00               	xorlw	0	; case 0
  1732  0002D4  B4D8               	btfsc	status,2,c
  1733  0002D6  D795               	goto	l1002
  1734  0002D8  0A01               	xorlw	1	; case 1
  1735  0002DA  B4D8               	btfsc	status,2,c
  1736  0002DC  D79A               	goto	l1004
  1737  0002DE  0A03               	xorlw	3	; case 2
  1738  0002E0  B4D8               	btfsc	status,2,c
  1739  0002E2  D7BA               	goto	l1006
  1740  0002E4                     l1003:
  1741                           
  1742                           ;ds_dual_wood.h: 170: }
  1743                           ;ds_dual_wood.h: 171: if(DS_time_out>10){
  1744  0002E4  0E0A               	movlw	10
  1745  0002E6  644E               	cpfsgt	_DS_time_out,c
  1746  0002E8  D002               	goto	l1009
  1747                           
  1748                           ;ds_dual_wood.h: 172: BAD_de_gozaru();
  1749  0002EA  EC91  F004         	call	_BAD_de_gozaru	;wreg free
  1750  0002EE                     l1009:
  1751                           
  1752                           ;ds_dual_wood.h: 173: }
  1753                           ;ds_dual_wood.h: 182: always_de_gozaru();
  1754  0002EE  EC96  F004         	call	_always_de_gozaru	;wreg free
  1755  0002F2  0012               	return		;funcret
  1756  0002F4                     __end_of_read_ds_dual_de_gozaru:
  1757                           	opt stack 0
  1758                           tblptru	equ	0xFF8
  1759                           tblptrh	equ	0xFF7
  1760                           tblptrl	equ	0xFF6
  1761                           tablat	equ	0xFF5
  1762                           prodh	equ	0xFF4
  1763                           prodl	equ	0xFF3
  1764                           intcon	equ	0xFF2
  1765                           postinc0	equ	0xFEE
  1766                           wreg	equ	0xFE8
  1767                           indf1	equ	0xFE7
  1768                           postdec1	equ	0xFE5
  1769                           fsr1h	equ	0xFE2
  1770                           fsr1l	equ	0xFE1
  1771                           indf2	equ	0xFDF
  1772                           postinc2	equ	0xFDE
  1773                           fsr2h	equ	0xFDA
  1774                           fsr2l	equ	0xFD9
  1775                           status	equ	0xFD8
  1776                           
  1777 ;; *************** function _always_de_gozaru *****************
  1778 ;; Defined at:
  1779 ;;		line 110 in file "MELON PAN1_main.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		None
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    3
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_read_ds_dual_de_gozaru
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text9
  1808  00092C                     __ptext9:
  1809                           	opt stack 0
  1810  00092C                     _always_de_gozaru:
  1811                           	opt stack 26
  1812                           
  1813                           ;incstack = 0
  1814  00092C  0012               	return		;funcret
  1815  00092E                     __end_of_always_de_gozaru:
  1816                           	opt stack 0
  1817                           tblptru	equ	0xFF8
  1818                           tblptrh	equ	0xFF7
  1819                           tblptrl	equ	0xFF6
  1820                           tablat	equ	0xFF5
  1821                           prodh	equ	0xFF4
  1822                           prodl	equ	0xFF3
  1823                           intcon	equ	0xFF2
  1824                           postinc0	equ	0xFEE
  1825                           wreg	equ	0xFE8
  1826                           indf1	equ	0xFE7
  1827                           postdec1	equ	0xFE5
  1828                           fsr1h	equ	0xFE2
  1829                           fsr1l	equ	0xFE1
  1830                           indf2	equ	0xFDF
  1831                           postinc2	equ	0xFDE
  1832                           fsr2h	equ	0xFDA
  1833                           fsr2l	equ	0xFD9
  1834                           status	equ	0xFD8
  1835                           
  1836 ;; *************** function _GOOD_de_gozaru *****************
  1837 ;; Defined at:
  1838 ;;		line 71 in file "MELON PAN1_main.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, status,0, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1854 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1855 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1856 ;;Total ram usage:        1 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    5
  1859 ;; This function calls:
  1860 ;;		_DS_LEFT_UD_signed_VALUE
  1861 ;;		_bit_test
  1862 ;;		_make_s_driver_ver1_send_data
  1863 ;;		_output_LED5
  1864 ;;		_s_driver1_set_value
  1865 ;;		_s_driver2_set_value
  1866 ;;		_s_driver3_set_value
  1867 ;;		_s_driver4_set_value
  1868 ;; This function is called by:
  1869 ;;		_read_ds_dual_de_gozaru
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text10
  1874  0000D8                     __ptext10:
  1875                           	opt stack 0
  1876  0000D8                     _GOOD_de_gozaru:
  1877                           	opt stack 24
  1878                           
  1879                           ;MELON PAN1_main.c: 74: LATDbits.LATD0=0;
  1880                           
  1881                           ;incstack = 0
  1882  0000D8  907C               	bcf	3964,0,c	;volatile
  1883                           
  1884                           ;MELON PAN1_main.c: 75: LATHbits.LATH2=1;
  1885  0000DA  8480               	bsf	3968,2,c	;volatile
  1886                           
  1887                           ;MELON PAN1_main.c: 77: if(DS_data[1]==0x00){
  1888  0000DC  5002               	movf	_DS_data+1,w,c
  1889  0000DE  A4D8               	btfss	status,2,c
  1890  0000E0  D003               	goto	l1167
  1891                           
  1892                           ;MELON PAN1_main.c: 78: output_LED5(DS_data[3]);
  1893  0000E2  5004               	movf	_DS_data+3,w,c
  1894  0000E4  EC6C  F002         	call	_output_LED5
  1895  0000E8                     l1167:
  1896                           
  1897                           ;MELON PAN1_main.c: 79: }
  1898                           ;MELON PAN1_main.c: 81: if(bit_test(push_DS_data[1],5)){
  1899  0000E8  0E05               	movlw	5
  1900  0000EA  0100               	movlb	0	; () banked
  1901  0000EC  6F6A               	movwf	bit_test@bit_place& (0+255),b
  1902  0000EE  5030               	movf	_push_DS_data+1,w,c
  1903  0000F0  ECDC  F003         	call	_bit_test
  1904  0000F4  0900               	iorlw	0
  1905  0000F6  B4D8               	btfsc	status,2,c
  1906  0000F8  D010               	goto	l1168
  1907                           
  1908                           ;MELON PAN1_main.c: 82: LATHbits.LATH3=~LATHbits.LATH3;
  1909  0000FA  A680               	btfss	3968,3,c	;volatile
  1910  0000FC  D002               	goto	u1860
  1911  0000FE  0E01               	movlw	1
  1912  000100  D001               	goto	u1866
  1913  000102                     u1860:
  1914  000102  0E00               	movlw	0
  1915  000104                     u1866:
  1916  000104  0AFF               	xorlw	255
  1917  000106  0100               	movlb	0	; () banked
  1918  000108  6F6F               	movwf	??_GOOD_de_gozaru& (0+255),b
  1919  00010A  476F               	rlncf	??_GOOD_de_gozaru& (0+255),f,b
  1920  00010C  476F               	rlncf	??_GOOD_de_gozaru& (0+255),f,b
  1921  00010E  476F               	rlncf	??_GOOD_de_gozaru& (0+255),f,b
  1922  000110  5080               	movf	3968,w,c	;volatile
  1923  000112  196F               	xorwf	??_GOOD_de_gozaru& (0+255),w,b
  1924  000114  0BF7               	andlw	-9
  1925  000116  196F               	xorwf	??_GOOD_de_gozaru& (0+255),w,b
  1926  000118  6E80               	movwf	3968,c	;volatile
  1927  00011A                     l1168:
  1928                           
  1929                           ;MELON PAN1_main.c: 84: }
  1930                           ;MELON PAN1_main.c: 85: if(bit_test(push_DS_data[1],6)){
  1931                           
  1932                           ; BSR set to: 0
  1933  00011A  0E06               	movlw	6
  1934  00011C  0100               	movlb	0	; () banked
  1935  00011E  6F6A               	movwf	bit_test@bit_place& (0+255),b
  1936  000120  5030               	movf	_push_DS_data+1,w,c
  1937  000122  ECDC  F003         	call	_bit_test
  1938  000126  0900               	iorlw	0
  1939  000128  B4D8               	btfsc	status,2,c
  1940  00012A  D00F               	goto	l1169
  1941                           
  1942                           ;MELON PAN1_main.c: 86: LATDbits.LATD2=~LATDbits.LATD2;
  1943  00012C  A47C               	btfss	3964,2,c	;volatile
  1944  00012E  D002               	goto	u1880
  1945  000130  0E01               	movlw	1
  1946  000132  D001               	goto	u1886
  1947  000134                     u1880:
  1948  000134  0E00               	movlw	0
  1949  000136                     u1886:
  1950  000136  0AFF               	xorlw	255
  1951  000138  0100               	movlb	0	; () banked
  1952  00013A  6F6F               	movwf	??_GOOD_de_gozaru& (0+255),b
  1953  00013C  476F               	rlncf	??_GOOD_de_gozaru& (0+255),f,b
  1954  00013E  476F               	rlncf	??_GOOD_de_gozaru& (0+255),f,b
  1955  000140  507C               	movf	3964,w,c	;volatile
  1956  000142  196F               	xorwf	??_GOOD_de_gozaru& (0+255),w,b
  1957  000144  0BFB               	andlw	-5
  1958  000146  196F               	xorwf	??_GOOD_de_gozaru& (0+255),w,b
  1959  000148  6E7C               	movwf	3964,c	;volatile
  1960  00014A                     l1169:
  1961                           
  1962                           ;MELON PAN1_main.c: 88: }
  1963                           ;MELON PAN1_main.c: 90: if(DS_LEFT_UD_signed_VALUE() >= 127){
  1964                           
  1965                           ; BSR set to: 0
  1966  00014A  EC29  F003         	call	_DS_LEFT_UD_signed_VALUE	;wreg free
  1967  00014E  0100               	movlb	0	; () banked
  1968  000150  BF6B               	btfsc	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),7,b
  1969  000152  D025               	goto	l1170
  1970  000154  516B               	movf	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),w,b
  1971  000156  E104               	bnz	u1890
  1972  000158  0E7F               	movlw	127
  1973  00015A  5D6A               	subwf	?_DS_LEFT_UD_signed_VALUE& (0+255),w,b
  1974  00015C  A0D8               	btfss	status,0,c
  1975  00015E  D01F               	goto	l1170
  1976  000160                     u1890:
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;MELON PAN1_main.c: 91: s_driver1_set_value(make_s_driver_ver1_send_data(2,100));
  1980  000160  0E64               	movlw	100
  1981  000162  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  1982  000164  0E02               	movlw	2
  1983  000166  EC5B  F003         	call	_make_s_driver_ver1_send_data
  1984  00016A  EC43  F004         	call	_s_driver1_set_value
  1985                           
  1986                           ;MELON PAN1_main.c: 92: s_driver2_set_value(make_s_driver_ver1_send_data(2,100));
  1987  00016E  0E64               	movlw	100
  1988  000170  0100               	movlb	0	; () banked
  1989  000172  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  1990  000174  0E02               	movlw	2
  1991  000176  EC5B  F003         	call	_make_s_driver_ver1_send_data
  1992  00017A  EC30  F004         	call	_s_driver2_set_value
  1993                           
  1994                           ;MELON PAN1_main.c: 93: s_driver3_set_value(make_s_driver_ver1_send_data(2,100));
  1995  00017E  0E64               	movlw	100
  1996  000180  0100               	movlb	0	; () banked
  1997  000182  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  1998  000184  0E02               	movlw	2
  1999  000186  EC5B  F003         	call	_make_s_driver_ver1_send_data
  2000  00018A  EC1D  F004         	call	_s_driver3_set_value
  2001                           
  2002                           ;MELON PAN1_main.c: 94: s_driver4_set_value(make_s_driver_ver1_send_data(2,100));
  2003  00018E  0E64               	movlw	100
  2004  000190  0100               	movlb	0	; () banked
  2005  000192  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2006  000194  0E02               	movlw	2
  2007  000196  EC5B  F003         	call	_make_s_driver_ver1_send_data
  2008  00019A  EC0A  F004         	call	_s_driver4_set_value
  2009  00019E                     l1170:
  2010                           
  2011                           ;MELON PAN1_main.c: 95: }
  2012                           ;MELON PAN1_main.c: 96: if(DS_LEFT_UD_signed_VALUE() <= 127){
  2013  00019E  EC29  F003         	call	_DS_LEFT_UD_signed_VALUE	;wreg free
  2014  0001A2  0100               	movlb	0	; () banked
  2015  0001A4  BF6B               	btfsc	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),7,b
  2016  0001A6  D006               	goto	u1900
  2017  0001A8  516B               	movf	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),w,b
  2018  0001AA  E124               	bnz	l1172
  2019  0001AC  0E80               	movlw	128
  2020  0001AE  5D6A               	subwf	?_DS_LEFT_UD_signed_VALUE& (0+255),w,b
  2021  0001B0  B0D8               	btfsc	status,0,c
  2022  0001B2  0012               	return	
  2023  0001B4                     u1900:
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;MELON PAN1_main.c: 97: s_driver1_set_value(make_s_driver_ver1_send_data(3,100));
  2027  0001B4  0E64               	movlw	100
  2028  0001B6  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2029  0001B8  0E03               	movlw	3
  2030  0001BA  EC5B  F003         	call	_make_s_driver_ver1_send_data
  2031  0001BE  EC43  F004         	call	_s_driver1_set_value
  2032                           
  2033                           ;MELON PAN1_main.c: 98: s_driver2_set_value(make_s_driver_ver1_send_data(3,100));
  2034  0001C2  0E64               	movlw	100
  2035  0001C4  0100               	movlb	0	; () banked
  2036  0001C6  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2037  0001C8  0E03               	movlw	3
  2038  0001CA  EC5B  F003         	call	_make_s_driver_ver1_send_data
  2039  0001CE  EC30  F004         	call	_s_driver2_set_value
  2040                           
  2041                           ;MELON PAN1_main.c: 99: s_driver3_set_value(make_s_driver_ver1_send_data(3,100));
  2042  0001D2  0E64               	movlw	100
  2043  0001D4  0100               	movlb	0	; () banked
  2044  0001D6  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2045  0001D8  0E03               	movlw	3
  2046  0001DA  EC5B  F003         	call	_make_s_driver_ver1_send_data
  2047  0001DE  EC1D  F004         	call	_s_driver3_set_value
  2048                           
  2049                           ;MELON PAN1_main.c: 100: s_driver4_set_value(make_s_driver_ver1_send_data(3,100));
  2050  0001E2  0E64               	movlw	100
  2051  0001E4  0100               	movlb	0	; () banked
  2052  0001E6  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2053  0001E8  0E03               	movlw	3
  2054  0001EA  EC5B  F003         	call	_make_s_driver_ver1_send_data
  2055  0001EE  EC0A  F004         	call	_s_driver4_set_value
  2056  0001F2  0012               	return	
  2057  0001F4                     l1172:
  2058  0001F4  0012               	return		;funcret
  2059  0001F6                     __end_of_GOOD_de_gozaru:
  2060                           	opt stack 0
  2061                           tblptru	equ	0xFF8
  2062                           tblptrh	equ	0xFF7
  2063                           tblptrl	equ	0xFF6
  2064                           tablat	equ	0xFF5
  2065                           prodh	equ	0xFF4
  2066                           prodl	equ	0xFF3
  2067                           intcon	equ	0xFF2
  2068                           postinc0	equ	0xFEE
  2069                           wreg	equ	0xFE8
  2070                           indf1	equ	0xFE7
  2071                           postdec1	equ	0xFE5
  2072                           fsr1h	equ	0xFE2
  2073                           fsr1l	equ	0xFE1
  2074                           indf2	equ	0xFDF
  2075                           postinc2	equ	0xFDE
  2076                           fsr2h	equ	0xFDA
  2077                           fsr2l	equ	0xFD9
  2078                           status	equ	0xFD8
  2079                           
  2080 ;; *************** function _s_driver4_set_value *****************
  2081 ;; Defined at:
  2082 ;;		line 285 in file "pindef.h"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  value           1    wreg     unsigned char 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  value           1    2[BANK0 ] unsigned char 
  2087 ;;  temp            1    1[BANK0 ] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      unsigned char 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2098 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2100 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2101 ;;Total ram usage:        2 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    4
  2104 ;; This function calls:
  2105 ;;		_SPI_transfer
  2106 ;; This function is called by:
  2107 ;;		_GOOD_de_gozaru
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text11
  2112  000814                     __ptext11:
  2113                           	opt stack 0
  2114  000814                     _s_driver4_set_value:
  2115                           	opt stack 24
  2116                           
  2117                           ;incstack = 0
  2118                           ;s_driver4_set_value@value stored from wreg
  2119  000814  0100               	movlb	0	; () banked
  2120  000816  6F6C               	movwf	s_driver4_set_value@value& (0+255),b
  2121                           
  2122                           ;pindef.h: 286: char temp;
  2123                           ;pindef.h: 287: LATAbits.LATA0=0;
  2124  000818  9079               	bcf	3961,0,c	;volatile
  2125                           
  2126                           ;pindef.h: 288: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2127  00081A  0E35               	movlw	53
  2128  00081C                     u1977:
  2129  00081C  2EE8               	decfsz	wreg,f,c
  2130  00081E  D7FE               	bra	u1977
  2131  000820  F000               	nop	
  2132                           
  2133                           ;pindef.h: 289: temp = SPI_transfer(value);
  2134  000822  0100               	movlb	0	; () banked
  2135  000824  516C               	movf	s_driver4_set_value@value& (0+255),w,b
  2136  000826  EC56  F004         	call	_SPI_transfer
  2137  00082A  0100               	movlb	0	; () banked
  2138  00082C  6F6B               	movwf	s_driver4_set_value@temp& (0+255),b
  2139                           
  2140                           ;pindef.h: 290: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2141  00082E  0E35               	movlw	53
  2142  000830                     u1987:
  2143  000830  2EE8               	decfsz	wreg,f,c
  2144  000832  D7FE               	bra	u1987
  2145  000834  F000               	nop	
  2146                           
  2147                           ;pindef.h: 291: LATAbits.LATA0=1;
  2148  000836  8079               	bsf	3961,0,c	;volatile
  2149  000838  0012               	return	
  2150  00083A                     __end_of_s_driver4_set_value:
  2151                           	opt stack 0
  2152                           tblptru	equ	0xFF8
  2153                           tblptrh	equ	0xFF7
  2154                           tblptrl	equ	0xFF6
  2155                           tablat	equ	0xFF5
  2156                           prodh	equ	0xFF4
  2157                           prodl	equ	0xFF3
  2158                           intcon	equ	0xFF2
  2159                           postinc0	equ	0xFEE
  2160                           wreg	equ	0xFE8
  2161                           indf1	equ	0xFE7
  2162                           postdec1	equ	0xFE5
  2163                           fsr1h	equ	0xFE2
  2164                           fsr1l	equ	0xFE1
  2165                           indf2	equ	0xFDF
  2166                           postinc2	equ	0xFDE
  2167                           fsr2h	equ	0xFDA
  2168                           fsr2l	equ	0xFD9
  2169                           status	equ	0xFD8
  2170                           
  2171 ;; *************** function _s_driver3_set_value *****************
  2172 ;; Defined at:
  2173 ;;		line 275 in file "pindef.h"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  value           1    wreg     unsigned char 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  value           1    2[BANK0 ] unsigned char 
  2178 ;;  temp            1    1[BANK0 ] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      unsigned char 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2189 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;Total ram usage:        2 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    4
  2195 ;; This function calls:
  2196 ;;		_SPI_transfer
  2197 ;; This function is called by:
  2198 ;;		_GOOD_de_gozaru
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text12
  2203  00083A                     __ptext12:
  2204                           	opt stack 0
  2205  00083A                     _s_driver3_set_value:
  2206                           	opt stack 24
  2207                           
  2208                           ;incstack = 0
  2209                           ;s_driver3_set_value@value stored from wreg
  2210  00083A  0100               	movlb	0	; () banked
  2211  00083C  6F6C               	movwf	s_driver3_set_value@value& (0+255),b
  2212                           
  2213                           ;pindef.h: 276: char temp;
  2214                           ;pindef.h: 277: LATAbits.LATA1=0;
  2215  00083E  9279               	bcf	3961,1,c	;volatile
  2216                           
  2217                           ;pindef.h: 278: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2218  000840  0E35               	movlw	53
  2219  000842                     u1997:
  2220  000842  2EE8               	decfsz	wreg,f,c
  2221  000844  D7FE               	bra	u1997
  2222  000846  F000               	nop	
  2223                           
  2224                           ;pindef.h: 279: temp = SPI_transfer(value);
  2225  000848  0100               	movlb	0	; () banked
  2226  00084A  516C               	movf	s_driver3_set_value@value& (0+255),w,b
  2227  00084C  EC56  F004         	call	_SPI_transfer
  2228  000850  0100               	movlb	0	; () banked
  2229  000852  6F6B               	movwf	s_driver3_set_value@temp& (0+255),b
  2230                           
  2231                           ;pindef.h: 280: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2232  000854  0E35               	movlw	53
  2233  000856                     u2007:
  2234  000856  2EE8               	decfsz	wreg,f,c
  2235  000858  D7FE               	bra	u2007
  2236  00085A  F000               	nop	
  2237                           
  2238                           ;pindef.h: 281: LATAbits.LATA1=1;
  2239  00085C  8279               	bsf	3961,1,c	;volatile
  2240  00085E  0012               	return	
  2241  000860                     __end_of_s_driver3_set_value:
  2242                           	opt stack 0
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           prodh	equ	0xFF4
  2248                           prodl	equ	0xFF3
  2249                           intcon	equ	0xFF2
  2250                           postinc0	equ	0xFEE
  2251                           wreg	equ	0xFE8
  2252                           indf1	equ	0xFE7
  2253                           postdec1	equ	0xFE5
  2254                           fsr1h	equ	0xFE2
  2255                           fsr1l	equ	0xFE1
  2256                           indf2	equ	0xFDF
  2257                           postinc2	equ	0xFDE
  2258                           fsr2h	equ	0xFDA
  2259                           fsr2l	equ	0xFD9
  2260                           status	equ	0xFD8
  2261                           
  2262 ;; *************** function _s_driver2_set_value *****************
  2263 ;; Defined at:
  2264 ;;		line 265 in file "pindef.h"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  value           1    wreg     unsigned char 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  value           1    2[BANK0 ] unsigned char 
  2269 ;;  temp            1    1[BANK0 ] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      unsigned char 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2280 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2283 ;;Total ram usage:        2 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    4
  2286 ;; This function calls:
  2287 ;;		_SPI_transfer
  2288 ;; This function is called by:
  2289 ;;		_GOOD_de_gozaru
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	text13
  2294  000860                     __ptext13:
  2295                           	opt stack 0
  2296  000860                     _s_driver2_set_value:
  2297                           	opt stack 24
  2298                           
  2299                           ;incstack = 0
  2300                           ;s_driver2_set_value@value stored from wreg
  2301  000860  0100               	movlb	0	; () banked
  2302  000862  6F6C               	movwf	s_driver2_set_value@value& (0+255),b
  2303                           
  2304                           ;pindef.h: 266: char temp;
  2305                           ;pindef.h: 267: LATAbits.LATA2=0;
  2306  000864  9479               	bcf	3961,2,c	;volatile
  2307                           
  2308                           ;pindef.h: 268: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2309  000866  0E35               	movlw	53
  2310  000868                     u2017:
  2311  000868  2EE8               	decfsz	wreg,f,c
  2312  00086A  D7FE               	bra	u2017
  2313  00086C  F000               	nop	
  2314                           
  2315                           ;pindef.h: 269: temp = SPI_transfer(value);
  2316  00086E  0100               	movlb	0	; () banked
  2317  000870  516C               	movf	s_driver2_set_value@value& (0+255),w,b
  2318  000872  EC56  F004         	call	_SPI_transfer
  2319  000876  0100               	movlb	0	; () banked
  2320  000878  6F6B               	movwf	s_driver2_set_value@temp& (0+255),b
  2321                           
  2322                           ;pindef.h: 270: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2323  00087A  0E35               	movlw	53
  2324  00087C                     u2027:
  2325  00087C  2EE8               	decfsz	wreg,f,c
  2326  00087E  D7FE               	bra	u2027
  2327  000880  F000               	nop	
  2328                           
  2329                           ;pindef.h: 271: LATAbits.LATA2=1;
  2330  000882  8479               	bsf	3961,2,c	;volatile
  2331  000884  0012               	return	
  2332  000886                     __end_of_s_driver2_set_value:
  2333                           	opt stack 0
  2334                           tblptru	equ	0xFF8
  2335                           tblptrh	equ	0xFF7
  2336                           tblptrl	equ	0xFF6
  2337                           tablat	equ	0xFF5
  2338                           prodh	equ	0xFF4
  2339                           prodl	equ	0xFF3
  2340                           intcon	equ	0xFF2
  2341                           postinc0	equ	0xFEE
  2342                           wreg	equ	0xFE8
  2343                           indf1	equ	0xFE7
  2344                           postdec1	equ	0xFE5
  2345                           fsr1h	equ	0xFE2
  2346                           fsr1l	equ	0xFE1
  2347                           indf2	equ	0xFDF
  2348                           postinc2	equ	0xFDE
  2349                           fsr2h	equ	0xFDA
  2350                           fsr2l	equ	0xFD9
  2351                           status	equ	0xFD8
  2352                           
  2353 ;; *************** function _s_driver1_set_value *****************
  2354 ;; Defined at:
  2355 ;;		line 255 in file "pindef.h"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  value           1    wreg     unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  value           1    2[BANK0 ] unsigned char 
  2360 ;;  temp            1    1[BANK0 ] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      unsigned char 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;Total ram usage:        2 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    4
  2377 ;; This function calls:
  2378 ;;		_SPI_transfer
  2379 ;; This function is called by:
  2380 ;;		_GOOD_de_gozaru
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text14
  2385  000886                     __ptext14:
  2386                           	opt stack 0
  2387  000886                     _s_driver1_set_value:
  2388                           	opt stack 24
  2389                           
  2390                           ;incstack = 0
  2391                           ;s_driver1_set_value@value stored from wreg
  2392  000886  0100               	movlb	0	; () banked
  2393  000888  6F6C               	movwf	s_driver1_set_value@value& (0+255),b
  2394                           
  2395                           ;pindef.h: 256: char temp;
  2396                           ;pindef.h: 257: LATAbits.LATA3=0;
  2397  00088A  9679               	bcf	3961,3,c	;volatile
  2398                           
  2399                           ;pindef.h: 258: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2400  00088C  0E35               	movlw	53
  2401  00088E                     u2037:
  2402  00088E  2EE8               	decfsz	wreg,f,c
  2403  000890  D7FE               	bra	u2037
  2404  000892  F000               	nop	
  2405                           
  2406                           ;pindef.h: 259: temp = SPI_transfer(value);
  2407  000894  0100               	movlb	0	; () banked
  2408  000896  516C               	movf	s_driver1_set_value@value& (0+255),w,b
  2409  000898  EC56  F004         	call	_SPI_transfer
  2410  00089C  0100               	movlb	0	; () banked
  2411  00089E  6F6B               	movwf	s_driver1_set_value@temp& (0+255),b
  2412                           
  2413                           ;pindef.h: 260: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2414  0008A0  0E35               	movlw	53
  2415  0008A2                     u2047:
  2416  0008A2  2EE8               	decfsz	wreg,f,c
  2417  0008A4  D7FE               	bra	u2047
  2418  0008A6  F000               	nop	
  2419                           
  2420                           ;pindef.h: 261: LATAbits.LATA3=1;
  2421  0008A8  8679               	bsf	3961,3,c	;volatile
  2422  0008AA  0012               	return	
  2423  0008AC                     __end_of_s_driver1_set_value:
  2424                           	opt stack 0
  2425                           tblptru	equ	0xFF8
  2426                           tblptrh	equ	0xFF7
  2427                           tblptrl	equ	0xFF6
  2428                           tablat	equ	0xFF5
  2429                           prodh	equ	0xFF4
  2430                           prodl	equ	0xFF3
  2431                           intcon	equ	0xFF2
  2432                           postinc0	equ	0xFEE
  2433                           wreg	equ	0xFE8
  2434                           indf1	equ	0xFE7
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           indf2	equ	0xFDF
  2439                           postinc2	equ	0xFDE
  2440                           fsr2h	equ	0xFDA
  2441                           fsr2l	equ	0xFD9
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function _SPI_transfer *****************
  2445 ;; Defined at:
  2446 ;;		line 392 in file "MELONPAN1_lib_ver1.20.h"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  send_data       1    wreg     unsigned char 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  send_data       1    0[BANK0 ] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      unsigned char 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2461 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;Total ram usage:        1 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    3
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_s_driver1_set_value
  2471 ;;		_s_driver2_set_value
  2472 ;;		_s_driver3_set_value
  2473 ;;		_s_driver4_set_value
  2474 ;;		_s_driver5_set_value
  2475 ;;		_s_driver6_set_value
  2476 ;;		_s_driver7_set_value
  2477 ;;		_s_driver8_set_value
  2478 ;;		_s_driver9_set_value
  2479 ;;		_s_driver10_set_value
  2480 ;;		_s_driver11_set_value
  2481 ;;		_s_driver12_set_value
  2482 ;;		_s_driver13_set_value
  2483 ;;		_s_driver14_set_value
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text15
  2488  0008AC                     __ptext15:
  2489                           	opt stack 0
  2490  0008AC                     _SPI_transfer:
  2491                           	opt stack 24
  2492                           
  2493                           ;incstack = 0
  2494                           ;SPI_transfer@send_data stored from wreg
  2495  0008AC  0100               	movlb	0	; () banked
  2496  0008AE  6F6A               	movwf	SPI_transfer@send_data& (0+255),b
  2497                           
  2498                           ;MELONPAN1_lib_ver1.20.h: 394: SSP1CON1bits.WCOL = 0;
  2499  0008B0  9E95               	bcf	3989,7,c	;volatile
  2500                           
  2501                           ;MELONPAN1_lib_ver1.20.h: 395: SSP1BUF = send_data;
  2502  0008B2  C06A  FF91         	movff	SPI_transfer@send_data,3985	;volatile
  2503  0008B6  A094               	btfss	3988,0,c	;volatile
  2504  0008B8  D7FE               	goto	l403
  2505                           
  2506                           ;MELONPAN1_lib_ver1.20.h: 397: return (SSP1BUF);
  2507  0008BA  5091               	movf	3985,w,c	;volatile
  2508  0008BC  0012               	return		;funcret
  2509  0008BE                     __end_of_SPI_transfer:
  2510                           	opt stack 0
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           prodh	equ	0xFF4
  2516                           prodl	equ	0xFF3
  2517                           intcon	equ	0xFF2
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           indf1	equ	0xFE7
  2521                           postdec1	equ	0xFE5
  2522                           fsr1h	equ	0xFE2
  2523                           fsr1l	equ	0xFE1
  2524                           indf2	equ	0xFDF
  2525                           postinc2	equ	0xFDE
  2526                           fsr2h	equ	0xFDA
  2527                           fsr2l	equ	0xFD9
  2528                           status	equ	0xFD8
  2529                           
  2530 ;; *************** function _output_LED5 *****************
  2531 ;; Defined at:
  2532 ;;		line 151 in file "pindef.h"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  num             1    wreg     unsigned char 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  num             1    0[BANK0 ] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2549 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2550 ;;Total ram usage:        1 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    3
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_GOOD_de_gozaru
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text16
  2561  0004D8                     __ptext16:
  2562                           	opt stack 0
  2563  0004D8                     _output_LED5:
  2564                           	opt stack 25
  2565                           
  2566                           ;incstack = 0
  2567                           ;output_LED5@num stored from wreg
  2568  0004D8  0100               	movlb	0	; () banked
  2569  0004DA  6F6A               	movwf	output_LED5@num& (0+255),b
  2570                           
  2571                           ;pindef.h: 152: switch(num){
  2572  0004DC  D02A               	goto	l885
  2573  0004DE                     l886:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;pindef.h: 154: LATEbits.LATE3=0;
  2577  0004DE  967D               	bcf	3965,3,c	;volatile
  2578                           
  2579                           ;pindef.h: 155: LATEbits.LATE4=0;
  2580  0004E0  987D               	bcf	3965,4,c	;volatile
  2581                           
  2582                           ;pindef.h: 156: LATEbits.LATE5=0;
  2583  0004E2  9A7D               	bcf	3965,5,c	;volatile
  2584                           
  2585                           ;pindef.h: 157: LATEbits.LATE6=0;
  2586  0004E4  9C7D               	bcf	3965,6,c	;volatile
  2587                           
  2588                           ;pindef.h: 158: LATEbits.LATE7=0;
  2589  0004E6  9E7D               	bcf	3965,7,c	;volatile
  2590                           
  2591                           ;pindef.h: 159: break;
  2592  0004E8  0012               	return	
  2593  0004EA                     l888:
  2594                           
  2595                           ; BSR set to: 0
  2596                           ;pindef.h: 161: LATEbits.LATE3=0;
  2597  0004EA  967D               	bcf	3965,3,c	;volatile
  2598                           
  2599                           ;pindef.h: 162: LATEbits.LATE4=0;
  2600  0004EC  987D               	bcf	3965,4,c	;volatile
  2601                           
  2602                           ;pindef.h: 163: LATEbits.LATE5=0;
  2603  0004EE  9A7D               	bcf	3965,5,c	;volatile
  2604                           
  2605                           ;pindef.h: 164: LATEbits.LATE6=0;
  2606  0004F0  9C7D               	bcf	3965,6,c	;volatile
  2607                           
  2608                           ;pindef.h: 165: LATEbits.LATE7=1;
  2609  0004F2  8E7D               	bsf	3965,7,c	;volatile
  2610                           
  2611                           ;pindef.h: 166: break;
  2612  0004F4  0012               	return	
  2613  0004F6                     l889:
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;pindef.h: 168: LATEbits.LATE3=0;
  2617  0004F6  967D               	bcf	3965,3,c	;volatile
  2618                           
  2619                           ;pindef.h: 169: LATEbits.LATE4=0;
  2620  0004F8  987D               	bcf	3965,4,c	;volatile
  2621                           
  2622                           ;pindef.h: 170: LATEbits.LATE5=0;
  2623  0004FA  9A7D               	bcf	3965,5,c	;volatile
  2624                           
  2625                           ;pindef.h: 171: LATEbits.LATE6=1;
  2626  0004FC  8C7D               	bsf	3965,6,c	;volatile
  2627                           
  2628                           ;pindef.h: 172: LATEbits.LATE7=1;
  2629  0004FE  8E7D               	bsf	3965,7,c	;volatile
  2630                           
  2631                           ;pindef.h: 173: break;
  2632  000500  0012               	return	
  2633  000502                     l890:
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;pindef.h: 175: LATEbits.LATE3=0;
  2637  000502  967D               	bcf	3965,3,c	;volatile
  2638                           
  2639                           ;pindef.h: 176: LATEbits.LATE4=0;
  2640  000504  987D               	bcf	3965,4,c	;volatile
  2641                           
  2642                           ;pindef.h: 177: LATEbits.LATE5=1;
  2643  000506  8A7D               	bsf	3965,5,c	;volatile
  2644                           
  2645                           ;pindef.h: 178: LATEbits.LATE6=1;
  2646  000508  8C7D               	bsf	3965,6,c	;volatile
  2647                           
  2648                           ;pindef.h: 179: LATEbits.LATE7=1;
  2649  00050A  8E7D               	bsf	3965,7,c	;volatile
  2650                           
  2651                           ;pindef.h: 180: break;
  2652  00050C  0012               	return	
  2653  00050E                     l891:
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;pindef.h: 182: LATEbits.LATE3=0;
  2657  00050E  967D               	bcf	3965,3,c	;volatile
  2658                           
  2659                           ;pindef.h: 183: LATEbits.LATE4=1;
  2660  000510  887D               	bsf	3965,4,c	;volatile
  2661                           
  2662                           ;pindef.h: 184: LATEbits.LATE5=1;
  2663  000512  8A7D               	bsf	3965,5,c	;volatile
  2664                           
  2665                           ;pindef.h: 185: LATEbits.LATE6=1;
  2666  000514  8C7D               	bsf	3965,6,c	;volatile
  2667                           
  2668                           ;pindef.h: 186: LATEbits.LATE7=1;
  2669  000516  8E7D               	bsf	3965,7,c	;volatile
  2670                           
  2671                           ;pindef.h: 187: break;
  2672  000518  0012               	return	
  2673  00051A                     l892:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;pindef.h: 189: LATEbits.LATE3=1;
  2677  00051A  867D               	bsf	3965,3,c	;volatile
  2678                           
  2679                           ;pindef.h: 190: LATEbits.LATE4=1;
  2680  00051C  887D               	bsf	3965,4,c	;volatile
  2681                           
  2682                           ;pindef.h: 191: LATEbits.LATE5=1;
  2683  00051E  8A7D               	bsf	3965,5,c	;volatile
  2684                           
  2685                           ;pindef.h: 192: LATEbits.LATE6=1;
  2686  000520  8C7D               	bsf	3965,6,c	;volatile
  2687                           
  2688                           ;pindef.h: 193: LATEbits.LATE7=1;
  2689  000522  8E7D               	bsf	3965,7,c	;volatile
  2690                           
  2691                           ;pindef.h: 194: break;
  2692  000524  0012               	return	
  2693  000526                     l893:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;pindef.h: 196: LATEbits.LATE3=0;
  2697  000526  967D               	bcf	3965,3,c	;volatile
  2698                           
  2699                           ;pindef.h: 197: LATEbits.LATE4=0;
  2700  000528  987D               	bcf	3965,4,c	;volatile
  2701                           
  2702                           ;pindef.h: 198: LATEbits.LATE5=0;
  2703  00052A  9A7D               	bcf	3965,5,c	;volatile
  2704                           
  2705                           ;pindef.h: 199: LATEbits.LATE6=0;
  2706  00052C  9C7D               	bcf	3965,6,c	;volatile
  2707                           
  2708                           ;pindef.h: 200: LATEbits.LATE7=0;
  2709  00052E  9E7D               	bcf	3965,7,c	;volatile
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;pindef.h: 202: }
  2713                           
  2714                           ;pindef.h: 201: break;
  2715  000530  0012               	return	
  2716  000532                     l885:
  2717                           
  2718                           ; BSR set to: 0
  2719  000532  0100               	movlb	0	; () banked
  2720  000534  516A               	movf	output_LED5@num& (0+255),w,b
  2721                           
  2722                           ; Switch size 1, requested type "space"
  2723                           ; Number of cases is 6, Range of values is 0 to 5
  2724                           ; switch strategies available:
  2725                           ; Name         Instructions Cycles
  2726                           ; simple_byte           19    10 (average)
  2727                           ;	Chosen strategy is simple_byte
  2728  000536  0A00               	xorlw	0	; case 0
  2729  000538  B4D8               	btfsc	status,2,c
  2730  00053A  D7D1               	goto	l886
  2731  00053C  0A01               	xorlw	1	; case 1
  2732  00053E  B4D8               	btfsc	status,2,c
  2733  000540  D7D4               	goto	l888
  2734  000542  0A03               	xorlw	3	; case 2
  2735  000544  B4D8               	btfsc	status,2,c
  2736  000546  D7D7               	goto	l889
  2737  000548  0A01               	xorlw	1	; case 3
  2738  00054A  B4D8               	btfsc	status,2,c
  2739  00054C  D7DA               	goto	l890
  2740  00054E  0A07               	xorlw	7	; case 4
  2741  000550  B4D8               	btfsc	status,2,c
  2742  000552  D7DD               	goto	l891
  2743  000554  0A01               	xorlw	1	; case 5
  2744  000556  B4D8               	btfsc	status,2,c
  2745  000558  D7E0               	goto	l892
  2746  00055A  D7E5               	goto	l893
  2747  00055C                     __end_of_output_LED5:
  2748                           	opt stack 0
  2749                           tblptru	equ	0xFF8
  2750                           tblptrh	equ	0xFF7
  2751                           tblptrl	equ	0xFF6
  2752                           tablat	equ	0xFF5
  2753                           prodh	equ	0xFF4
  2754                           prodl	equ	0xFF3
  2755                           intcon	equ	0xFF2
  2756                           postinc0	equ	0xFEE
  2757                           wreg	equ	0xFE8
  2758                           indf1	equ	0xFE7
  2759                           postdec1	equ	0xFE5
  2760                           fsr1h	equ	0xFE2
  2761                           fsr1l	equ	0xFE1
  2762                           indf2	equ	0xFDF
  2763                           postinc2	equ	0xFDE
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768 ;; *************** function _make_s_driver_ver1_send_data *****************
  2769 ;; Defined at:
  2770 ;;		line 223 in file "pindef.h"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  mode            1    wreg     unsigned char 
  2773 ;;  pwm_value       1    0[BANK0 ] unsigned char 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  mode            1    1[BANK0 ] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      unsigned char 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2785 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;Total ram usage:        2 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    3
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_GOOD_de_gozaru
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text17
  2800  0006B6                     __ptext17:
  2801                           	opt stack 0
  2802  0006B6                     _make_s_driver_ver1_send_data:
  2803                           	opt stack 25
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;incstack = 0
  2807                           ;make_s_driver_ver1_send_data@mode stored from wreg
  2808  0006B6  0100               	movlb	0	; () banked
  2809  0006B8  6F6B               	movwf	make_s_driver_ver1_send_data@mode& (0+255),b
  2810                           
  2811                           ;pindef.h: 224: pwm_value = pwm_value >> 1;
  2812  0006BA  0100               	movlb	0	; () banked
  2813  0006BC  90D8               	bcf	status,0,c
  2814  0006BE  316A               	rrcf	make_s_driver_ver1_send_data@pwm_value& (0+255),w,b
  2815  0006C0  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;pindef.h: 225: if(!pwm_value){
  2819  0006C2  516A               	movf	make_s_driver_ver1_send_data@pwm_value& (0+255),w,b
  2820  0006C4  A4D8               	btfss	status,2,c
  2821  0006C6  D00C               	goto	l901
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;pindef.h: 226: pwm_value = 1;
  2825  0006C8  0E01               	movlw	1
  2826  0006CA  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;pindef.h: 227: }
  2830                           ;pindef.h: 228: switch(mode){
  2831  0006CC  D009               	goto	l901
  2832  0006CE                     
  2833                           ; BSR set to: 0
  2834                           ;pindef.h: 230: return 0b00000000;
  2835                           
  2836                           ; BSR set to: 0
  2837  0006CE  0E00               	movlw	0
  2838                           
  2839                           ; BSR set to: 0
  2840  0006D0  0012               	return	
  2841  0006D2                     
  2842                           ; BSR set to: 0
  2843                           ;pindef.h: 233: return 0b10000000;
  2844                           
  2845                           ; BSR set to: 0
  2846  0006D2  0E80               	movlw	128
  2847                           
  2848                           ; BSR set to: 0
  2849  0006D4  0012               	return	
  2850  0006D6                     
  2851                           ; BSR set to: 0
  2852                           ;pindef.h: 236: return 0b10000000 + pwm_value;
  2853                           
  2854                           ; BSR set to: 0
  2855  0006D6  516A               	movf	make_s_driver_ver1_send_data@pwm_value& (0+255),w,b
  2856  0006D8  0F80               	addlw	128
  2857                           
  2858                           ; BSR set to: 0
  2859  0006DA  0012               	return	
  2860  0006DC                     
  2861                           ; BSR set to: 0
  2862                           ;pindef.h: 239: return 0b00000000 + pwm_value;
  2863                           
  2864                           ; BSR set to: 0
  2865  0006DC  516A               	movf	make_s_driver_ver1_send_data@pwm_value& (0+255),w,b
  2866                           
  2867                           ; BSR set to: 0
  2868  0006DE  0012               	return	
  2869  0006E0                     l901:
  2870                           
  2871                           ; BSR set to: 0
  2872                           
  2873                           ; BSR set to: 0
  2874  0006E0  516B               	movf	make_s_driver_ver1_send_data@mode& (0+255),w,b
  2875                           
  2876                           ; Switch size 1, requested type "space"
  2877                           ; Number of cases is 4, Range of values is 0 to 3
  2878                           ; switch strategies available:
  2879                           ; Name         Instructions Cycles
  2880                           ; simple_byte           13     7 (average)
  2881                           ;	Chosen strategy is simple_byte
  2882  0006E2  0A00               	xorlw	0	; case 0
  2883  0006E4  B4D8               	btfsc	status,2,c
  2884  0006E6  D7F3               	goto	l902
  2885  0006E8  0A01               	xorlw	1	; case 1
  2886  0006EA  B4D8               	btfsc	status,2,c
  2887  0006EC  D7F2               	goto	l905
  2888  0006EE  0A03               	xorlw	3	; case 2
  2889  0006F0  B4D8               	btfsc	status,2,c
  2890  0006F2  D7F1               	goto	l906
  2891  0006F4  0A01               	xorlw	1	; case 3
  2892  0006F6  B4D8               	btfsc	status,2,c
  2893  0006F8  D7F1               	goto	l907
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;pindef.h: 242: return 0b10000000;
  2897                           
  2898                           ; BSR set to: 0
  2899  0006FA  0E80               	movlw	128
  2900  0006FC  0012               	return	
  2901  0006FE                     __end_of_make_s_driver_ver1_send_data:
  2902                           	opt stack 0
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           prodh	equ	0xFF4
  2908                           prodl	equ	0xFF3
  2909                           intcon	equ	0xFF2
  2910                           postinc0	equ	0xFEE
  2911                           wreg	equ	0xFE8
  2912                           indf1	equ	0xFE7
  2913                           postdec1	equ	0xFE5
  2914                           fsr1h	equ	0xFE2
  2915                           fsr1l	equ	0xFE1
  2916                           indf2	equ	0xFDF
  2917                           postinc2	equ	0xFDE
  2918                           fsr2h	equ	0xFDA
  2919                           fsr2l	equ	0xFD9
  2920                           status	equ	0xFD8
  2921                           
  2922 ;; *************** function _bit_test *****************
  2923 ;; Defined at:
  2924 ;;		line 1191 in file "MELONPAN1_lib_ver1.20.h"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  number          1    wreg     unsigned char 
  2927 ;;  bit_place       1    0[BANK0 ] unsigned char 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  number          1    3[BANK0 ] unsigned char 
  2930 ;;  i               1    4[BANK0 ] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      unsigned char 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2940 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;Total ram usage:        5 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    3
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_GOOD_de_gozaru
  2951 ;;		_bit_clear
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text18
  2956  0007B8                     __ptext18:
  2957                           	opt stack 0
  2958  0007B8                     _bit_test:
  2959                           	opt stack 25
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;incstack = 0
  2963                           ;bit_test@number stored from wreg
  2964  0007B8  0100               	movlb	0	; () banked
  2965  0007BA  6F6D               	movwf	bit_test@number& (0+255),b
  2966                           
  2967                           ;MELONPAN1_lib_ver1.20.h: 1192: char i;
  2968                           ;MELONPAN1_lib_ver1.20.h: 1193: i=number & (0b00000001<<bit_place);
  2969  0007BC  C06A  F06B         	movff	bit_test@bit_place,??_bit_test
  2970  0007C0  0E01               	movlw	1
  2971  0007C2  0100               	movlb	0	; () banked
  2972  0007C4  6F6C               	movwf	(??_bit_test+1)& (0+255),b
  2973  0007C6  2B6B               	incf	??_bit_test& (0+255),f,b
  2974  0007C8  D002               	goto	u1724
  2975  0007CA                     u1725:
  2976  0007CA  90D8               	bcf	status,0,c
  2977  0007CC  376C               	rlcf	(??_bit_test+1)& (0+255),f,b
  2978  0007CE                     u1724:
  2979  0007CE  2F6B               	decfsz	??_bit_test& (0+255),f,b
  2980  0007D0  D7FC               	goto	u1725
  2981  0007D2  0100               	movlb	0	; () banked
  2982  0007D4  516C               	movf	(??_bit_test+1)& (0+255),w,b
  2983  0007D6  156D               	andwf	bit_test@number& (0+255),w,b
  2984  0007D8  6F6E               	movwf	bit_test@i& (0+255),b
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;MELONPAN1_lib_ver1.20.h: 1194: if(i>0){
  2988  0007DA  516E               	movf	bit_test@i& (0+255),w,b
  2989  0007DC  B4D8               	btfsc	status,2,c
  2990  0007DE  D002               	goto	l874
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;MELONPAN1_lib_ver1.20.h: 1195: return 1;
  2994  0007E0  0E01               	movlw	1
  2995                           
  2996                           ; BSR set to: 0
  2997  0007E2  0012               	return	
  2998  0007E4                     l874:
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;MELONPAN1_lib_ver1.20.h: 1196: }
  3002                           ;MELONPAN1_lib_ver1.20.h: 1197: return 0;
  3003                           
  3004                           ; BSR set to: 0
  3005  0007E4  0E00               	movlw	0
  3006  0007E6  0012               	return	
  3007  0007E8                     __end_of_bit_test:
  3008                           	opt stack 0
  3009                           tblptru	equ	0xFF8
  3010                           tblptrh	equ	0xFF7
  3011                           tblptrl	equ	0xFF6
  3012                           tablat	equ	0xFF5
  3013                           prodh	equ	0xFF4
  3014                           prodl	equ	0xFF3
  3015                           intcon	equ	0xFF2
  3016                           postinc0	equ	0xFEE
  3017                           wreg	equ	0xFE8
  3018                           indf1	equ	0xFE7
  3019                           postdec1	equ	0xFE5
  3020                           fsr1h	equ	0xFE2
  3021                           fsr1l	equ	0xFE1
  3022                           indf2	equ	0xFDF
  3023                           postinc2	equ	0xFDE
  3024                           fsr2h	equ	0xFDA
  3025                           fsr2l	equ	0xFD9
  3026                           status	equ	0xFD8
  3027                           
  3028 ;; *************** function _DS_LEFT_UD_signed_VALUE *****************
  3029 ;; Defined at:
  3030 ;;		line 263 in file "ds_dual_wood.h"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  2    0[BANK0 ] int 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3044 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3047 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3048 ;;Total ram usage:        4 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    3
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_GOOD_de_gozaru
  3055 ;;		_DS_LEFT_DISTANCE_VALUE
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text19
  3060  000652                     __ptext19:
  3061                           	opt stack 0
  3062  000652                     _DS_LEFT_UD_signed_VALUE:
  3063                           	opt stack 25
  3064                           
  3065                           ;ds_dual_wood.h: 264: if(DS_data[11]==127 || DS_data[11]==128){
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;incstack = 0
  3069  000652  0E7F               	movlw	127
  3070  000654  180C               	xorwf	_DS_data+11,w,c
  3071  000656  B4D8               	btfsc	status,2,c
  3072  000658  D004               	goto	u1760
  3073  00065A  0E80               	movlw	128
  3074  00065C  180C               	xorwf	_DS_data+11,w,c
  3075  00065E  A4D8               	btfss	status,2,c
  3076  000660  D006               	goto	l1071
  3077  000662                     u1760:
  3078                           
  3079                           ;ds_dual_wood.h: 265: return 0;
  3080  000662  0E00               	movlw	0
  3081  000664  0100               	movlb	0	; () banked
  3082  000666  6F6B               	movwf	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),b
  3083  000668  0E00               	movlw	0
  3084  00066A  6F6A               	movwf	?_DS_LEFT_UD_signed_VALUE& (0+255),b
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;ds_dual_wood.h: 266: }else if(DS_data[11]>128){
  3088                           
  3089                           ; BSR set to: 0
  3090  00066C  0012               	return	
  3091  00066E                     l1071:
  3092                           
  3093                           ; BSR set to: 0
  3094  00066E  0E80               	movlw	128
  3095  000670  640C               	cpfsgt	_DS_data+11,c
  3096  000672  D00F               	goto	l1076
  3097                           
  3098                           ;ds_dual_wood.h: 267: return 128-(signed int)DS_data[11];
  3099  000674  500C               	movf	_DS_data+11,w,c
  3100  000676  0100               	movlb	0	; () banked
  3101  000678  6F6C               	movwf	??_DS_LEFT_UD_signed_VALUE& (0+255),b
  3102  00067A  6B6D               	clrf	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),b
  3103  00067C  1F6C               	comf	??_DS_LEFT_UD_signed_VALUE& (0+255),f,b
  3104  00067E  1F6D               	comf	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),f,b
  3105  000680  4B6C               	infsnz	??_DS_LEFT_UD_signed_VALUE& (0+255),f,b
  3106  000682  2B6D               	incf	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),f,b
  3107  000684  0E80               	movlw	128
  3108  000686  256C               	addwf	??_DS_LEFT_UD_signed_VALUE& (0+255),w,b
  3109  000688  6F6A               	movwf	?_DS_LEFT_UD_signed_VALUE& (0+255),b
  3110  00068A  0E00               	movlw	0
  3111  00068C  216D               	addwfc	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),w,b
  3112  00068E  6F6B               	movwf	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),b
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;ds_dual_wood.h: 268: }else if(DS_data[11]<127){
  3116                           
  3117                           ; BSR set to: 0
  3118  000690  0012               	return	
  3119  000692                     l1076:
  3120                           
  3121                           ; BSR set to: 0
  3122  000692  0E7F               	movlw	127
  3123  000694  600C               	cpfslt	_DS_data+11,c
  3124  000696  0012               	return	
  3125                           
  3126                           ;ds_dual_wood.h: 269: return 127-(signed int)DS_data[11];
  3127  000698  500C               	movf	_DS_data+11,w,c
  3128  00069A  0100               	movlb	0	; () banked
  3129  00069C  6F6C               	movwf	??_DS_LEFT_UD_signed_VALUE& (0+255),b
  3130  00069E  6B6D               	clrf	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),b
  3131  0006A0  1F6C               	comf	??_DS_LEFT_UD_signed_VALUE& (0+255),f,b
  3132  0006A2  1F6D               	comf	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),f,b
  3133  0006A4  4B6C               	infsnz	??_DS_LEFT_UD_signed_VALUE& (0+255),f,b
  3134  0006A6  2B6D               	incf	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),f,b
  3135  0006A8  0E7F               	movlw	127
  3136  0006AA  256C               	addwf	??_DS_LEFT_UD_signed_VALUE& (0+255),w,b
  3137  0006AC  6F6A               	movwf	?_DS_LEFT_UD_signed_VALUE& (0+255),b
  3138  0006AE  0E00               	movlw	0
  3139  0006B0  216D               	addwfc	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),w,b
  3140  0006B2  6F6B               	movwf	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),b
  3141                           
  3142                           ; BSR set to: 0
  3143                           
  3144                           ; BSR set to: 0
  3145                           
  3146                           ; BSR set to: 0
  3147  0006B4  0012               	return	
  3148  0006B6                     __end_of_DS_LEFT_UD_signed_VALUE:
  3149                           	opt stack 0
  3150                           tblptru	equ	0xFF8
  3151                           tblptrh	equ	0xFF7
  3152                           tblptrl	equ	0xFF6
  3153                           tablat	equ	0xFF5
  3154                           prodh	equ	0xFF4
  3155                           prodl	equ	0xFF3
  3156                           intcon	equ	0xFF2
  3157                           postinc0	equ	0xFEE
  3158                           wreg	equ	0xFE8
  3159                           indf1	equ	0xFE7
  3160                           postdec1	equ	0xFE5
  3161                           fsr1h	equ	0xFE2
  3162                           fsr1l	equ	0xFE1
  3163                           indf2	equ	0xFDF
  3164                           postinc2	equ	0xFDE
  3165                           fsr2h	equ	0xFDA
  3166                           fsr2l	equ	0xFD9
  3167                           status	equ	0xFD8
  3168                           
  3169 ;; *************** function _BAD_de_gozaru *****************
  3170 ;; Defined at:
  3171 ;;		line 105 in file "MELON PAN1_main.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		None
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3189 ;;Total ram usage:        0 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    3
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_read_ds_dual_de_gozaru
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text20
  3200  000922                     __ptext20:
  3201                           	opt stack 0
  3202  000922                     _BAD_de_gozaru:
  3203                           	opt stack 26
  3204                           
  3205                           ;MELON PAN1_main.c: 106: LATHbits.LATH2=0;
  3206                           
  3207                           ;incstack = 0
  3208  000922  9480               	bcf	3968,2,c	;volatile
  3209                           
  3210                           ;MELON PAN1_main.c: 107: LATDbits.LATD0=1;
  3211  000924  807C               	bsf	3964,0,c	;volatile
  3212  000926  0012               	return		;funcret
  3213  000928                     __end_of_BAD_de_gozaru:
  3214                           	opt stack 0
  3215                           tblptru	equ	0xFF8
  3216                           tblptrh	equ	0xFF7
  3217                           tblptrl	equ	0xFF6
  3218                           tablat	equ	0xFF5
  3219                           prodh	equ	0xFF4
  3220                           prodl	equ	0xFF3
  3221                           intcon	equ	0xFF2
  3222                           postinc0	equ	0xFEE
  3223                           wreg	equ	0xFE8
  3224                           indf1	equ	0xFE7
  3225                           postdec1	equ	0xFE5
  3226                           fsr1h	equ	0xFE2
  3227                           fsr1l	equ	0xFE1
  3228                           indf2	equ	0xFDF
  3229                           postinc2	equ	0xFDE
  3230                           fsr2h	equ	0xFDA
  3231                           fsr2l	equ	0xFD9
  3232                           status	equ	0xFD8
  3233                           
  3234 ;; *************** function _pin_init *****************
  3235 ;; Defined at:
  3236 ;;		line 75 in file "pindef.h"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;		None
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;		None
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  1    wreg      void 
  3243 ;; Registers used:
  3244 ;;		wreg, status,2
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3254 ;;Total ram usage:        0 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    3
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_main
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text21
  3265  0002F4                     __ptext21:
  3266                           	opt stack 0
  3267  0002F4                     _pin_init:
  3268                           	opt stack 27
  3269                           
  3270                           ;pindef.h: 77: LATA = 0x00;
  3271                           
  3272                           ;incstack = 0
  3273  0002F4  0E00               	movlw	0
  3274  0002F6  6E79               	movwf	3961,c	;volatile
  3275                           
  3276                           ;pindef.h: 78: LATB = 0x00;
  3277  0002F8  0E00               	movlw	0
  3278  0002FA  6E7A               	movwf	3962,c	;volatile
  3279                           
  3280                           ;pindef.h: 79: LATC = 0x00;
  3281  0002FC  0E00               	movlw	0
  3282  0002FE  6E7B               	movwf	3963,c	;volatile
  3283                           
  3284                           ;pindef.h: 80: LATD = 0x50;
  3285  000300  0E50               	movlw	80
  3286  000302  6E7C               	movwf	3964,c	;volatile
  3287                           
  3288                           ;pindef.h: 81: LATE = 0x00;
  3289  000304  0E00               	movlw	0
  3290  000306  6E7D               	movwf	3965,c	;volatile
  3291                           
  3292                           ;pindef.h: 82: LATF = 0x00;
  3293  000308  0E00               	movlw	0
  3294  00030A  6E7E               	movwf	3966,c	;volatile
  3295                           
  3296                           ;pindef.h: 83: LATG = 0x00;
  3297  00030C  0E00               	movlw	0
  3298  00030E  6E7F               	movwf	3967,c	;volatile
  3299                           
  3300                           ;pindef.h: 84: LATH = 0x00;
  3301  000310  0E00               	movlw	0
  3302  000312  6E80               	movwf	3968,c	;volatile
  3303                           
  3304                           ;pindef.h: 87: TRISA = 0b11000000;
  3305  000314  0EC0               	movlw	192
  3306  000316  6E81               	movwf	3969,c	;volatile
  3307                           
  3308                           ;pindef.h: 88: TRISB = 0b11111111;
  3309  000318  6882               	setf	3970,c	;volatile
  3310                           
  3311                           ;pindef.h: 89: TRISC = 0b10111110;
  3312  00031A  0EBE               	movlw	190
  3313  00031C  6E83               	movwf	3971,c	;volatile
  3314                           
  3315                           ;pindef.h: 90: TRISD = 0b10101000;
  3316  00031E  0EA8               	movlw	168
  3317  000320  6E84               	movwf	3972,c	;volatile
  3318                           
  3319                           ;pindef.h: 91: TRISE = 0b00000000;
  3320  000322  0E00               	movlw	0
  3321  000324  6E85               	movwf	3973,c	;volatile
  3322                           
  3323                           ;pindef.h: 92: TRISF = 0b11111111;
  3324  000326  6886               	setf	3974,c	;volatile
  3325                           
  3326                           ;pindef.h: 93: TRISG = 0b10111100;
  3327  000328  0EBC               	movlw	188
  3328  00032A  6E87               	movwf	3975,c	;volatile
  3329                           
  3330                           ;pindef.h: 94: TRISH = 0b11110000;
  3331  00032C  0EF0               	movlw	240
  3332  00032E  6E88               	movwf	3976,c	;volatile
  3333                           
  3334                           ;pindef.h: 106: ANSELA = 0x00;
  3335  000330  0E00               	movlw	0
  3336  000332  010E               	movlb	14	; () banked
  3337  000334  6F92               	movwf	146,b	;volatile
  3338                           
  3339                           ;pindef.h: 107: ANSELB = 0x00;
  3340  000336  0E00               	movlw	0
  3341  000338  6F9A               	movwf	154,b	;volatile
  3342                           
  3343                           ;pindef.h: 108: ANSELD = 0x00;
  3344  00033A  0E00               	movlw	0
  3345  00033C  6FA7               	movwf	167,b	;volatile
  3346                           
  3347                           ;pindef.h: 109: ANSELE = 0x00;
  3348  00033E  0E00               	movlw	0
  3349  000340  6FAF               	movwf	175,b	;volatile
  3350                           
  3351                           ;pindef.h: 110: ANSELF = 0x00;
  3352  000342  0E00               	movlw	0
  3353  000344  6FB4               	movwf	180,b	;volatile
  3354                           
  3355                           ;pindef.h: 111: ANSELG = 0x00;
  3356  000346  0E00               	movlw	0
  3357  000348  6FBC               	movwf	188,b	;volatile
  3358                           
  3359                           ;pindef.h: 114: WPUA = 0x00;
  3360  00034A  0E00               	movlw	0
  3361  00034C  6F91               	movwf	145,b	;volatile
  3362                           
  3363                           ;pindef.h: 115: WPUB = 0x00;
  3364  00034E  0E00               	movlw	0
  3365  000350  6F99               	movwf	153,b	;volatile
  3366                           
  3367                           ;pindef.h: 116: WPUC = 0x00;
  3368  000352  0E00               	movlw	0
  3369  000354  6FA1               	movwf	161,b	;volatile
  3370                           
  3371                           ;pindef.h: 117: WPUD = 0x00;
  3372  000356  0E00               	movlw	0
  3373  000358  6FA6               	movwf	166,b	;volatile
  3374                           
  3375                           ;pindef.h: 118: WPUE = 0x00;
  3376  00035A  0E00               	movlw	0
  3377  00035C  6FAE               	movwf	174,b	;volatile
  3378                           
  3379                           ;pindef.h: 119: WPUF = 0x00;
  3380  00035E  0E00               	movlw	0
  3381  000360  6FB3               	movwf	179,b	;volatile
  3382                           
  3383                           ;pindef.h: 120: WPUG = 0x00;
  3384  000362  0E00               	movlw	0
  3385  000364  6FBB               	movwf	187,b	;volatile
  3386                           
  3387                           ;pindef.h: 121: WPUH = 0x00;
  3388  000366  0E00               	movlw	0
  3389  000368  6FC0               	movwf	192,b	;volatile
  3390                           
  3391                           ;pindef.h: 124: ODCONA = 0x00;
  3392  00036A  0E00               	movlw	0
  3393  00036C  6F90               	movwf	144,b	;volatile
  3394                           
  3395                           ;pindef.h: 125: ODCONB = 0x00;
  3396  00036E  0E00               	movlw	0
  3397  000370  6F98               	movwf	152,b	;volatile
  3398                           
  3399                           ;pindef.h: 126: ODCONC = 0x00;
  3400  000372  0E00               	movlw	0
  3401  000374  6FA0               	movwf	160,b	;volatile
  3402                           
  3403                           ;pindef.h: 127: ODCOND = 0x00;
  3404  000376  0E00               	movlw	0
  3405  000378  6FA5               	movwf	165,b	;volatile
  3406                           
  3407                           ;pindef.h: 128: ODCONE = 0x00;
  3408  00037A  0E00               	movlw	0
  3409  00037C  6FAD               	movwf	173,b	;volatile
  3410                           
  3411                           ;pindef.h: 129: ODCONF = 0x00;
  3412  00037E  0E00               	movlw	0
  3413  000380  6FB2               	movwf	178,b	;volatile
  3414                           
  3415                           ;pindef.h: 130: ODCONG = 0x00;
  3416  000382  0E00               	movlw	0
  3417  000384  6FBA               	movwf	186,b	;volatile
  3418                           
  3419                           ;pindef.h: 131: ODCONH = 0x00;
  3420  000386  0E00               	movlw	0
  3421  000388  6FBF               	movwf	191,b	;volatile
  3422                           
  3423                           ;pindef.h: 134: RC0PPS = 0x1A;
  3424  00038A  0E1A               	movlw	26
  3425  00038C  6F62               	movwf	98,b	;volatile
  3426                           
  3427                           ; BSR set to: 14
  3428                           ;pindef.h: 135: SSP1DATPPSbits.SSP1DATPPS = 0x11;
  3429  00038E  811A               	bsf	26,0,b	;volatile
  3430  000390  931A               	bcf	26,1,b	;volatile
  3431  000392  951A               	bcf	26,2,b	;volatile
  3432  000394  971A               	bcf	26,3,b	;volatile
  3433  000396  891A               	bsf	26,4,b	;volatile
  3434  000398  9B1A               	bcf	26,5,b	;volatile
  3435                           
  3436                           ; BSR set to: 14
  3437                           ;pindef.h: 136: SSP1CLKPPSbits.SSP1CLKPPS = 0x16;
  3438  00039A  9119               	bcf	25,0,b	;volatile
  3439  00039C  8319               	bsf	25,1,b	;volatile
  3440  00039E  8519               	bsf	25,2,b	;volatile
  3441  0003A0  9719               	bcf	25,3,b	;volatile
  3442  0003A2  8919               	bsf	25,4,b	;volatile
  3443  0003A4  9B19               	bcf	25,5,b	;volatile
  3444                           
  3445                           ;pindef.h: 137: RC6PPS = 0x19;
  3446  0003A6  0E19               	movlw	25
  3447  0003A8  6F68               	movwf	104,b	;volatile
  3448                           
  3449                           ;pindef.h: 139: RB0PPS = 0x1C;
  3450  0003AA  0E1C               	movlw	28
  3451  0003AC  6F5A               	movwf	90,b	;volatile
  3452                           
  3453                           ;pindef.h: 140: RB1PPS = 0x1B;
  3454  0003AE  0E1B               	movlw	27
  3455  0003B0  6F5B               	movwf	91,b	;volatile
  3456                           
  3457                           ; BSR set to: 14
  3458                           ;pindef.h: 141: SSP2DATPPSbits.SSP2DATPPS = 0x08;
  3459  0003B2  911D               	bcf	29,0,b	;volatile
  3460  0003B4  931D               	bcf	29,1,b	;volatile
  3461  0003B6  951D               	bcf	29,2,b	;volatile
  3462  0003B8  871D               	bsf	29,3,b	;volatile
  3463  0003BA  991D               	bcf	29,4,b	;volatile
  3464  0003BC  9B1D               	bcf	29,5,b	;volatile
  3465                           
  3466                           ; BSR set to: 14
  3467                           ;pindef.h: 142: SSP2CLKPPSbits.SSP2CLKPPS = 0x09;
  3468  0003BE  811C               	bsf	28,0,b	;volatile
  3469  0003C0  931C               	bcf	28,1,b	;volatile
  3470  0003C2  951C               	bcf	28,2,b	;volatile
  3471  0003C4  871C               	bsf	28,3,b	;volatile
  3472  0003C6  991C               	bcf	28,4,b	;volatile
  3473  0003C8  9B1C               	bcf	28,5,b	;volatile
  3474                           
  3475                           ; BSR set to: 14
  3476                           ;pindef.h: 144: RX1PPSbits.RX1PPS = 0x1B;
  3477  0003CA  810F               	bsf	15,0,b	;volatile
  3478  0003CC  830F               	bsf	15,1,b	;volatile
  3479  0003CE  950F               	bcf	15,2,b	;volatile
  3480  0003D0  870F               	bsf	15,3,b	;volatile
  3481  0003D2  890F               	bsf	15,4,b	;volatile
  3482  0003D4  9B0F               	bcf	15,5,b	;volatile
  3483                           
  3484                           ;pindef.h: 145: RD4PPS = 0x0C;
  3485  0003D6  0E0C               	movlw	12
  3486  0003D8  6F6E               	movwf	110,b	;volatile
  3487                           
  3488                           ; BSR set to: 14
  3489                           ;pindef.h: 147: RX2PPSbits.RX2PPS = 0x1D;
  3490  0003DA  8111               	bsf	17,0,b	;volatile
  3491  0003DC  9311               	bcf	17,1,b	;volatile
  3492  0003DE  8511               	bsf	17,2,b	;volatile
  3493  0003E0  8711               	bsf	17,3,b	;volatile
  3494  0003E2  8911               	bsf	17,4,b	;volatile
  3495  0003E4  9B11               	bcf	17,5,b	;volatile
  3496                           
  3497                           ;pindef.h: 148: RD6PPS = 0x0E;
  3498  0003E6  0E0E               	movlw	14
  3499  0003E8  6F70               	movwf	112,b	;volatile
  3500                           
  3501                           ; BSR set to: 14
  3502  0003EA  0012               	return		;funcret
  3503  0003EC                     __end_of_pin_init:
  3504                           	opt stack 0
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           prodh	equ	0xFF4
  3510                           prodl	equ	0xFF3
  3511                           intcon	equ	0xFF2
  3512                           postinc0	equ	0xFEE
  3513                           wreg	equ	0xFE8
  3514                           indf1	equ	0xFE7
  3515                           postdec1	equ	0xFE5
  3516                           fsr1h	equ	0xFE2
  3517                           fsr1l	equ	0xFE1
  3518                           indf2	equ	0xFDF
  3519                           postinc2	equ	0xFDE
  3520                           fsr2h	equ	0xFDA
  3521                           fsr2l	equ	0xFD9
  3522                           status	equ	0xFD8
  3523                           
  3524 ;; *************** function _TIMER1_setup *****************
  3525 ;; Defined at:
  3526 ;;		line 735 in file "MELONPAN1_lib_ver1.20.h"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  data            2    0[BANK0 ] unsigned int 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3540 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3543 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3544 ;;Total ram usage:        2 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    3
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text22
  3555  0008BE                     __ptext22:
  3556                           	opt stack 0
  3557  0008BE                     _TIMER1_setup:
  3558                           	opt stack 27
  3559                           
  3560                           ;MELONPAN1_lib_ver1.20.h: 736: T1GCON=0;
  3561                           
  3562                           ; BSR set to: 14
  3563                           ;incstack = 0
  3564  0008BE  0E00               	movlw	0
  3565  0008C0  6ED0               	movwf	4048,c	;volatile
  3566                           
  3567                           ;MELONPAN1_lib_ver1.20.h: 737: TMR1CLK=(char)((data>>8) & 0xff);
  3568  0008C2  0100               	movlb	0	; () banked
  3569  0008C4  516B               	movf	(TIMER1_setup@data+1)& (0+255),w,b
  3570  0008C6  6ED2               	movwf	4050,c	;volatile
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;MELONPAN1_lib_ver1.20.h: 738: T1CON=((char)(data & 0xff)) | 0x03;
  3574  0008C8  516A               	movf	TIMER1_setup@data& (0+255),w,b
  3575  0008CA  0903               	iorlw	3
  3576  0008CC  6ECF               	movwf	4047,c	;volatile
  3577                           
  3578                           ; BSR set to: 0
  3579  0008CE  0012               	return		;funcret
  3580  0008D0                     __end_of_TIMER1_setup:
  3581                           	opt stack 0
  3582                           tblptru	equ	0xFF8
  3583                           tblptrh	equ	0xFF7
  3584                           tblptrl	equ	0xFF6
  3585                           tablat	equ	0xFF5
  3586                           prodh	equ	0xFF4
  3587                           prodl	equ	0xFF3
  3588                           intcon	equ	0xFF2
  3589                           postinc0	equ	0xFEE
  3590                           wreg	equ	0xFE8
  3591                           indf1	equ	0xFE7
  3592                           postdec1	equ	0xFE5
  3593                           fsr1h	equ	0xFE2
  3594                           fsr1l	equ	0xFE1
  3595                           indf2	equ	0xFDF
  3596                           postinc2	equ	0xFDE
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _TIMER1_set_count *****************
  3602 ;; Defined at:
  3603 ;;		line 745 in file "MELONPAN1_lib_ver1.20.h"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  data            2    0[BANK0 ] unsigned int 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;		None
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3617 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;Total ram usage:        2 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    3
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_main
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text23
  3632  0008F8                     __ptext23:
  3633                           	opt stack 0
  3634  0008F8                     _TIMER1_set_count:
  3635                           	opt stack 27
  3636                           
  3637                           ;MELONPAN1_lib_ver1.20.h: 746: TMR1H=(char)(data>>8);
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;incstack = 0
  3641  0008F8  0100               	movlb	0	; () banked
  3642  0008FA  516B               	movf	(TIMER1_set_count@data+1)& (0+255),w,b
  3643  0008FC  6ECE               	movwf	4046,c	;volatile
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;MELONPAN1_lib_ver1.20.h: 747: TMR1L=(char)(data);
  3647  0008FE  C06A  FFCD         	movff	TIMER1_set_count@data,4045	;volatile
  3648                           
  3649                           ; BSR set to: 0
  3650  000902  0012               	return		;funcret
  3651  000904                     __end_of_TIMER1_set_count:
  3652                           	opt stack 0
  3653                           tblptru	equ	0xFF8
  3654                           tblptrh	equ	0xFF7
  3655                           tblptrl	equ	0xFF6
  3656                           tablat	equ	0xFF5
  3657                           prodh	equ	0xFF4
  3658                           prodl	equ	0xFF3
  3659                           intcon	equ	0xFF2
  3660                           postinc0	equ	0xFEE
  3661                           wreg	equ	0xFE8
  3662                           indf1	equ	0xFE7
  3663                           postdec1	equ	0xFE5
  3664                           fsr1h	equ	0xFE2
  3665                           fsr1l	equ	0xFE1
  3666                           indf2	equ	0xFDF
  3667                           postinc2	equ	0xFDE
  3668                           fsr2h	equ	0xFDA
  3669                           fsr2l	equ	0xFD9
  3670                           status	equ	0xFD8
  3671                           
  3672 ;; *************** function _wood_isr *****************
  3673 ;; Defined at:
  3674 ;;		line 16 in file "MELON PAN1_main.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3690 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;Total ram usage:       18 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    2
  3695 ;; This function calls:
  3696 ;;		_read_ds_dual_byte
  3697 ;;		i2_TIMER0_16bit_set_count
  3698 ;;		i2_TIMER1_set_count
  3699 ;; This function is called by:
  3700 ;;		Interrupt level 2
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	intcode
  3705  000008                     __pintcode:
  3706                           	opt stack 0
  3707  000008                     _wood_isr:
  3708                           	opt stack 24
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;incstack = 0
  3712  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3713  00000A  CFFA F039          	movff	pclath,??_wood_isr
  3714  00000E  CFFB F03A          	movff	pclatu,??_wood_isr+1
  3715  000012  CFE9 F03B          	movff	fsr0l,??_wood_isr+2
  3716  000016  CFEA F03C          	movff	fsr0h,??_wood_isr+3
  3717  00001A  CFE1 F03D          	movff	fsr1l,??_wood_isr+4
  3718  00001E  CFE2 F03E          	movff	fsr1h,??_wood_isr+5
  3719  000022  CFD9 F03F          	movff	fsr2l,??_wood_isr+6
  3720  000026  CFDA F040          	movff	fsr2h,??_wood_isr+7
  3721  00002A  CFF3 F041          	movff	prodl,??_wood_isr+8
  3722  00002E  CFF4 F042          	movff	prodh,??_wood_isr+9
  3723  000032  CFF6 F043          	movff	tblptrl,??_wood_isr+10
  3724  000036  CFF7 F044          	movff	tblptrh,??_wood_isr+11
  3725  00003A  CFF8 F045          	movff	tblptru,??_wood_isr+12
  3726  00003E  CFF5 F046          	movff	tablat,??_wood_isr+13
  3727  000042  C04F  F047         	movff	btemp,??_wood_isr+14
  3728  000046  C050  F048         	movff	btemp+1,??_wood_isr+15
  3729  00004A  C051  F049         	movff	btemp+2,??_wood_isr+16
  3730  00004E  C052  F04A         	movff	btemp+3,??_wood_isr+17
  3731                           
  3732                           ;MELON PAN1_main.c: 17: if(PIR3bits.RC1IF){
  3733  000052  010E               	movlb	14	; () banked
  3734  000054  BB36               	btfsc	54,5,b	;volatile
  3735                           
  3736                           ; BSR set to: 14
  3737                           ;MELON PAN1_main.c: 19: read_ds_dual_byte();
  3738  000056  ECAE  F002         	call	_read_ds_dual_byte	;wreg free
  3739                           
  3740                           ;MELON PAN1_main.c: 20: }
  3741                           ;MELON PAN1_main.c: 21: if(PIR0bits.TMR0IF){
  3742  00005A  010E               	movlb	14	; () banked
  3743  00005C  AB33               	btfss	51,5,b	;volatile
  3744  00005E  D00A               	goto	i2l1154
  3745                           
  3746                           ; BSR set to: 14
  3747                           ;MELON PAN1_main.c: 22: PIR0bits.TMR0IF=0;
  3748  000060  9B33               	bcf	51,5,b	;volatile
  3749                           
  3750                           ; BSR set to: 14
  3751                           ;MELON PAN1_main.c: 24: TIMER0_16bit_set_count(25536);
  3752  000062  0E63               	movlw	99
  3753  000064  6E38               	movwf	i2TIMER0_16bit_set_count@data+1,c
  3754  000066  0EC0               	movlw	192
  3755  000068  6E37               	movwf	i2TIMER0_16bit_set_count@data,c
  3756  00006A  EC87  F004         	call	i2_TIMER0_16bit_set_count	;wreg free
  3757                           
  3758                           ;MELON PAN1_main.c: 26: DS_time_out++;
  3759  00006E  2A4E               	incf	_DS_time_out,f,c
  3760                           
  3761                           ;MELON PAN1_main.c: 27: DS_communication_error_time++;
  3762  000070  4A2D               	infsnz	_DS_communication_error_time,f,c
  3763  000072  2A2E               	incf	_DS_communication_error_time+1,f,c
  3764  000074                     i2l1154:
  3765                           
  3766                           ;MELON PAN1_main.c: 28: }
  3767                           ;MELON PAN1_main.c: 29: if(PIR5bits.TMR1IF){
  3768  000074  010E               	movlb	14	; () banked
  3769  000076  A138               	btfss	56,0,b	;volatile
  3770  000078  D007               	goto	i2l1155
  3771                           
  3772                           ; BSR set to: 14
  3773                           ;MELON PAN1_main.c: 30: PIR5bits.TMR1IF=0;
  3774  00007A  9138               	bcf	56,0,b	;volatile
  3775                           
  3776                           ; BSR set to: 14
  3777                           ;MELON PAN1_main.c: 32: TIMER1_set_count(25536);
  3778  00007C  0E63               	movlw	99
  3779  00007E  6E38               	movwf	i2TIMER1_set_count@data+1,c
  3780  000080  0EC0               	movlw	192
  3781  000082  6E37               	movwf	i2TIMER1_set_count@data,c
  3782  000084  EC82  F004         	call	i2_TIMER1_set_count	;wreg free
  3783  000088                     i2l1155:
  3784  000088  C04A  F052         	movff	??_wood_isr+17,btemp+3
  3785  00008C  C049  F051         	movff	??_wood_isr+16,btemp+2
  3786  000090  C048  F050         	movff	??_wood_isr+15,btemp+1
  3787  000094  C047  F04F         	movff	??_wood_isr+14,btemp
  3788  000098  C046  FFF5         	movff	??_wood_isr+13,tablat
  3789  00009C  C045  FFF8         	movff	??_wood_isr+12,tblptru
  3790  0000A0  C044  FFF7         	movff	??_wood_isr+11,tblptrh
  3791  0000A4  C043  FFF6         	movff	??_wood_isr+10,tblptrl
  3792  0000A8  C042  FFF4         	movff	??_wood_isr+9,prodh
  3793  0000AC  C041  FFF3         	movff	??_wood_isr+8,prodl
  3794  0000B0  C040  FFDA         	movff	??_wood_isr+7,fsr2h
  3795  0000B4  C03F  FFD9         	movff	??_wood_isr+6,fsr2l
  3796  0000B8  C03E  FFE2         	movff	??_wood_isr+5,fsr1h
  3797  0000BC  C03D  FFE1         	movff	??_wood_isr+4,fsr1l
  3798  0000C0  C03C  FFEA         	movff	??_wood_isr+3,fsr0h
  3799  0000C4  C03B  FFE9         	movff	??_wood_isr+2,fsr0l
  3800  0000C8  C03A  FFFB         	movff	??_wood_isr+1,pclatu
  3801  0000CC  C039  FFFA         	movff	??_wood_isr,pclath
  3802  0000D0  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3803  0000D2  0011               	retfie		f
  3804  0000D4                     __end_of_wood_isr:
  3805                           	opt stack 0
  3806                           pclatu	equ	0xFFB
  3807                           pclath	equ	0xFFA
  3808                           tblptru	equ	0xFF8
  3809                           tblptrh	equ	0xFF7
  3810                           tblptrl	equ	0xFF6
  3811                           tablat	equ	0xFF5
  3812                           prodh	equ	0xFF4
  3813                           prodl	equ	0xFF3
  3814                           intcon	equ	0xFF2
  3815                           postinc0	equ	0xFEE
  3816                           fsr0h	equ	0xFEA
  3817                           fsr0l	equ	0xFE9
  3818                           wreg	equ	0xFE8
  3819                           indf1	equ	0xFE7
  3820                           postdec1	equ	0xFE5
  3821                           fsr1h	equ	0xFE2
  3822                           fsr1l	equ	0xFE1
  3823                           indf2	equ	0xFDF
  3824                           postinc2	equ	0xFDE
  3825                           fsr2h	equ	0xFDA
  3826                           fsr2l	equ	0xFD9
  3827                           status	equ	0xFD8
  3828                           
  3829 ;; *************** function i2_TIMER1_set_count *****************
  3830 ;; Defined at:
  3831 ;;		line 745 in file "MELONPAN1_lib_ver1.20.h"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  data            2    0[COMRAM] unsigned int 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3849 ;;Total ram usage:        2 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_wood_isr
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text25
  3859  000904                     __ptext25:
  3860                           	opt stack 0
  3861  000904                     i2_TIMER1_set_count:
  3862                           	opt stack 25
  3863                           
  3864                           ;MELONPAN1_lib_ver1.20.h: 746: TMR1H=(char)(data>>8);
  3865                           
  3866                           ;incstack = 0
  3867  000904  5038               	movf	i2TIMER1_set_count@data+1,w,c
  3868  000906  6ECE               	movwf	4046,c	;volatile
  3869                           
  3870                           ;MELONPAN1_lib_ver1.20.h: 747: TMR1L=(char)(data);
  3871  000908  C037  FFCD         	movff	i2TIMER1_set_count@data,4045	;volatile
  3872  00090C  0012               	return		;funcret
  3873  00090E                     __end_ofi2_TIMER1_set_count:
  3874                           	opt stack 0
  3875                           pclatu	equ	0xFFB
  3876                           pclath	equ	0xFFA
  3877                           tblptru	equ	0xFF8
  3878                           tblptrh	equ	0xFF7
  3879                           tblptrl	equ	0xFF6
  3880                           tablat	equ	0xFF5
  3881                           prodh	equ	0xFF4
  3882                           prodl	equ	0xFF3
  3883                           intcon	equ	0xFF2
  3884                           postinc0	equ	0xFEE
  3885                           fsr0h	equ	0xFEA
  3886                           fsr0l	equ	0xFE9
  3887                           wreg	equ	0xFE8
  3888                           indf1	equ	0xFE7
  3889                           postdec1	equ	0xFE5
  3890                           fsr1h	equ	0xFE2
  3891                           fsr1l	equ	0xFE1
  3892                           indf2	equ	0xFDF
  3893                           postinc2	equ	0xFDE
  3894                           fsr2h	equ	0xFDA
  3895                           fsr2l	equ	0xFD9
  3896                           status	equ	0xFD8
  3897                           
  3898 ;; *************** function i2_TIMER0_16bit_set_count *****************
  3899 ;; Defined at:
  3900 ;;		line 721 in file "MELONPAN1_lib_ver1.20.h"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  data            2    0[COMRAM] unsigned int 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;Total ram usage:        2 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_wood_isr
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text26
  3928  00090E                     __ptext26:
  3929                           	opt stack 0
  3930  00090E                     i2_TIMER0_16bit_set_count:
  3931                           	opt stack 25
  3932                           
  3933                           ;MELONPAN1_lib_ver1.20.h: 722: TMR0H=(char)(data>>8);
  3934                           
  3935                           ;incstack = 0
  3936  00090E  5038               	movf	i2TIMER0_16bit_set_count@data+1,w,c
  3937  000910  6ED4               	movwf	4052,c	;volatile
  3938                           
  3939                           ;MELONPAN1_lib_ver1.20.h: 723: TMR0L=(char)(data);
  3940  000912  C037  FFD3         	movff	i2TIMER0_16bit_set_count@data,4051	;volatile
  3941  000916  0012               	return		;funcret
  3942  000918                     __end_ofi2_TIMER0_16bit_set_count:
  3943                           	opt stack 0
  3944                           pclatu	equ	0xFFB
  3945                           pclath	equ	0xFFA
  3946                           tblptru	equ	0xFF8
  3947                           tblptrh	equ	0xFF7
  3948                           tblptrl	equ	0xFF6
  3949                           tablat	equ	0xFF5
  3950                           prodh	equ	0xFF4
  3951                           prodl	equ	0xFF3
  3952                           intcon	equ	0xFF2
  3953                           postinc0	equ	0xFEE
  3954                           fsr0h	equ	0xFEA
  3955                           fsr0l	equ	0xFE9
  3956                           wreg	equ	0xFE8
  3957                           indf1	equ	0xFE7
  3958                           postdec1	equ	0xFE5
  3959                           fsr1h	equ	0xFE2
  3960                           fsr1l	equ	0xFE1
  3961                           indf2	equ	0xFDF
  3962                           postinc2	equ	0xFDE
  3963                           fsr2h	equ	0xFDA
  3964                           fsr2l	equ	0xFD9
  3965                           status	equ	0xFD8
  3966                           
  3967 ;; *************** function _read_ds_dual_byte *****************
  3968 ;; Defined at:
  3969 ;;		line 112 in file "ds_dual_wood.h"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;		None
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3987 ;;Total ram usage:        1 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    1
  3990 ;; This function calls:
  3991 ;;		_Serial1_read
  3992 ;; This function is called by:
  3993 ;;		_wood_isr
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text27
  3998  00055C                     __ptext27:
  3999                           	opt stack 0
  4000  00055C                     _read_ds_dual_byte:
  4001                           	opt stack 24
  4002                           
  4003                           ;ds_dual_wood.h: 113: if(DS_read_stop==0){
  4004                           
  4005                           ;incstack = 0
  4006  00055C  5035               	movf	_DS_read_stop,w,c
  4007  00055E  A4D8               	btfss	status,2,c
  4008  000560  D038               	goto	i2l978
  4009                           
  4010                           ;ds_dual_wood.h: 114: sinyounai_DS_data[DS_uart_number]=Serial1_read();
  4011  000562  5036               	movf	_DS_uart_number,w,c
  4012  000564  0D01               	mullw	1
  4013  000566  0E0E               	movlw	low _sinyounai_DS_data
  4014  000568  24F3               	addwf	prodl,w,c
  4015  00056A  6ED9               	movwf	fsr2l,c
  4016  00056C  0E00               	movlw	high _sinyounai_DS_data
  4017  00056E  20F4               	addwfc	prodh,w,c
  4018  000570  6EDA               	movwf	fsr2h,c
  4019  000572  EC8C  F004         	call	_Serial1_read	;wreg free
  4020  000576  6EDF               	movwf	indf2,c
  4021                           
  4022                           ;ds_dual_wood.h: 115: if(DS_uart_number==1 && sinyounai_DS_data[DS_uart_number]==0x0D){
  4023  000578  0436               	decf	_DS_uart_number,w,c
  4024  00057A  A4D8               	btfss	status,2,c
  4025  00057C  D00F               	goto	i2l979
  4026  00057E  5036               	movf	_DS_uart_number,w,c
  4027  000580  0D01               	mullw	1
  4028  000582  0E0E               	movlw	low _sinyounai_DS_data
  4029  000584  24F3               	addwf	prodl,w,c
  4030  000586  6ED9               	movwf	fsr2l,c
  4031  000588  0E00               	movlw	high _sinyounai_DS_data
  4032  00058A  20F4               	addwfc	prodh,w,c
  4033  00058C  6EDA               	movwf	fsr2h,c
  4034  00058E  0E0D               	movlw	13
  4035  000590  18DE               	xorwf	postinc2,w,c
  4036  000592  A4D8               	btfss	status,2,c
  4037  000594  D003               	goto	i2l979
  4038                           
  4039                           ;ds_dual_wood.h: 116: DS_uart_number=1;
  4040  000596  0E01               	movlw	1
  4041  000598  6E36               	movwf	_DS_uart_number,c
  4042                           
  4043                           ;ds_dual_wood.h: 117: }else if((DS_uart_number==0 && sinyounai_DS_data[0]!=0x0D)||(DS_ua
      +                          rt_number==1 && sinyounai_DS_data[1]!=0x00 && sinyounai_DS_data[1]!=0xCB)){
  4044  00059A  0012               	return	
  4045  00059C                     i2l979:
  4046  00059C  5036               	movf	_DS_uart_number,w,c
  4047  00059E  A4D8               	btfss	status,2,c
  4048  0005A0  D004               	goto	i2u53_40
  4049  0005A2  0E0D               	movlw	13
  4050  0005A4  180E               	xorwf	_sinyounai_DS_data,w,c
  4051  0005A6  A4D8               	btfss	status,2,c
  4052  0005A8  D00A               	goto	i2u56_40
  4053  0005AA                     i2u53_40:
  4054  0005AA  0436               	decf	_DS_uart_number,w,c
  4055  0005AC  A4D8               	btfss	status,2,c
  4056  0005AE  D00A               	goto	i2l981
  4057  0005B0  500F               	movf	_sinyounai_DS_data+1,w,c
  4058  0005B2  B4D8               	btfsc	status,2,c
  4059  0005B4  D007               	goto	i2l981
  4060  0005B6  0ECB               	movlw	203
  4061  0005B8  180F               	xorwf	_sinyounai_DS_data+1,w,c
  4062  0005BA  B4D8               	btfsc	status,2,c
  4063  0005BC  D003               	goto	i2l981
  4064  0005BE                     i2u56_40:
  4065                           
  4066                           ;ds_dual_wood.h: 118: DS_uart_number=0;
  4067  0005BE  0E00               	movlw	0
  4068  0005C0  6E36               	movwf	_DS_uart_number,c
  4069                           
  4070                           ;ds_dual_wood.h: 119: }else{
  4071  0005C2  0012               	return	
  4072  0005C4                     i2l981:
  4073                           
  4074                           ;ds_dual_wood.h: 120: DS_uart_number++;
  4075  0005C4  2A36               	incf	_DS_uart_number,f,c
  4076                           
  4077                           ;ds_dual_wood.h: 121: if(DS_uart_number>(13-1)){
  4078  0005C6  0E0C               	movlw	12
  4079  0005C8  6436               	cpfsgt	_DS_uart_number,c
  4080  0005CA  0012               	return	
  4081                           
  4082                           ;ds_dual_wood.h: 122: DS_read_stop=1;
  4083  0005CC  0E01               	movlw	1
  4084  0005CE  6E35               	movwf	_DS_read_stop,c
  4085                           
  4086                           ;ds_dual_wood.h: 123: }
  4087                           ;ds_dual_wood.h: 124: }
  4088                           ;ds_dual_wood.h: 125: }else{
  4089  0005D0  0012               	return	
  4090  0005D2                     i2l978:
  4091                           
  4092                           ;ds_dual_wood.h: 126: Serial1_read();
  4093  0005D2  EC8C  F004         	call	_Serial1_read	;wreg free
  4094  0005D6  0012               	return	
  4095  0005D8                     __end_of_read_ds_dual_byte:
  4096                           	opt stack 0
  4097                           pclatu	equ	0xFFB
  4098                           pclath	equ	0xFFA
  4099                           tblptru	equ	0xFF8
  4100                           tblptrh	equ	0xFF7
  4101                           tblptrl	equ	0xFF6
  4102                           tablat	equ	0xFF5
  4103                           prodh	equ	0xFF4
  4104                           prodl	equ	0xFF3
  4105                           intcon	equ	0xFF2
  4106                           postinc0	equ	0xFEE
  4107                           fsr0h	equ	0xFEA
  4108                           fsr0l	equ	0xFE9
  4109                           wreg	equ	0xFE8
  4110                           indf1	equ	0xFE7
  4111                           postdec1	equ	0xFE5
  4112                           fsr1h	equ	0xFE2
  4113                           fsr1l	equ	0xFE1
  4114                           indf2	equ	0xFDF
  4115                           postinc2	equ	0xFDE
  4116                           fsr2h	equ	0xFDA
  4117                           fsr2l	equ	0xFD9
  4118                           status	equ	0xFD8
  4119                           
  4120 ;; *************** function _Serial1_read *****************
  4121 ;; Defined at:
  4122 ;;		line 490 in file "MELONPAN1_lib_ver1.20.h"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;		None
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      unsigned char 
  4129 ;; Registers used:
  4130 ;;		wreg, status,2
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4140 ;;Total ram usage:        0 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_read_ds_dual_byte
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text28
  4150  000918                     __ptext28:
  4151                           	opt stack 0
  4152  000918                     _Serial1_read:
  4153                           	opt stack 24
  4154                           
  4155                           ;MELONPAN1_lib_ver1.20.h: 491: while(!PIR3bits.RC1IF);
  4156                           
  4157                           ;incstack = 0
  4158  000918  010E               	movlb	14	; () banked
  4159  00091A  AB36               	btfss	54,5,b	;volatile
  4160  00091C  D7FD               	goto	_Serial1_read
  4161                           
  4162                           ; BSR set to: 14
  4163                           ;MELONPAN1_lib_ver1.20.h: 492: return RC1REG;
  4164                           
  4165                           ; BSR set to: 14
  4166  00091E  5098               	movf	3992,w,c	;volatile
  4167  000920  0012               	return	
  4168  000922                     __end_of_Serial1_read:
  4169                           	opt stack 0
  4170  0000                     pclatu	equ	0xFFB
  4171                           pclath	equ	0xFFA
  4172                           tblptru	equ	0xFF8
  4173                           tblptrh	equ	0xFF7
  4174                           tblptrl	equ	0xFF6
  4175                           tablat	equ	0xFF5
  4176                           prodh	equ	0xFF4
  4177                           prodl	equ	0xFF3
  4178                           intcon	equ	0xFF2
  4179                           postinc0	equ	0xFEE
  4180                           fsr0h	equ	0xFEA
  4181                           fsr0l	equ	0xFE9
  4182                           wreg	equ	0xFE8
  4183                           indf1	equ	0xFE7
  4184                           postdec1	equ	0xFE5
  4185                           fsr1h	equ	0xFE2
  4186                           fsr1l	equ	0xFE1
  4187                           indf2	equ	0xFDF
  4188                           postinc2	equ	0xFDE
  4189                           fsr2h	equ	0xFDA
  4190                           fsr2l	equ	0xFD9
  4191                           status	equ	0xFD8
  4192                           pclatu	equ	0xFFB
  4193                           pclath	equ	0xFFA
  4194                           tblptru	equ	0xFF8
  4195                           tblptrh	equ	0xFF7
  4196                           tblptrl	equ	0xFF6
  4197                           tablat	equ	0xFF5
  4198                           prodh	equ	0xFF4
  4199                           prodl	equ	0xFF3
  4200                           intcon	equ	0xFF2
  4201                           postinc0	equ	0xFEE
  4202                           fsr0h	equ	0xFEA
  4203                           fsr0l	equ	0xFE9
  4204                           wreg	equ	0xFE8
  4205                           indf1	equ	0xFE7
  4206                           postdec1	equ	0xFE5
  4207                           fsr1h	equ	0xFE2
  4208                           fsr1l	equ	0xFE1
  4209                           indf2	equ	0xFDF
  4210                           postinc2	equ	0xFDE
  4211                           fsr2h	equ	0xFDA
  4212                           fsr2l	equ	0xFD9
  4213                           status	equ	0xFD8
  4214                           
  4215                           	psect	rparam
  4216  0000                     pclatu	equ	0xFFB
  4217                           pclath	equ	0xFFA
  4218                           tblptru	equ	0xFF8
  4219                           tblptrh	equ	0xFF7
  4220                           tblptrl	equ	0xFF6
  4221                           tablat	equ	0xFF5
  4222                           prodh	equ	0xFF4
  4223                           prodl	equ	0xFF3
  4224                           intcon	equ	0xFF2
  4225                           postinc0	equ	0xFEE
  4226                           fsr0h	equ	0xFEA
  4227                           fsr0l	equ	0xFE9
  4228                           wreg	equ	0xFE8
  4229                           indf1	equ	0xFE7
  4230                           postdec1	equ	0xFE5
  4231                           fsr1h	equ	0xFE2
  4232                           fsr1l	equ	0xFE1
  4233                           indf2	equ	0xFDF
  4234                           postinc2	equ	0xFDE
  4235                           fsr2h	equ	0xFDA
  4236                           fsr2l	equ	0xFD9
  4237                           status	equ	0xFD8
  4238                           
  4239                           	psect	temp
  4240  00004F                     btemp:
  4241                           	opt stack 0
  4242  00004F                     	ds	1
  4243  0000                     int$flags	set	btemp
  4244  0000                     wtemp6	set	btemp+1
  4245                           pclatu	equ	0xFFB
  4246                           pclath	equ	0xFFA
  4247                           tblptru	equ	0xFF8
  4248                           tblptrh	equ	0xFF7
  4249                           tblptrl	equ	0xFF6
  4250                           tablat	equ	0xFF5
  4251                           prodh	equ	0xFF4
  4252                           prodl	equ	0xFF3
  4253                           intcon	equ	0xFF2
  4254                           postinc0	equ	0xFEE
  4255                           fsr0h	equ	0xFEA
  4256                           fsr0l	equ	0xFE9
  4257                           wreg	equ	0xFE8
  4258                           indf1	equ	0xFE7
  4259                           postdec1	equ	0xFE5
  4260                           fsr1h	equ	0xFE2
  4261                           fsr1l	equ	0xFE1
  4262                           indf2	equ	0xFDF
  4263                           postinc2	equ	0xFDE
  4264                           fsr2h	equ	0xFDA
  4265                           fsr2l	equ	0xFD9
  4266                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      78
    BANK0           160      7      17
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _wood_isr in COMRAM

    _wood_isr->i2_TIMER0_16bit_set_count
    _wood_isr->i2_TIMER1_set_count

Critical Paths under _main in BANK0

    _main->_read_ds_dual_de_gozaru
    _spi_init->_SPI_begin
    _read_ds_dual_init->_Serial1_begin
    _read_ds_dual_de_gozaru->_GOOD_de_gozaru
    _GOOD_de_gozaru->_bit_test
    _s_driver4_set_value->_SPI_transfer
    _s_driver3_set_value->_SPI_transfer
    _s_driver2_set_value->_SPI_transfer
    _s_driver1_set_value->_SPI_transfer

Critical Paths under _wood_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _wood_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _wood_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _wood_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _wood_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _wood_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _wood_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _wood_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _wood_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _wood_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _wood_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _wood_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _wood_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _wood_isr in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2753
                   _TIMER1_set_count
                       _TIMER1_setup
                  _enable_interrupts
                           _pin_init
             _read_ds_dual_de_gozaru
                  _read_ds_dual_init
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0     152
                          _SPI_begin
 ---------------------------------------------------------------------------------
 (2) _SPI_begin                                            2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _read_ds_dual_init                                    0     0      0     747
                      _Serial1_begin
             _TIMER0_16bit_set_count
                       _TIMER0_setup
                  _enable_interrupts
 ---------------------------------------------------------------------------------
 (2) _enable_interrupts                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_setup                                         2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TIMER0_16bit_set_count                               2     0      2     207
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Serial1_begin                                        3     0      3     366
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _read_ds_dual_de_gozaru                               1     1      0    1473
                                              6 BANK0      1     1      0
                      _BAD_de_gozaru
                     _GOOD_de_gozaru
                   _always_de_gozaru
 ---------------------------------------------------------------------------------
 (2) _always_de_gozaru                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GOOD_de_gozaru                                       1     1      0    1473
                                              5 BANK0      1     1      0
            _DS_LEFT_UD_signed_VALUE
                           _bit_test
       _make_s_driver_ver1_send_data
                        _output_LED5
                _s_driver1_set_value
                _s_driver2_set_value
                _s_driver3_set_value
                _s_driver4_set_value
 ---------------------------------------------------------------------------------
 (3) _s_driver4_set_value                                  2     2      0      51
                                              1 BANK0      2     2      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _s_driver3_set_value                                  2     2      0      51
                                              1 BANK0      2     2      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _s_driver2_set_value                                  2     2      0      51
                                              1 BANK0      2     2      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _s_driver1_set_value                                  2     2      0      51
                                              1 BANK0      2     2      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _SPI_transfer                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _output_LED5                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _make_s_driver_ver1_send_data                         2     1      1     881
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _bit_test                                             5     4      1     366
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _DS_LEFT_UD_signed_VALUE                              4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _BAD_de_gozaru                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER1_setup                                         2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TIMER1_set_count                                     2     0      2     207
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _wood_isr                                            18    18      0     140
                                              2 COMRAM    18    18      0
                  _read_ds_dual_byte
           i2_TIMER0_16bit_set_count
                 i2_TIMER1_set_count
 ---------------------------------------------------------------------------------
 (6) i2_TIMER1_set_count                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) i2_TIMER0_16bit_set_count                             2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _read_ds_dual_byte                                    1     1      0       0
                                              0 COMRAM     1     1      0
                       _Serial1_read
 ---------------------------------------------------------------------------------
 (7) _Serial1_read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TIMER1_set_count
   _TIMER1_setup
   _enable_interrupts
   _pin_init
   _read_ds_dual_de_gozaru
     _BAD_de_gozaru
     _GOOD_de_gozaru
       _DS_LEFT_UD_signed_VALUE
       _bit_test
       _make_s_driver_ver1_send_data
       _output_LED5
       _s_driver1_set_value
         _SPI_transfer
       _s_driver2_set_value
         _SPI_transfer
       _s_driver3_set_value
         _SPI_transfer
       _s_driver4_set_value
         _SPI_transfer
     _always_de_gozaru
   _read_ds_dual_init
     _Serial1_begin
     _TIMER0_16bit_set_count
     _TIMER0_setup
     _enable_interrupts
   _spi_init
     _SPI_begin

 _wood_isr (ROOT)
   _read_ds_dual_byte
     _Serial1_read
   i2_TIMER0_16bit_set_count
   i2_TIMER1_set_count

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      7      11       5       10.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      4E       1       83.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5F       8        0.0%
DATA                 0      0      5F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Feb 20 10:47:43 2021

                              __CFG_CP$OFF 000000                                        l403 08B6  
                                      l460 05FE                                        l462 0614  
                                      l464 062A                                        l457 0640  
                                      l466 0640                                        l458 05EC  
                                      l901 06E0                                        l902 06CE  
                                      l742 0478                                        l750 0428  
                                      l751 0432                                        l743 03F2  
                                      l752 043C                                        l905 06D2  
                                      l753 0446                                        l745 03F6  
                                      l906 06D6                                        l754 0450  
                                      l746 0400                                        l907 06DC  
                                      l755 0458                                        l747 040A  
                                      l756 0460                                        l748 0414  
                                      l757 0468                                        l749 041E  
                                      l758 0470                                        l874 07E4  
                                      l890 0502                                        l891 050E  
                                      l892 051A                                        l885 0532  
                                      l893 0526                                        l886 04DE  
                                      l888 04EA                                        l889 04F6  
                             __CFG_CPD$OFF 000000             ??_make_s_driver_ver1_send_data 006B  
                     ??i2_TIMER1_set_count 0039                                        prod 000FF3  
                                      wreg 000FE8  read_ds_dual_de_gozaru@first_communication 004D  
                             __CFG_LVP$OFF 000000                               __CFG_ZCD$OFF 000000  
           ten_bit_test_unsignedint@F17526 001B                                       l1001 02D0  
                                     l1002 0202                                       l1003 02E4  
                                     l1004 0212                                       l1006 0258  
                                     l1007 02CA                                       l1009 02EE  
                                     l1071 066E                      __size_of_SPI_transfer 0012  
                                     l1161 07B2                                       l1170 019E  
                                     l1076 0692                                       l1172 01F4  
                                     l1167 00E8                                       l1168 011A  
                                     l1169 014A                                _output_LED5 04D8  
                                     l3670 062A                                       l3666 0614  
                                     u2007 0856                                       u2017 0868  
                                     u2027 087C                                       u2037 088E  
                                     _LATA 000F79                                       _LATB 000F7A  
                                     u2047 08A2                                       _LATC 000F7B  
                                     _LATD 000F7C                                       _LATE 000F7D  
                                     _LATF 000F7E                                       _LATG 000F7F  
                                     _LATH 000F80                                       _T2PR 000FBC  
                                     u1724 07CE                                       u1900 01B4  
                                     u1725 07CA                                       u1760 0662  
                                     _T4PR 000FB6                                       u1860 0102  
                                     u1880 0134                                       u1890 0160  
                                     u1866 0104                                       _T6PR 000FB0  
                                     u1886 0136                                       u1977 081C  
                                     _T8PR 000F29                                       u1987 0830  
                                     u1997 0842                      __end_of_Serial1_begin 0652  
                                     _TMR2 000FBB                                       _TMR4 000FB5  
                                     _TMR6 000FAF                                       _TMR8 000F28  
                 ??_TIMER0_16bit_set_count 006C                                       _WPUA 000E91  
                                     _WPUB 000E99                                       _WPUC 000EA1  
                                     _WPUD 000EA6                                       _WPUE 000EAE  
                                     _WPUF 000EB3                                       _WPUG 000EBB  
                                     _WPUH 000EC0                                       _data 0060  
                                     _main 0784                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     fsr0l 000FE9                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     fsr2l 000FD9                                       btemp 004F  
                            __CFG_BOREN$ON 000000                                       prodh 000FF4  
                                     prodl 000FF3                                       start 00D4  
          __size_of_read_ds_dual_de_gozaru 00FE                              __CFG_CSWEN$ON 000000  
                             ___param_bank 000000                              __CFG_SCANE$ON 000000  
                 ?_DS_LEFT_UD_signed_VALUE 006A               __size_of_s_driver1_set_value 0026  
                                    _ADACQ 000F5C                                      ?_main 0037  
                                    _ADCLK 000F57                                      _ADPCH 000F5F  
                                    _ADREF 000F58                                      _ADPRE 000F5E  
                            __CFG_WDTE$OFF 000000                                      _T1CON 000FCF  
                                    _T2CON 000FBD                                      _T3CON 000FC9  
                                    _T4CON 000FB7                                      _T2HLT 000FBE  
                                    _T5CON 000FC3                                      _T6CON 000FB1  
                                    _T4HLT 000FB8                             __CFG_DEBUG$OFF 000000  
                                    _T7CON 000F30                                      _T8CON 000F2A  
                                    _T6HLT 000FB2                                      _T8HLT 000F2B  
                                    _T2RST 000FC0                                      _T4RST 000FBA  
                                    _T6RST 000FB4                                      _T8RST 000F2D  
                                    i2l981 05C4                                      i2l978 05D2  
                                    i2l979 059C                               _SPI_transfer 08AC  
                                    _TMR0H 000FD4                                      _TMR1H 000FCE  
                                    _TMR0L 000FD3                                      _TMR1L 000FCD  
                                    _TMR3H 000FC8                                      _TMR3L 000FC7  
                                    _TMR5H 000FC2                                      _TMR5L 000FC1  
                                    _TMR7H 000F2F                                      _TMR7L 000F2E  
                                    _TRISA 000F81                                      _TRISB 000F82  
                                    _TRISC 000F83                                      _TRISD 000F84  
                                    _TRISE 000F85                                      _TRISF 000F86  
                                    _TRISG 000F87                                      _TRISH 000F88  
                         _always_de_gozaru 092C                              __CFG_WRT0$OFF 000000  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                              __CFG_PWRTE$ON 000000  
                            __CFG_WRT4$OFF 000000               __size_of_s_driver2_set_value 0026  
                            __CFG_WRT5$OFF 000000                              __CFG_WRT6$OFF 000000  
                            __CFG_WRT7$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                           __CFG_EBTR4$OFF 000000                             __CFG_EBTR5$OFF 000000  
                           __CFG_EBTR6$OFF 000000                             __CFG_EBTR7$OFF 000000  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                             __CFG_EBTRB$OFF 000000  
                       __CFG_MCLRE$EXTMCLR 000000                                      pclath 000FFA  
                                    tablat 000FF5               __size_of_s_driver3_set_value 0026  
                                    status 000FD8                                      wtemp6 0050  
                       __size_of_SPI_begin 000E               __size_of_s_driver4_set_value 0026  
                          __initialization 0742                          ?_TIMER1_set_count 006A  
                             __end_of_main 07B8                         ??_TIMER1_set_count 006C  
                                   ??_main 0071                              __activetblptr 000003  
                  s_driver2_set_value@temp 006B                     _read_ds_dual_de_gozaru 01F6  
                                   _ADCON0 000F60                                     _ADCON1 000F59  
                                   _ADCON2 000F5A                                     _ADCON3 000F5B  
                                   _ADRESH 000F64                                     _ADRESL 000F63  
                           _GOOD_de_gozaru 00D8                                     _ANSELA 000E92  
                                   _ANSELB 000E9A                                     _ANSELD 000EA7  
                                   _ANSELE 000EAF                                     _ANSELF 000EB4  
                                   _ANSELG 000EBC                                     _T0CON0 000FD5  
                                   _T0CON1 000FD6                                     _T1GCON 000FD0  
                                   _T3GCON 000FCA                                     _T5GCON 000FC4  
                                   _RC1REG 000F98                                     _RB0PPS 000E5A  
                                   _RC2REG 000EF1                                     _RB1PPS 000E5B  
                                   _T7GCON 000F31                                     _RC3REG 000EEA  
                                   _RC0PPS 000E62                                     _RC4REG 000EE3  
                                   _RC1STA 000F9C                                     _RC5REG 000EDC  
                                   _RC2STA 000EF5                                     _RC3STA 000EEE  
                                   _RC4STA 000EE7                                     _RC5STA 000EE0  
                                   _ODCONA 000E90                                     _ODCONB 000E98  
                                   _ODCONC 000EA0                                     _RC6PPS 000E68  
                                   _RD4PPS 000E6E                                     _ODCOND 000EA5  
                                   _ODCONE 000EAD                                     _ODCONF 000EB2  
                                   _ODCONG 000EBA                                     _ODCONH 000EBF  
                                   _RD6PPS 000E70                                     i2l1154 0074  
                                   i2l1155 0088                             __CFG_WDTCCS$SC 000000  
          __size_of_TIMER0_16bit_set_count 000C                      _CSV_lib_transmit_flag 0027  
                                   _TX1REG 000F99                                     _TX2REG 000EF2  
                                   _TX3REG 000EEB                                     _TX4REG 000EE4  
                                   _TX1STA 000F9D                                     _TX5REG 000EDD  
                                   _TX2STA 000EF6                                     _TX3STA 000EEF  
                                   _TX4STA 000EE8                                     _TX5STA 000EE1  
                         __end_of_bit_test 07E8            __end_of_DS_LEFT_UD_signed_VALUE 06B6  
                           __CFG_XINST$OFF 000000                             __CFG_STVREN$ON 000000  
                                   clear_0 0768                                     clear_1 0774  
                         __end_of_pin_init 03EC                             output_LED5@num 006A  
                        __end_of_SPI_begin 08DE                               __pdataCOMRAM 004B  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                           __end_of_spi_init 0814  
                   __end_of_GOOD_de_gozaru 01F6                   s_driver1_set_value@value 006C  
                   __size_of_BAD_de_gozaru 0006                    s_driver4_set_value@temp 006B  
                         __end_of_wood_isr 00D4                                 __accesstop 0060  
                  __end_of__initialization 077A                            __CFG_FEXTOSC$HS 000000  
                            ___rparam_used 000001                             __pcstackCOMRAM 0037  
    make_s_driver_ver1_send_data@pwm_value 006A          __size_ofi2_TIMER0_16bit_set_count 000A  
                ?i2_TIMER0_16bit_set_count 0037                     _TIMER0_16bit_set_count 08EC  
                            ?_Serial1_read 0037                            ?_GOOD_de_gozaru 0037  
                             ?_output_LED5 0037                                 __pbssBANK0 0060  
                      _s_driver1_set_value 0886                   s_driver2_set_value@value 006C  
                        _read_ds_dual_byte 055C                          _read_ds_dual_init 06FE  
                            ?_TIMER0_setup 006A                              ?_TIMER1_setup 006A  
                       ?_read_ds_dual_byte 0037                         ?_read_ds_dual_init 0037  
                 __end_of_always_de_gozaru 092E                        _s_driver2_set_value 0860  
                           _SSP1DATPPSbits 000E1A                     i2TIMER1_set_count@data 0037  
                            _BAD_de_gozaru 0922                        ??_read_ds_dual_byte 0037  
                      ??_read_ds_dual_init 006D                       ?_s_driver1_set_value 0037  
                      _s_driver3_set_value 083A                             _SSP2DATPPSbits 000E1D  
                           _SSP1CLKPPSbits 000E19                             ??_Serial1_read 0037  
                     ?_s_driver2_set_value 0037                                    _SP1BRGH 000F9B  
                                  _SP1BRGL 000F9A                __size_ofi2_TIMER1_set_count 000A  
                                  _SP2BRGH 000EF4                                    _SP2BRGL 000EF3  
                                  _SP3BRGH 000EED                                    _SP3BRGL 000EEC  
                                  _SP4BRGH 000EE6                                    _SP4BRGL 000EE5  
                                  _SP5BRGH 000EDF                                    _SP5BRGL 000EDE  
                      _s_driver4_set_value 0814                                    i2u53_40 05AA  
                           _SSP2CLKPPSbits 000E1C                                    i2u56_40 05BE  
                                  _TMR1CLK 000FD2                                    _DS_data 0001  
                                  _TMR3CLK 000FCC                                    _TMR5CLK 000FC6  
                                  _TMR7CLK 000F33                                  ?_bit_test 006A  
                                  _SSP2ADD 000ED6                                    _SSP1BUF 000F91  
                                  _SSP2BUF 000ED5           __size_of_DS_LEFT_UD_signed_VALUE 0064  
                __end_of_read_ds_dual_byte 05D8                  __end_of_read_ds_dual_init 0742  
                     ?_s_driver3_set_value 0037                             ??_TIMER0_setup 006C  
                           ??_TIMER1_setup 006C                                  ?_pin_init 0037  
                                  __Hparam 0000                       ?_s_driver4_set_value 0037  
                                  __Lparam 0000                   s_driver3_set_value@value 006C  
                         TIMER0_setup@data 006A                             ?_BAD_de_gozaru 0037  
                                ?_spi_init 0037                      ??_s_driver1_set_value 006B  
               read_ds_dual_de_gozaru@mode 0033                                    __pcinit 0742  
                  ?_read_ds_dual_de_gozaru 0037                                  ?_wood_isr 0037  
                                  __ramtop 0E00                     __size_of_Serial1_begin 007A  
                                  __ptext0 0784                                    __ptext1 07E8  
                                  __ptext2 08D0                                    __ptext3 06FE  
                                  __ptext4 03EC                                    __ptext5 08DE  
                                  __ptext6 08EC                                    __ptext7 05D8  
                                  __ptext8 01F6                                    __ptext9 092C  
                                _T1CONbits 000FCF                              SPI_begin@data 006A  
                                _T2CONbits 000FBD                      ??_s_driver2_set_value 006B  
                                _T3CONbits 000FC9                                  _T4CONbits 000FB7  
                __size_of_TIMER1_set_count 000C                                  _T5CONbits 000FC3  
                                _T6CONbits 000FB1                                 ??_bit_test 006B  
                         TIMER1_setup@data 006A                                  _T7CONbits 000F30  
                                _T8CONbits 000F2A                       end_of_initialization 077A  
                    ??_s_driver3_set_value 006B                          _sinyounai_DS_data 000E  
                    ??_s_driver4_set_value 006B                                 ??_pin_init 006A  
                        bit_test@bit_place 006A                                    postdec1 000FE5  
                               ??_spi_init 006C                                    postinc0 000FEE  
                                  postinc2 000FDE             __end_of_read_ds_dual_de_gozaru 02F4  
                    __CFG_WDTCPS$WDTCPS_31 000000                                 ??_wood_isr 0039  
                 s_driver4_set_value@value 006C                                  _SPI_begin 08D0  
               __size_of_read_ds_dual_byte 007C                 __size_of_read_ds_dual_init 0044  
                            _Serial1_begin 05D8                       __size_of_output_LED5 0084  
         __end_ofi2_TIMER0_16bit_set_count 0918                             _DS_uart_number 0036  
                     __end_of_Serial1_read 0922                         _CSV_lib_cycle_time 002B  
                          ??_BAD_de_gozaru 006A                    ?_TIMER0_16bit_set_count 006A  
         make_s_driver_ver1_send_data@mode 006B                _DS_communication_error_time 002D  
                            __pidataCOMRAM 0928                           ??_GOOD_de_gozaru 006F  
                     __end_of_TIMER0_setup 08EC                          _enable_interrupts 03EC  
                     __end_of_TIMER1_setup 08D0                         ?_enable_interrupts 0037  
                      start_initialization 0742                    _DS_LEFT_UD_signed_VALUE 0652  
                           bit_test@number 006D                                 ?_SPI_begin 006A  
                      ??_enable_interrupts 006A                             ?_Serial1_begin 006A  
             i2TIMER0_16bit_set_count@data 0037             __end_of_TIMER0_16bit_set_count 08F8  
                         __CFG_LPBOREN$OFF 000000                          ?_always_de_gozaru 0037  
                       ??_always_de_gozaru 006A                  __end_of_enable_interrupts 04D8  
                  s_driver1_set_value@temp 006B                              ?_SPI_transfer 0037  
                              __pbssCOMRAM 0001                           _TIMER1_set_count 08F8  
                            __pcstackBANK0 006A                          __size_of_bit_test 0030  
               TIMER0_16bit_set_count@data 006A                         ten_bit_test@F17522 0020  
                 i2_TIMER0_16bit_set_count 090E                                  __pintcode 0008  
                        __size_of_pin_init 00F8                           __CFG_PPS1WAY$OFF 000000  
                        __size_of_spi_init 002C                             ??_SPI_transfer 006A  
               __end_ofi2_TIMER1_set_count 090E                  ??_DS_LEFT_UD_signed_VALUE 006C  
                                 _BAUD1CON 000F9E                                   _BAUD2CON 000EF7  
                                 _BAUD3CON 000EF0                                   _BAUD4CON 000EE9  
                                 _BAUD5CON 000EE2                          __size_of_wood_isr 00CC  
                  s_driver3_set_value@temp 006B                                ??_SPI_begin 006C  
                          ??_Serial1_begin 006D                                   _T2CLKCON 000FBF  
                       Serial1_begin@speed 006A                                   _T4CLKCON 000FB9  
                    __size_of_Serial1_read 000A                                   _T6CLKCON 000FB3  
                                 _T8CLKCON 000F2C                             _CSV_lib_enable 0031  
                                 _LATAbits 000F79                                   _LATDbits 000F7C  
                                 _LATEbits 000F7D                                   _LATGbits 000F7F  
                                 _LATHbits 000F80                                   _PIE0bits 000E29  
                                 _PIE3bits 000E2C                                   _PIE4bits 000E2D  
                                 _PIE5bits 000E2E                        __CFG_BORV$VBOR_2P45 000000  
              __end_of_s_driver1_set_value 08AC                                   _PIR0bits 000E33  
                                 _PIR3bits 000E36                                   _PIR4bits 000E37  
                                 _PIR5bits 000E38                                  bit_test@i 006E  
                    __size_of_TIMER0_setup 000E                                   _SSP1CON1 000F95  
                                 _SSP2CON1 000ED9                                   _SSP2CON3 000EDB  
                    __size_of_TIMER1_setup 0012                       TIMER1_set_count@data 006A  
                                 _SSP1STAT 000F94                                   _SSP2STAT 000ED8  
              __end_of_s_driver2_set_value 0886                 __size_of_enable_interrupts 00EC  
                               _ADCON0bits 000F60                               _Serial1_read 0918  
              __end_of_s_driver3_set_value 0860                                  copy_data0 0756  
              __end_of_s_driver4_set_value 083A                               _TIMER0_setup 08DE  
                             _TIMER1_setup 08BE                                   __Hrparam 0000  
                  __CFG_RSTOSC$EXTOSC_4PLL 000000                                   __Lrparam 0000  
     __end_of_make_s_driver_ver1_send_data 06FE      __size_of_make_s_driver_ver1_send_data 0048  
             _make_s_driver_ver1_send_data 06B6                                   _bit_test 07B8  
                                 __ptext10 00D8                                   __ptext11 0814  
                                 __ptext20 0922                                   __ptext12 083A  
                                 __ptext21 02F4                                   __ptext13 0860  
                                 __ptext22 08BE                                   __ptext14 0886  
                                 __ptext23 08F8                                   __ptext15 08AC  
                                 __ptext16 04D8                                   __ptext25 0904  
                                 __ptext17 06B6                                   __ptext26 090E  
                                 __ptext18 07B8                                   __ptext27 055C  
                                 __ptext19 0652                                   __ptext28 0918  
                             _SSP1CON1bits 000F95                              ??_output_LED5 006A  
                             _SSP2CON2bits 000EDA                                   _csv_data 0023  
                             _DS_read_stop 0035                          Serial1_begin@data 006C  
                            __size_of_main 0034                       __end_of_SPI_transfer 08BE  
                     __CFG_WDTCWS$WDTCWS_7 000000                                   _pin_init 02F4  
                 __end_of_TIMER1_set_count 0904                      __end_of_BAD_de_gozaru 0928  
                                 _spi_init 07E8                                   int$flags 004F  
            ?_make_s_driver_ver1_send_data 006A                      enable_interrupts@data 006A  
                             _SSP1STATbits 000F94                                   _wood_isr 0008  
                             _SSP2STATbits 000ED8                                 _INTCONbits 000FF2  
                __size_of_always_de_gozaru 0002                           _CSV_lib_now_time 0029  
                                 intlevel2 0000                 ??i2_TIMER0_16bit_set_count 0039  
                        __CFG_CLKOUTEN$OFF 000000                        __end_of_output_LED5 055C  
                 ??_read_ds_dual_de_gozaru 0070                             _before_DS_data 004B  
                              _DS_time_out 004E          read_ds_dual_de_gozaru@read_number 0034  
                               _RX1PPSbits 000E0F                                 _RX2PPSbits 000E11  
                    SPI_transfer@send_data 006A                                 _TX1STAbits 000F9D  
                               _TX2STAbits 000EF6                                 _TX3STAbits 000EEF  
                  __size_of_GOOD_de_gozaru 011E                                 _TX4STAbits 000EE8  
                               _TX5STAbits 000EE1                         i2_TIMER1_set_count 0904  
              CSV_timer_task@CSV_lib_count 0025                               _push_DS_data 002F  
          read_ds_dual_de_gozaru@check_sum 0032                        ?i2_TIMER1_set_count 0037  
