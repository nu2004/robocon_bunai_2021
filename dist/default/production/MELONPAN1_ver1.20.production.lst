

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Aug 16 12:42:37 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           ; Version 2.00
    37                           ; Generated 27/05/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F67K40 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  00067C                     __pidataCOMRAM:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _before_DS_data
    76  00067C  FF                 	db	255
    77  00067D  FF                 	db	255
    78                           
    79                           ;initializer for read_ds_dual_de_gozaru@first_communication
    80  00067E  01                 	db	1
    81                           
    82                           ;initializer for _DS_time_out
    83  00067F  64                 	db	100
    84  0000                     _RD6PPS	set	3696
    85  0000                     _RX2PPSbits	set	3601
    86  0000                     _RD4PPS	set	3694
    87  0000                     _RX1PPSbits	set	3599
    88  0000                     _SSP2CLKPPSbits	set	3612
    89  0000                     _SSP2DATPPSbits	set	3613
    90  0000                     _RB1PPS	set	3675
    91  0000                     _RB0PPS	set	3674
    92  0000                     _RC6PPS	set	3688
    93  0000                     _SSP1CLKPPSbits	set	3609
    94  0000                     _SSP1DATPPSbits	set	3610
    95  0000                     _RC0PPS	set	3682
    96  0000                     _ODCONH	set	3775
    97  0000                     _ODCONG	set	3770
    98  0000                     _ODCONF	set	3762
    99  0000                     _ODCONE	set	3757
   100  0000                     _ODCOND	set	3749
   101  0000                     _ODCONC	set	3744
   102  0000                     _ODCONB	set	3736
   103  0000                     _ODCONA	set	3728
   104  0000                     _WPUH	set	3776
   105  0000                     _WPUG	set	3771
   106  0000                     _WPUF	set	3763
   107  0000                     _WPUE	set	3758
   108  0000                     _WPUD	set	3750
   109  0000                     _WPUC	set	3745
   110  0000                     _WPUB	set	3737
   111  0000                     _WPUA	set	3729
   112  0000                     _ANSELG	set	3772
   113  0000                     _ANSELF	set	3764
   114  0000                     _ANSELE	set	3759
   115  0000                     _ANSELD	set	3751
   116  0000                     _ANSELB	set	3738
   117  0000                     _ANSELA	set	3730
   118  0000                     _PIE4bits	set	3629
   119  0000                     _PIE3bits	set	3628
   120  0000                     _PIE5bits	set	3630
   121  0000                     _PIR5bits	set	3640
   122  0000                     _PIE0bits	set	3625
   123  0000                     _PIR0bits	set	3635
   124  0000                     _TX5REG	set	3805
   125  0000                     _TX5STAbits	set	3809
   126  0000                     _RC5REG	set	3804
   127  0000                     _BAUD5CON	set	3810
   128  0000                     _RC5STA	set	3808
   129  0000                     _TX5STA	set	3809
   130  0000                     _SP5BRGL	set	3806
   131  0000                     _SP5BRGH	set	3807
   132  0000                     _TX4REG	set	3812
   133  0000                     _TX4STAbits	set	3816
   134  0000                     _RC4REG	set	3811
   135  0000                     _BAUD4CON	set	3817
   136  0000                     _RC4STA	set	3815
   137  0000                     _TX4STA	set	3816
   138  0000                     _SP4BRGL	set	3813
   139  0000                     _SP4BRGH	set	3814
   140  0000                     _TX3REG	set	3819
   141  0000                     _TX3STAbits	set	3823
   142  0000                     _RC3REG	set	3818
   143  0000                     _PIR4bits	set	3639
   144  0000                     _BAUD3CON	set	3824
   145  0000                     _RC3STA	set	3822
   146  0000                     _TX3STA	set	3823
   147  0000                     _SP3BRGL	set	3820
   148  0000                     _SP3BRGH	set	3821
   149  0000                     _TX2REG	set	3826
   150  0000                     _TX2STAbits	set	3830
   151  0000                     _RC2REG	set	3825
   152  0000                     _BAUD2CON	set	3831
   153  0000                     _RC2STA	set	3829
   154  0000                     _TX2STA	set	3830
   155  0000                     _SP2BRGL	set	3827
   156  0000                     _SP2BRGH	set	3828
   157  0000                     _SSP2STATbits	set	3800
   158  0000                     _SSP2BUF	set	3797
   159  0000                     _PIR3bits	set	3638
   160  0000                     _SSP2CON2bits	set	3802
   161  0000                     _SSP2STAT	set	3800
   162  0000                     _SSP2ADD	set	3798
   163  0000                     _SSP2CON3	set	3803
   164  0000                     _SSP2CON1	set	3801
   165  0000                     _TMR8	set	3880
   166  0000                     _T8CONbits	set	3882
   167  0000                     _T8CON	set	3882
   168  0000                     _T8CLKCON	set	3884
   169  0000                     _T8PR	set	3881
   170  0000                     _T8HLT	set	3883
   171  0000                     _T8RST	set	3885
   172  0000                     _TMR7L	set	3886
   173  0000                     _TMR7H	set	3887
   174  0000                     _T7CONbits	set	3888
   175  0000                     _T7CON	set	3888
   176  0000                     _TMR7CLK	set	3891
   177  0000                     _T7GCON	set	3889
   178  0000                     _ADPCH	set	3935
   179  0000                     _ADACQ	set	3932
   180  0000                     _ADPRE	set	3934
   181  0000                     _ADREF	set	3928
   182  0000                     _ADCLK	set	3927
   183  0000                     _ADCON3	set	3931
   184  0000                     _ADCON2	set	3930
   185  0000                     _ADCON1	set	3929
   186  0000                     _LATDbits	set	3964
   187  0000                     _LATGbits	set	3967
   188  0000                     _LATHbits	set	3968
   189  0000                     _LATAbits	set	3961
   190  0000                     _LATEbits	set	3965
   191  0000                     _TRISH	set	3976
   192  0000                     _TRISG	set	3975
   193  0000                     _TRISF	set	3974
   194  0000                     _TRISE	set	3973
   195  0000                     _TRISD	set	3972
   196  0000                     _TRISC	set	3971
   197  0000                     _TRISB	set	3970
   198  0000                     _TRISA	set	3969
   199  0000                     _LATH	set	3968
   200  0000                     _LATG	set	3967
   201  0000                     _LATF	set	3966
   202  0000                     _LATE	set	3965
   203  0000                     _LATD	set	3964
   204  0000                     _LATC	set	3963
   205  0000                     _LATB	set	3962
   206  0000                     _LATA	set	3961
   207  0000                     _INTCONbits	set	4082
   208  0000                     _TMR6	set	4015
   209  0000                     _T6CONbits	set	4017
   210  0000                     _T6CON	set	4017
   211  0000                     _T6CLKCON	set	4019
   212  0000                     _T6PR	set	4016
   213  0000                     _T6HLT	set	4018
   214  0000                     _T6RST	set	4020
   215  0000                     _TMR4	set	4021
   216  0000                     _T4CONbits	set	4023
   217  0000                     _T4CON	set	4023
   218  0000                     _T4CLKCON	set	4025
   219  0000                     _T4PR	set	4022
   220  0000                     _T4HLT	set	4024
   221  0000                     _T4RST	set	4026
   222  0000                     _TMR2	set	4027
   223  0000                     _T2CONbits	set	4029
   224  0000                     _T2CON	set	4029
   225  0000                     _T2CLKCON	set	4031
   226  0000                     _T2PR	set	4028
   227  0000                     _T2HLT	set	4030
   228  0000                     _T2RST	set	4032
   229  0000                     _TMR5L	set	4033
   230  0000                     _TMR5H	set	4034
   231  0000                     _T5CONbits	set	4035
   232  0000                     _T5CON	set	4035
   233  0000                     _TMR5CLK	set	4038
   234  0000                     _T5GCON	set	4036
   235  0000                     _TMR3L	set	4039
   236  0000                     _TMR3H	set	4040
   237  0000                     _T3CONbits	set	4041
   238  0000                     _T3CON	set	4041
   239  0000                     _TMR3CLK	set	4044
   240  0000                     _T3GCON	set	4042
   241  0000                     _TMR1L	set	4045
   242  0000                     _TMR1H	set	4046
   243  0000                     _T1CONbits	set	4047
   244  0000                     _T1CON	set	4047
   245  0000                     _TMR1CLK	set	4050
   246  0000                     _T1GCON	set	4048
   247  0000                     _TMR0H	set	4052
   248  0000                     _TMR0L	set	4051
   249  0000                     _T0CON0	set	4053
   250  0000                     _T0CON1	set	4054
   251  0000                     _TX1REG	set	3993
   252  0000                     _TX1STAbits	set	3997
   253  0000                     _RC1REG	set	3992
   254  0000                     _BAUD1CON	set	3998
   255  0000                     _RC1STA	set	3996
   256  0000                     _TX1STA	set	3997
   257  0000                     _SP1BRGL	set	3994
   258  0000                     _SP1BRGH	set	3995
   259  0000                     _SSP1STATbits	set	3988
   260  0000                     _SSP1BUF	set	3985
   261  0000                     _SSP1CON1bits	set	3989
   262  0000                     _SSP1CON1	set	3989
   263  0000                     _SSP1STAT	set	3988
   264  0000                     _ADRESL	set	3939
   265  0000                     _ADRESH	set	3940
   266  0000                     _ADCON0bits	set	3936
   267  0000                     _ADCON0	set	3936
   268                           
   269                           ; #config settings
   270  0000                     
   271                           	psect	cinit
   272  000562                     __pcinit:
   273                           	opt stack 0
   274  000562                     start_initialization:
   275                           	opt stack 0
   276  000562                     __initialization:
   277                           	opt stack 0
   278                           
   279                           ; Initialize objects allocated to COMRAM (4 bytes)
   280                           ; load TBLPTR registers with __pidataCOMRAM
   281  000562  0E7C               	movlw	low __pidataCOMRAM
   282  000564  6EF6               	movwf	tblptrl,c
   283  000566  0E06               	movlw	high __pidataCOMRAM
   284  000568  6EF7               	movwf	tblptrh,c
   285  00056A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   286  00056C  6EF8               	movwf	tblptru,c
   287  00056E  EE00  F04E         	lfsr	0,__pdataCOMRAM
   288  000572  EE10 F004          	lfsr	1,4
   289  000576                     copy_data0:
   290  000576  0009               	tblrd		*+
   291  000578  CFF5 FFEE          	movff	tablat,postinc0
   292  00057C  50E5               	movf	postdec1,w,c
   293  00057E  50E1               	movf	fsr1l,w,c
   294  000580  E1FA               	bnz	copy_data0
   295                           
   296                           ; Clear objects allocated to COMRAM (64 bytes)
   297  000582  EE00  F001         	lfsr	0,__pbssCOMRAM
   298  000586  0E40               	movlw	64
   299  000588                     clear_0:
   300  000588  6AEE               	clrf	postinc0,c
   301  00058A  06E8               	decf	wreg,f,c
   302  00058C  E1FD               	bnz	clear_0
   303  00058E                     end_of_initialization:
   304                           	opt stack 0
   305  00058E                     __end_of__initialization:
   306                           	opt stack 0
   307  00058E  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   308  000590  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   309  000592  0100               	movlb	0
   310  000594  EFCC  F002         	goto	_main	;jump to C main() function
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           postdec1	equ	0xFE5
   318                           fsr1l	equ	0xFE1
   319                           
   320                           	psect	bssCOMRAM
   321  000001                     __pbssCOMRAM:
   322                           	opt stack 0
   323  000001                     _DS_data:
   324                           	opt stack 0
   325  000001                     	ds	13
   326  00000E                     _sinyounai_DS_data:
   327                           	opt stack 0
   328  00000E                     	ds	13
   329  00001B                     _data:
   330                           	opt stack 0
   331  00001B                     	ds	10
   332  000025                     ten_bit_test_unsignedint@F14391:
   333                           	opt stack 0
   334  000025                     	ds	5
   335  00002A                     ten_bit_test@F14387:
   336                           	opt stack 0
   337  00002A                     	ds	3
   338  00002D                     _csv_data:
   339                           	opt stack 0
   340  00002D                     	ds	2
   341  00002F                     CSV_timer_task@CSV_lib_count:
   342                           	opt stack 0
   343  00002F                     	ds	2
   344  000031                     _CSV_lib_transmit_flag:
   345                           	opt stack 0
   346  000031                     	ds	2
   347  000033                     _CSV_lib_now_time:
   348                           	opt stack 0
   349  000033                     	ds	2
   350  000035                     _CSV_lib_cycle_time:
   351                           	opt stack 0
   352  000035                     	ds	2
   353  000037                     _DS_communication_error_time:
   354                           	opt stack 0
   355  000037                     	ds	2
   356  000039                     _push_DS_data:
   357                           	opt stack 0
   358  000039                     	ds	2
   359  00003B                     _CSV_lib_enable:
   360                           	opt stack 0
   361  00003B                     	ds	1
   362  00003C                     read_ds_dual_de_gozaru@check_sum:
   363                           	opt stack 0
   364  00003C                     	ds	1
   365  00003D                     read_ds_dual_de_gozaru@mode:
   366                           	opt stack 0
   367  00003D                     	ds	1
   368  00003E                     read_ds_dual_de_gozaru@read_number:
   369                           	opt stack 0
   370  00003E                     	ds	1
   371  00003F                     _DS_read_stop:
   372                           	opt stack 0
   373  00003F                     	ds	1
   374  000040                     _DS_uart_number:
   375                           	opt stack 0
   376  000040                     	ds	1
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	dataCOMRAM
   387  00004E                     __pdataCOMRAM:
   388                           	opt stack 0
   389  00004E                     _before_DS_data:
   390                           	opt stack 0
   391  00004E                     	ds	2
   392  000050                     read_ds_dual_de_gozaru@first_communication:
   393                           	opt stack 0
   394  000050                     	ds	1
   395  000051                     _DS_time_out:
   396                           	opt stack 0
   397  000051                     	ds	1
   398                           tblptru	equ	0xFF8
   399                           tblptrh	equ	0xFF7
   400                           tblptrl	equ	0xFF6
   401                           tablat	equ	0xFF5
   402                           postinc0	equ	0xFEE
   403                           wreg	equ	0xFE8
   404                           postdec1	equ	0xFE5
   405                           fsr1l	equ	0xFE1
   406                           
   407                           	psect	cstackCOMRAM
   408  000041                     __pcstackCOMRAM:
   409                           	opt stack 0
   410  000041                     i2TIMER0_16bit_set_count@data:
   411                           	opt stack 0
   412  000041                     i2TIMER1_set_count@data:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x0
   416  000041                     	ds	2
   417  000043                     ??_wood_isr:
   418  000043                     
   419                           ; 1 bytes @ 0x2
   420  000043                     	ds	4
   421  000047                     enable_interrupts@data:
   422                           	opt stack 0
   423  000047                     bit_test@bit_place:
   424                           	opt stack 0
   425  000047                     output_LED5@num:
   426                           	opt stack 0
   427  000047                     SPI_begin@data:
   428                           	opt stack 0
   429  000047                     Serial1_begin@speed:
   430                           	opt stack 0
   431  000047                     TIMER0_setup@data:
   432                           	opt stack 0
   433  000047                     TIMER0_16bit_set_count@data:
   434                           	opt stack 0
   435  000047                     TIMER1_setup@data:
   436                           	opt stack 0
   437  000047                     TIMER1_set_count@data:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x6
   441  000047                     	ds	1
   442  000048                     ??_bit_test:
   443                           
   444                           ; 1 bytes @ 0x7
   445  000048                     	ds	1
   446  000049                     Serial1_begin@data:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x8
   450  000049                     	ds	1
   451  00004A                     bit_test@number:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x9
   455  00004A                     	ds	1
   456  00004B                     bit_test@i:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0xA
   460  00004B                     	ds	1
   461  00004C                     ??_GOOD_de_gozaru:
   462                           
   463                           ; 1 bytes @ 0xB
   464  00004C                     	ds	1
   465  00004D                     
   466                           ; 1 bytes @ 0xC
   467  00004D                     	ds	1
   468  00004E                     tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           postdec1	equ	0xFE5
   475                           fsr1l	equ	0xFE1
   476                           
   477                           ; 1 bytes @ 0xD
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 42 in file "MELON PAN1_main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels required when called:    6
   503 ;; This function calls:
   504 ;;		_TIMER1_set_count
   505 ;;		_TIMER1_setup
   506 ;;		_enable_interrupts
   507 ;;		_pin_init
   508 ;;		_read_ds_dual_de_gozaru
   509 ;;		_read_ds_dual_init
   510 ;;		_spi_init
   511 ;; This function is called by:
   512 ;;		Startup code after reset
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text0
   517  000598                     __ptext0:
   518                           	opt stack 0
   519  000598                     _main:
   520                           	opt stack 25
   521                           
   522                           ;MELON PAN1_main.c: 44: pin_init();
   523                           
   524                           ;incstack = 0
   525  000598  ECB3  F000         	call	_pin_init	;wreg free
   526                           
   527                           ;MELON PAN1_main.c: 48: spi_init();
   528  00059C  ECE4  F002         	call	_spi_init	;wreg free
   529                           
   530                           ;MELON PAN1_main.c: 49: read_ds_dual_init();
   531  0005A0  EC92  F002         	call	_read_ds_dual_init	;wreg free
   532                           
   533                           ;MELON PAN1_main.c: 51: TIMER1_setup(0x0100 | 0x20);
   534  0005A4  0E01               	movlw	1
   535  0005A6  6E48               	movwf	TIMER1_setup@data+1,c
   536  0005A8  0E20               	movlw	32
   537  0005AA  6E47               	movwf	TIMER1_setup@data,c
   538  0005AC  EC0E  F003         	call	_TIMER1_setup	;wreg free
   539                           
   540                           ;MELON PAN1_main.c: 52: TIMER1_set_count(25536);
   541  0005B0  0E63               	movlw	99
   542  0005B2  6E48               	movwf	TIMER1_set_count@data+1,c
   543  0005B4  0EC0               	movlw	192
   544  0005B6  6E47               	movwf	TIMER1_set_count@data,c
   545  0005B8  EC27  F003         	call	_TIMER1_set_count	;wreg free
   546                           
   547                           ;MELON PAN1_main.c: 53: enable_interrupts(2);
   548  0005BC  0E02               	movlw	2
   549  0005BE  EC2F  F001         	call	_enable_interrupts
   550  0005C2                     
   551                           ;MELON PAN1_main.c: 65: read_ds_dual_de_gozaru();
   552  0005C2  EC34  F000         	call	_read_ds_dual_de_gozaru	;wreg free
   553  0005C6  D7FD               	goto	l1161
   554  0005C8                     __end_of_main:
   555                           	opt stack 0
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           postinc0	equ	0xFEE
   561                           wreg	equ	0xFE8
   562                           postdec1	equ	0xFE5
   563                           fsr1l	equ	0xFE1
   564                           
   565 ;; *************** function _spi_init *****************
   566 ;; Defined at:
   567 ;;		line 205 in file "pindef.h"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, status,2, status,0, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   585 ;;Total ram usage:        0 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; Hardware stack levels required when called:    4
   588 ;; This function calls:
   589 ;;		_SPI_begin
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	text1
   596  0005C8                     __ptext1:
   597                           	opt stack 0
   598  0005C8                     _spi_init:
   599                           	opt stack 26
   600                           
   601                           ;pindef.h: 206: SPI_begin(0x0000 | 0x01);
   602                           
   603                           ;incstack = 0
   604  0005C8  0E00               	movlw	0
   605  0005CA  6E48               	movwf	SPI_begin@data+1,c
   606  0005CC  0E01               	movlw	1
   607  0005CE  6E47               	movwf	SPI_begin@data,c
   608  0005D0  EC16  F003         	call	_SPI_begin	;wreg free
   609                           
   610                           ;pindef.h: 207: LATAbits.LATA3=1;
   611  0005D4  8679               	bsf	3961,3,c	;volatile
   612                           
   613                           ;pindef.h: 208: LATAbits.LATA2=1;
   614  0005D6  8479               	bsf	3961,2,c	;volatile
   615                           
   616                           ;pindef.h: 209: LATAbits.LATA1=1;
   617  0005D8  8279               	bsf	3961,1,c	;volatile
   618                           
   619                           ;pindef.h: 210: LATAbits.LATA0=1;
   620  0005DA  8079               	bsf	3961,0,c	;volatile
   621                           
   622                           ;pindef.h: 211: LATHbits.LATH1=1;
   623  0005DC  8280               	bsf	3968,1,c	;volatile
   624                           
   625                           ;pindef.h: 212: LATHbits.LATH0=1;
   626  0005DE  8080               	bsf	3968,0,c	;volatile
   627                           
   628                           ;pindef.h: 213: LATAbits.LATA5=1;
   629  0005E0  8A79               	bsf	3961,5,c	;volatile
   630                           
   631                           ;pindef.h: 214: LATAbits.LATA4=1;
   632  0005E2  8879               	bsf	3961,4,c	;volatile
   633                           
   634                           ;pindef.h: 215: LATGbits.LATG6=1;
   635  0005E4  8C7F               	bsf	3967,6,c	;volatile
   636                           
   637                           ;pindef.h: 216: LATGbits.LATG1=1;
   638  0005E6  827F               	bsf	3967,1,c	;volatile
   639                           
   640                           ;pindef.h: 217: LATGbits.LATG0=1;
   641  0005E8  807F               	bsf	3967,0,c	;volatile
   642                           
   643                           ;pindef.h: 218: LATEbits.LATE0=1;
   644  0005EA  807D               	bsf	3965,0,c	;volatile
   645                           
   646                           ;pindef.h: 219: LATEbits.LATE1=1;
   647  0005EC  827D               	bsf	3965,1,c	;volatile
   648                           
   649                           ;pindef.h: 220: LATEbits.LATE2=1;
   650  0005EE  847D               	bsf	3965,2,c	;volatile
   651  0005F0  0012               	return		;funcret
   652  0005F2                     __end_of_spi_init:
   653                           	opt stack 0
   654                           tblptru	equ	0xFF8
   655                           tblptrh	equ	0xFF7
   656                           tblptrl	equ	0xFF6
   657                           tablat	equ	0xFF5
   658                           postinc0	equ	0xFEE
   659                           wreg	equ	0xFE8
   660                           postdec1	equ	0xFE5
   661                           fsr1l	equ	0xFE1
   662                           
   663 ;; *************** function _SPI_begin *****************
   664 ;; Defined at:
   665 ;;		line 383 in file "MELONPAN1_lib_ver1.20.h"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  data            2    6[COMRAM] unsigned int 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, status,2, status,0
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   683 ;;Total ram usage:        2 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    3
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_spi_init
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text2
   694  00062C                     __ptext2:
   695                           	opt stack 0
   696  00062C                     _SPI_begin:
   697                           	opt stack 26
   698                           
   699                           ;MELONPAN1_lib_ver1.20.h: 384: SSP1STAT=((char)(data>>8)) | 0x00;
   700                           
   701                           ;incstack = 0
   702  00062C  5048               	movf	SPI_begin@data+1,w,c
   703  00062E  6E94               	movwf	3988,c	;volatile
   704                           
   705                           ;MELONPAN1_lib_ver1.20.h: 385: SSP1CON1=((char)(data & 0x00ff)) | 0x20;
   706  000630  5047               	movf	SPI_begin@data,w,c
   707  000632  0920               	iorlw	32
   708  000634  6E95               	movwf	3989,c	;volatile
   709  000636  0012               	return		;funcret
   710  000638                     __end_of_SPI_begin:
   711                           	opt stack 0
   712                           tblptru	equ	0xFF8
   713                           tblptrh	equ	0xFF7
   714                           tblptrl	equ	0xFF6
   715                           tablat	equ	0xFF5
   716                           postinc0	equ	0xFEE
   717                           wreg	equ	0xFE8
   718                           postdec1	equ	0xFE5
   719                           fsr1l	equ	0xFE1
   720                           
   721 ;; *************** function _read_ds_dual_init *****************
   722 ;; Defined at:
   723 ;;		line 95 in file "ds_dual_wood.h"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; Hardware stack levels required when called:    4
   744 ;; This function calls:
   745 ;;		_Serial1_begin
   746 ;;		_TIMER0_16bit_set_count
   747 ;;		_TIMER0_setup
   748 ;;		_enable_interrupts
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text3
   755  000524                     __ptext3:
   756                           	opt stack 0
   757  000524                     _read_ds_dual_init:
   758                           	opt stack 26
   759                           
   760                           ;ds_dual_wood.h: 97: TIMER0_setup(0x10 | 0x4000 | 0x0300);
   761                           
   762                           ;incstack = 0
   763  000524  0E43               	movlw	67
   764  000526  6E48               	movwf	TIMER0_setup@data+1,c
   765  000528  0E10               	movlw	16
   766  00052A  6E47               	movwf	TIMER0_setup@data,c
   767  00052C  EC1C  F003         	call	_TIMER0_setup	;wreg free
   768                           
   769                           ;ds_dual_wood.h: 98: TIMER0_16bit_set_count(25536);
   770  000530  0E63               	movlw	99
   771  000532  6E48               	movwf	TIMER0_16bit_set_count@data+1,c
   772  000534  0EC0               	movlw	192
   773  000536  6E47               	movwf	TIMER0_16bit_set_count@data,c
   774  000538  EC22  F003         	call	_TIMER0_16bit_set_count	;wreg free
   775                           
   776                           ;ds_dual_wood.h: 104: Serial1_begin(57600,0x00);
   777  00053C  0EE1               	movlw	225
   778  00053E  6E48               	movwf	Serial1_begin@speed+1,c
   779  000540  0E00               	movlw	0
   780  000542  6E47               	movwf	Serial1_begin@speed,c
   781  000544  0E00               	movlw	0
   782  000546  6E49               	movwf	Serial1_begin@data,c
   783  000548  EC21  F002         	call	_Serial1_begin	;wreg free
   784                           
   785                           ;ds_dual_wood.h: 105: TX1STAbits.TXEN=0;
   786  00054C  9A9D               	bcf	3997,5,c	;volatile
   787                           
   788                           ;ds_dual_wood.h: 107: enable_interrupts(10);
   789  00054E  0E0A               	movlw	10
   790  000550  EC2F  F001         	call	_enable_interrupts
   791                           
   792                           ;ds_dual_wood.h: 108: enable_interrupts(1);
   793  000554  0E01               	movlw	1
   794  000556  EC2F  F001         	call	_enable_interrupts
   795                           
   796                           ;ds_dual_wood.h: 109: enable_interrupts(0);
   797  00055A  0E00               	movlw	0
   798  00055C  EC2F  F001         	call	_enable_interrupts
   799  000560  0012               	return		;funcret
   800  000562                     __end_of_read_ds_dual_init:
   801                           	opt stack 0
   802                           tblptru	equ	0xFF8
   803                           tblptrh	equ	0xFF7
   804                           tblptrl	equ	0xFF6
   805                           tablat	equ	0xFF5
   806                           postinc0	equ	0xFEE
   807                           wreg	equ	0xFE8
   808                           postdec1	equ	0xFE5
   809                           fsr1l	equ	0xFE1
   810                           
   811 ;; *************** function _enable_interrupts *****************
   812 ;; Defined at:
   813 ;;		line 911 in file "MELONPAN1_lib_ver1.20.h"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  data            1    wreg     unsigned char 
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  data            1    6[COMRAM] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   831 ;;Total ram usage:        1 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    3
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_read_ds_dual_init
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text4
   843  00025E                     __ptext4:
   844                           	opt stack 0
   845  00025E                     _enable_interrupts:
   846                           	opt stack 26
   847                           
   848                           ;incstack = 0
   849                           ;enable_interrupts@data stored from wreg
   850  00025E  6E47               	movwf	enable_interrupts@data,c
   851                           
   852                           ;MELONPAN1_lib_ver1.20.h: 912: switch(data){
   853  000260  D043               	goto	l742
   854  000262                     l743:
   855                           
   856                           ;MELONPAN1_lib_ver1.20.h: 914: INTCONbits.GIE=1;
   857  000262  8EF2               	bsf	intcon,7,c	;volatile
   858                           
   859                           ;MELONPAN1_lib_ver1.20.h: 915: break;
   860  000264  0012               	return	
   861  000266                     l745:
   862                           
   863                           ;MELONPAN1_lib_ver1.20.h: 917: INTCONbits.PEIE=1;
   864  000266  8CF2               	bsf	intcon,6,c	;volatile
   865                           
   866                           ;MELONPAN1_lib_ver1.20.h: 918: PIR0bits.TMR0IF=0;
   867  000268  010E               	movlb	14	; () banked
   868  00026A  9B33               	bcf	51,5,b	;volatile
   869                           
   870                           ;MELONPAN1_lib_ver1.20.h: 919: PIE0bits.TMR0IE=1;
   871  00026C  8B29               	bsf	41,5,b	;volatile
   872                           
   873                           ;MELONPAN1_lib_ver1.20.h: 920: break;
   874  00026E  0012               	return	
   875  000270                     l746:
   876                           
   877                           ;MELONPAN1_lib_ver1.20.h: 922: INTCONbits.PEIE=1;
   878  000270  8CF2               	bsf	intcon,6,c	;volatile
   879                           
   880                           ;MELONPAN1_lib_ver1.20.h: 923: PIR5bits.TMR1IF=0;
   881  000272  010E               	movlb	14	; () banked
   882  000274  9138               	bcf	56,0,b	;volatile
   883                           
   884                           ;MELONPAN1_lib_ver1.20.h: 924: PIE5bits.TMR1IE=1;
   885  000276  812E               	bsf	46,0,b	;volatile
   886                           
   887                           ;MELONPAN1_lib_ver1.20.h: 925: break;
   888  000278  0012               	return	
   889  00027A                     l747:
   890                           
   891                           ;MELONPAN1_lib_ver1.20.h: 927: INTCONbits.PEIE=1;
   892  00027A  8CF2               	bsf	intcon,6,c	;volatile
   893                           
   894                           ;MELONPAN1_lib_ver1.20.h: 928: PIR5bits.TMR3IF=0;
   895  00027C  010E               	movlb	14	; () banked
   896  00027E  9538               	bcf	56,2,b	;volatile
   897                           
   898                           ;MELONPAN1_lib_ver1.20.h: 929: PIE5bits.TMR3IE=1;
   899  000280  852E               	bsf	46,2,b	;volatile
   900                           
   901                           ;MELONPAN1_lib_ver1.20.h: 930: break;
   902  000282  0012               	return	
   903  000284                     l748:
   904                           
   905                           ;MELONPAN1_lib_ver1.20.h: 932: INTCONbits.PEIE=1;
   906  000284  8CF2               	bsf	intcon,6,c	;volatile
   907                           
   908                           ;MELONPAN1_lib_ver1.20.h: 933: PIR5bits.TMR5IF=0;
   909  000286  010E               	movlb	14	; () banked
   910  000288  9938               	bcf	56,4,b	;volatile
   911                           
   912                           ;MELONPAN1_lib_ver1.20.h: 934: PIE5bits.TMR5IE=1;
   913  00028A  892E               	bsf	46,4,b	;volatile
   914                           
   915                           ;MELONPAN1_lib_ver1.20.h: 935: break;
   916  00028C  0012               	return	
   917  00028E                     l749:
   918                           
   919                           ;MELONPAN1_lib_ver1.20.h: 937: INTCONbits.PEIE=1;
   920  00028E  8CF2               	bsf	intcon,6,c	;volatile
   921                           
   922                           ;MELONPAN1_lib_ver1.20.h: 938: PIR5bits.TMR7IF=0;
   923  000290  010E               	movlb	14	; () banked
   924  000292  9D38               	bcf	56,6,b	;volatile
   925                           
   926                           ;MELONPAN1_lib_ver1.20.h: 939: PIE5bits.TMR7IE=1;
   927  000294  8D2E               	bsf	46,6,b	;volatile
   928                           
   929                           ;MELONPAN1_lib_ver1.20.h: 940: break;
   930  000296  0012               	return	
   931  000298                     l750:
   932                           
   933                           ;MELONPAN1_lib_ver1.20.h: 942: INTCONbits.PEIE=1;
   934  000298  8CF2               	bsf	intcon,6,c	;volatile
   935                           
   936                           ;MELONPAN1_lib_ver1.20.h: 943: PIR5bits.TMR2IF=0;
   937  00029A  010E               	movlb	14	; () banked
   938  00029C  9338               	bcf	56,1,b	;volatile
   939                           
   940                           ;MELONPAN1_lib_ver1.20.h: 944: PIE5bits.TMR2IE=1;
   941  00029E  832E               	bsf	46,1,b	;volatile
   942                           
   943                           ;MELONPAN1_lib_ver1.20.h: 945: break;
   944  0002A0  0012               	return	
   945  0002A2                     l751:
   946                           
   947                           ;MELONPAN1_lib_ver1.20.h: 947: INTCONbits.PEIE=1;
   948  0002A2  8CF2               	bsf	intcon,6,c	;volatile
   949                           
   950                           ;MELONPAN1_lib_ver1.20.h: 948: PIR5bits.TMR4IF=0;
   951  0002A4  010E               	movlb	14	; () banked
   952  0002A6  9738               	bcf	56,3,b	;volatile
   953                           
   954                           ;MELONPAN1_lib_ver1.20.h: 949: PIE5bits.TMR4IE=1;
   955  0002A8  872E               	bsf	46,3,b	;volatile
   956                           
   957                           ;MELONPAN1_lib_ver1.20.h: 950: break;
   958  0002AA  0012               	return	
   959  0002AC                     l752:
   960                           
   961                           ;MELONPAN1_lib_ver1.20.h: 952: INTCONbits.PEIE=1;
   962  0002AC  8CF2               	bsf	intcon,6,c	;volatile
   963                           
   964                           ;MELONPAN1_lib_ver1.20.h: 953: PIR5bits.TMR6IF=0;
   965  0002AE  010E               	movlb	14	; () banked
   966  0002B0  9B38               	bcf	56,5,b	;volatile
   967                           
   968                           ;MELONPAN1_lib_ver1.20.h: 954: PIE5bits.TMR6IE=1;
   969  0002B2  8B2E               	bsf	46,5,b	;volatile
   970                           
   971                           ;MELONPAN1_lib_ver1.20.h: 955: break;
   972  0002B4  0012               	return	
   973  0002B6                     l753:
   974                           
   975                           ;MELONPAN1_lib_ver1.20.h: 957: INTCONbits.PEIE=1;
   976  0002B6  8CF2               	bsf	intcon,6,c	;volatile
   977                           
   978                           ;MELONPAN1_lib_ver1.20.h: 958: PIR5bits.TMR8IF=0;
   979  0002B8  010E               	movlb	14	; () banked
   980  0002BA  9F38               	bcf	56,7,b	;volatile
   981                           
   982                           ;MELONPAN1_lib_ver1.20.h: 959: PIE5bits.TMR8IE=1;
   983  0002BC  8F2E               	bsf	46,7,b	;volatile
   984                           
   985                           ;MELONPAN1_lib_ver1.20.h: 960: break;
   986  0002BE  0012               	return	
   987  0002C0                     l754:
   988                           
   989                           ;MELONPAN1_lib_ver1.20.h: 962: INTCONbits.PEIE=1;
   990  0002C0  8CF2               	bsf	intcon,6,c	;volatile
   991                           
   992                           ;MELONPAN1_lib_ver1.20.h: 963: PIE3bits.RC1IE=1;
   993  0002C2  010E               	movlb	14	; () banked
   994  0002C4  8B2C               	bsf	44,5,b	;volatile
   995                           
   996                           ;MELONPAN1_lib_ver1.20.h: 964: break;
   997  0002C6  0012               	return	
   998  0002C8                     l755:
   999                           
  1000                           ;MELONPAN1_lib_ver1.20.h: 966: INTCONbits.PEIE=1;
  1001  0002C8  8CF2               	bsf	intcon,6,c	;volatile
  1002                           
  1003                           ;MELONPAN1_lib_ver1.20.h: 967: PIE3bits.RC2IE=1;
  1004  0002CA  010E               	movlb	14	; () banked
  1005  0002CC  8F2C               	bsf	44,7,b	;volatile
  1006                           
  1007                           ;MELONPAN1_lib_ver1.20.h: 968: break;
  1008  0002CE  0012               	return	
  1009  0002D0                     l756:
  1010                           
  1011                           ;MELONPAN1_lib_ver1.20.h: 970: INTCONbits.PEIE=1;
  1012  0002D0  8CF2               	bsf	intcon,6,c	;volatile
  1013                           
  1014                           ;MELONPAN1_lib_ver1.20.h: 971: PIE4bits.RC3IE=1;
  1015  0002D2  010E               	movlb	14	; () banked
  1016  0002D4  832D               	bsf	45,1,b	;volatile
  1017                           
  1018                           ;MELONPAN1_lib_ver1.20.h: 972: break;
  1019  0002D6  0012               	return	
  1020  0002D8                     l757:
  1021                           
  1022                           ;MELONPAN1_lib_ver1.20.h: 974: INTCONbits.PEIE=1;
  1023  0002D8  8CF2               	bsf	intcon,6,c	;volatile
  1024                           
  1025                           ;MELONPAN1_lib_ver1.20.h: 975: PIE4bits.RC4IE=1;
  1026  0002DA  010E               	movlb	14	; () banked
  1027  0002DC  872D               	bsf	45,3,b	;volatile
  1028                           
  1029                           ;MELONPAN1_lib_ver1.20.h: 976: break;
  1030  0002DE  0012               	return	
  1031  0002E0                     l758:
  1032                           
  1033                           ;MELONPAN1_lib_ver1.20.h: 978: INTCONbits.PEIE=1;
  1034  0002E0  8CF2               	bsf	intcon,6,c	;volatile
  1035                           
  1036                           ;MELONPAN1_lib_ver1.20.h: 979: PIE4bits.RC5IE=1;
  1037  0002E2  010E               	movlb	14	; () banked
  1038  0002E4  8B2D               	bsf	45,5,b	;volatile
  1039                           
  1040                           ; BSR set to: 14
  1041                           ;MELONPAN1_lib_ver1.20.h: 981: }
  1042                           
  1043                           ;MELONPAN1_lib_ver1.20.h: 980: break;
  1044  0002E6  0012               	return	
  1045  0002E8                     l742:
  1046                           
  1047                           ; BSR set to: 14
  1048  0002E8  5047               	movf	enable_interrupts@data,w,c
  1049                           
  1050                           ; Switch size 1, requested type "space"
  1051                           ; Number of cases is 15, Range of values is 0 to 14
  1052                           ; switch strategies available:
  1053                           ; Name         Instructions Cycles
  1054                           ; simple_byte           46    24 (average)
  1055                           ;	Chosen strategy is simple_byte
  1056  0002EA  0A00               	xorlw	0	; case 0
  1057  0002EC  B4D8               	btfsc	status,2,c
  1058  0002EE  D7B9               	goto	l743
  1059  0002F0  0A01               	xorlw	1	; case 1
  1060  0002F2  B4D8               	btfsc	status,2,c
  1061  0002F4  D7B8               	goto	l745
  1062  0002F6  0A03               	xorlw	3	; case 2
  1063  0002F8  B4D8               	btfsc	status,2,c
  1064  0002FA  D7BA               	goto	l746
  1065  0002FC  0A01               	xorlw	1	; case 3
  1066  0002FE  B4D8               	btfsc	status,2,c
  1067  000300  D7CB               	goto	l750
  1068  000302  0A07               	xorlw	7	; case 4
  1069  000304  B4D8               	btfsc	status,2,c
  1070  000306  D7B9               	goto	l747
  1071  000308  0A01               	xorlw	1	; case 5
  1072  00030A  B4D8               	btfsc	status,2,c
  1073  00030C  D7CA               	goto	l751
  1074  00030E  0A03               	xorlw	3	; case 6
  1075  000310  B4D8               	btfsc	status,2,c
  1076  000312  D7B8               	goto	l748
  1077  000314  0A01               	xorlw	1	; case 7
  1078  000316  B4D8               	btfsc	status,2,c
  1079  000318  D7C9               	goto	l752
  1080  00031A  0A0F               	xorlw	15	; case 8
  1081  00031C  B4D8               	btfsc	status,2,c
  1082  00031E  D7B7               	goto	l749
  1083  000320  0A01               	xorlw	1	; case 9
  1084  000322  B4D8               	btfsc	status,2,c
  1085  000324  D7C8               	goto	l753
  1086  000326  0A03               	xorlw	3	; case 10
  1087  000328  B4D8               	btfsc	status,2,c
  1088  00032A  D7CA               	goto	l754
  1089  00032C  0A01               	xorlw	1	; case 11
  1090  00032E  B4D8               	btfsc	status,2,c
  1091  000330  D7CB               	goto	l755
  1092  000332  0A07               	xorlw	7	; case 12
  1093  000334  B4D8               	btfsc	status,2,c
  1094  000336  D7CC               	goto	l756
  1095  000338  0A01               	xorlw	1	; case 13
  1096  00033A  B4D8               	btfsc	status,2,c
  1097  00033C  D7CD               	goto	l757
  1098  00033E  0A03               	xorlw	3	; case 14
  1099  000340  A4D8               	btfss	status,2,c
  1100  000342  0012               	return	
  1101  000344  D7CD               	goto	l758
  1102  000346                     __end_of_enable_interrupts:
  1103                           	opt stack 0
  1104                           tblptru	equ	0xFF8
  1105                           tblptrh	equ	0xFF7
  1106                           tblptrl	equ	0xFF6
  1107                           tablat	equ	0xFF5
  1108                           intcon	equ	0xFF2
  1109                           postinc0	equ	0xFEE
  1110                           wreg	equ	0xFE8
  1111                           postdec1	equ	0xFE5
  1112                           fsr1l	equ	0xFE1
  1113                           status	equ	0xFD8
  1114                           
  1115 ;; *************** function _TIMER0_setup *****************
  1116 ;; Defined at:
  1117 ;;		line 708 in file "MELONPAN1_lib_ver1.20.h"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  data            2    6[COMRAM] unsigned int 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;		None
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1134 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1135 ;;Total ram usage:        2 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    3
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_read_ds_dual_init
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text5
  1146  000638                     __ptext5:
  1147                           	opt stack 0
  1148  000638                     _TIMER0_setup:
  1149                           	opt stack 26
  1150                           
  1151                           ;MELONPAN1_lib_ver1.20.h: 709: T0CON1=(char)((data>>8) & 0xff);
  1152                           
  1153                           ;incstack = 0
  1154  000638  5048               	movf	TIMER0_setup@data+1,w,c
  1155  00063A  6ED6               	movwf	4054,c	;volatile
  1156                           
  1157                           ;MELONPAN1_lib_ver1.20.h: 710: T0CON0=((char)(data & 0xff)) | 0x80;
  1158  00063C  5047               	movf	TIMER0_setup@data,w,c
  1159  00063E  0980               	iorlw	128
  1160  000640  6ED5               	movwf	4053,c	;volatile
  1161  000642  0012               	return		;funcret
  1162  000644                     __end_of_TIMER0_setup:
  1163                           	opt stack 0
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           intcon	equ	0xFF2
  1169                           postinc0	equ	0xFEE
  1170                           wreg	equ	0xFE8
  1171                           postdec1	equ	0xFE5
  1172                           fsr1l	equ	0xFE1
  1173                           status	equ	0xFD8
  1174                           
  1175 ;; *************** function _TIMER0_16bit_set_count *****************
  1176 ;; Defined at:
  1177 ;;		line 721 in file "MELONPAN1_lib_ver1.20.h"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  data            2    6[COMRAM] unsigned int 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1195 ;;Total ram usage:        2 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    3
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_read_ds_dual_init
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text6
  1206  000644                     __ptext6:
  1207                           	opt stack 0
  1208  000644                     _TIMER0_16bit_set_count:
  1209                           	opt stack 26
  1210                           
  1211                           ;MELONPAN1_lib_ver1.20.h: 722: TMR0H=(char)(data>>8);
  1212                           
  1213                           ;incstack = 0
  1214  000644  5048               	movf	TIMER0_16bit_set_count@data+1,w,c
  1215  000646  6ED4               	movwf	4052,c	;volatile
  1216                           
  1217                           ;MELONPAN1_lib_ver1.20.h: 723: TMR0L=(char)(data);
  1218  000648  C047  FFD3         	movff	TIMER0_16bit_set_count@data,4051	;volatile
  1219  00064C  0012               	return		;funcret
  1220  00064E                     __end_of_TIMER0_16bit_set_count:
  1221                           	opt stack 0
  1222                           tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           intcon	equ	0xFF2
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           postdec1	equ	0xFE5
  1230                           fsr1l	equ	0xFE1
  1231                           status	equ	0xFD8
  1232                           
  1233 ;; *************** function _Serial1_begin *****************
  1234 ;; Defined at:
  1235 ;;		line 458 in file "MELONPAN1_lib_ver1.20.h"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;  speed           2    6[COMRAM] unsigned int 
  1238 ;;  data            1    8[COMRAM] unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1250 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1253 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1254 ;;Total ram usage:        3 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    3
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_read_ds_dual_init
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text7
  1265  000442                     __ptext7:
  1266                           	opt stack 0
  1267  000442                     _Serial1_begin:
  1268                           	opt stack 26
  1269                           
  1270                           ;MELONPAN1_lib_ver1.20.h: 462: }else if(speed==57600){
  1271                           
  1272                           ;MELONPAN1_lib_ver1.20.h: 461: SP1BRGL=0x8A;
  1273                           
  1274                           ;MELONPAN1_lib_ver1.20.h: 460: SP1BRGH=0x00;
  1275                           
  1276                           ;MELONPAN1_lib_ver1.20.h: 459: if(speed==115200){
  1277                           
  1278                           ;incstack = 0
  1279  000442  0EE1               	movlw	225
  1280  000444  1848               	xorwf	Serial1_begin@speed+1,w,c
  1281  000446  1047               	iorwf	Serial1_begin@speed,w,c
  1282  000448  A4D8               	btfss	status,2,c
  1283  00044A  D004               	goto	l458
  1284                           
  1285                           ;MELONPAN1_lib_ver1.20.h: 463: SP1BRGH=0x01;
  1286  00044C  0E01               	movlw	1
  1287  00044E  6E9B               	movwf	3995,c	;volatile
  1288                           
  1289                           ;MELONPAN1_lib_ver1.20.h: 464: SP1BRGL=0x15;
  1290  000450  0E15               	movlw	21
  1291  000452  D029               	goto	L5
  1292  000454                     l458:
  1293  000454  0E4B               	movlw	75
  1294  000456  1848               	xorwf	Serial1_begin@speed+1,w,c
  1295  000458  1047               	iorwf	Serial1_begin@speed,w,c
  1296  00045A  A4D8               	btfss	status,2,c
  1297  00045C  D004               	goto	l460
  1298                           
  1299                           ;MELONPAN1_lib_ver1.20.h: 466: SP1BRGH=0x03;
  1300  00045E  0E03               	movlw	3
  1301  000460  6E9B               	movwf	3995,c	;volatile
  1302                           
  1303                           ;MELONPAN1_lib_ver1.20.h: 467: SP1BRGL=0x40;
  1304  000462  0E40               	movlw	64
  1305  000464  D020               	goto	L5
  1306  000466                     l460:
  1307  000466  0E80               	movlw	128
  1308  000468  1847               	xorwf	Serial1_begin@speed,w,c
  1309  00046A  E108               	bnz	l3372
  1310  00046C  0E25               	movlw	37
  1311  00046E  1848               	xorwf	Serial1_begin@speed+1,w,c
  1312  000470  A4D8               	btfss	status,2,c
  1313  000472  D004               	goto	l462
  1314                           
  1315                           ;MELONPAN1_lib_ver1.20.h: 469: SP1BRGH=0x06;
  1316  000474  0E06               	movlw	6
  1317  000476  6E9B               	movwf	3995,c	;volatile
  1318                           
  1319                           ;MELONPAN1_lib_ver1.20.h: 470: SP1BRGL=0x82;
  1320  000478  0E82               	movlw	130
  1321  00047A  D015               	goto	L5
  1322  00047C                     l462:
  1323  00047C                     l3372:
  1324  00047C  0E60               	movlw	96
  1325  00047E  1847               	xorwf	Serial1_begin@speed,w,c
  1326  000480  E108               	bnz	l3376
  1327  000482  0E09               	movlw	9
  1328  000484  1848               	xorwf	Serial1_begin@speed+1,w,c
  1329  000486  A4D8               	btfss	status,2,c
  1330  000488  D004               	goto	l464
  1331                           
  1332                           ;MELONPAN1_lib_ver1.20.h: 472: SP1BRGH=0x1A;
  1333  00048A  0E1A               	movlw	26
  1334  00048C  6E9B               	movwf	3995,c	;volatile
  1335                           
  1336                           ;MELONPAN1_lib_ver1.20.h: 473: SP1BRGL=0x0A;
  1337  00048E  0E0A               	movlw	10
  1338  000490  D00A               	goto	L5
  1339  000492                     l464:
  1340  000492                     l3376:
  1341  000492  0EB0               	movlw	176
  1342  000494  1847               	xorwf	Serial1_begin@speed,w,c
  1343  000496  E108               	bnz	l457
  1344  000498  0E04               	movlw	4
  1345  00049A  1848               	xorwf	Serial1_begin@speed+1,w,c
  1346  00049C  A4D8               	btfss	status,2,c
  1347  00049E  D004               	goto	l466
  1348                           
  1349                           ;MELONPAN1_lib_ver1.20.h: 475: SP1BRGH=0x34;
  1350  0004A0  0E34               	movlw	52
  1351  0004A2  6E9B               	movwf	3995,c	;volatile
  1352                           
  1353                           ;MELONPAN1_lib_ver1.20.h: 476: SP1BRGL=0x14;
  1354  0004A4  0E14               	movlw	20
  1355  0004A6                     L5:
  1356  0004A6  6E9A               	movwf	3994,c	;volatile
  1357  0004A8                     l466:
  1358  0004A8                     l457:
  1359                           
  1360                           ;MELONPAN1_lib_ver1.20.h: 477: };MELONPAN1_lib_ver1.20.h: 479: TX1STA=0x24;
  1361  0004A8  0E24               	movlw	36
  1362  0004AA  6E9D               	movwf	3997,c	;volatile
  1363                           
  1364                           ;MELONPAN1_lib_ver1.20.h: 480: RC1STA=0x90;
  1365  0004AC  0E90               	movlw	144
  1366  0004AE  6E9C               	movwf	3996,c	;volatile
  1367                           
  1368                           ;MELONPAN1_lib_ver1.20.h: 481: BAUD1CON=0x08 | data;
  1369  0004B0  5049               	movf	Serial1_begin@data,w,c
  1370  0004B2  0908               	iorlw	8
  1371  0004B4  6E9E               	movwf	3998,c	;volatile
  1372  0004B6  0012               	return		;funcret
  1373  0004B8                     __end_of_Serial1_begin:
  1374                           	opt stack 0
  1375                           tblptru	equ	0xFF8
  1376                           tblptrh	equ	0xFF7
  1377                           tblptrl	equ	0xFF6
  1378                           tablat	equ	0xFF5
  1379                           intcon	equ	0xFF2
  1380                           postinc0	equ	0xFEE
  1381                           wreg	equ	0xFE8
  1382                           postdec1	equ	0xFE5
  1383                           fsr1l	equ	0xFE1
  1384                           status	equ	0xFD8
  1385                           
  1386 ;; *************** function _read_ds_dual_de_gozaru *****************
  1387 ;; Defined at:
  1388 ;;		line 130 in file "ds_dual_wood.h"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;Total ram usage:        1 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    5
  1409 ;; This function calls:
  1410 ;;		_BAD_de_gozaru
  1411 ;;		_GOOD_de_gozaru
  1412 ;;		_always_de_gozaru
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text8
  1419  000068                     __ptext8:
  1420                           	opt stack 0
  1421  000068                     _read_ds_dual_de_gozaru:
  1422                           	opt stack 25
  1423                           
  1424                           ;ds_dual_wood.h: 131: static char read_number;;ds_dual_wood.h: 132: static char mode=0;;
      +                          ds_dual_wood.h: 133: static char check_sum;;ds_dual_wood.h: 134: static char first_commu
      +                          nication=1;;ds_dual_wood.h: 135: if(DS_read_stop){
  1425                           
  1426                           ;incstack = 0
  1427  000068  503F               	movf	_DS_read_stop,w,c
  1428  00006A  B4D8               	btfsc	status,2,c
  1429  00006C  D074               	goto	l1003
  1430                           
  1431                           ;ds_dual_wood.h: 136: DS_time_out=0;
  1432  00006E  0E00               	movlw	0
  1433  000070  6E51               	movwf	_DS_time_out,c
  1434                           
  1435                           ;ds_dual_wood.h: 137: switch(mode){
  1436  000072  D067               	goto	l1001
  1437  000074                     l1002:
  1438                           
  1439                           ;ds_dual_wood.h: 139: DS_data[0]=sinyounai_DS_data[0];
  1440  000074  C00E  F001         	movff	_sinyounai_DS_data,_DS_data
  1441                           
  1442                           ;ds_dual_wood.h: 140: read_number=1;
  1443  000078  0E01               	movlw	1
  1444  00007A  6E3E               	movwf	read_ds_dual_de_gozaru@read_number,c
  1445                           
  1446                           ;ds_dual_wood.h: 141: check_sum=0x0d;
  1447  00007C  0E0D               	movlw	13
  1448  00007E  6E3C               	movwf	read_ds_dual_de_gozaru@check_sum,c
  1449                           
  1450                           ;ds_dual_wood.h: 142: mode=1;
  1451  000080  0E01               	movlw	1
  1452  000082  D021               	goto	L6
  1453  000084                     
  1454                           ;ds_dual_wood.h: 145: DS_data[read_number]=sinyounai_DS_data[read_number];
  1455  000084  503E               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1456  000086  0D01               	mullw	1
  1457  000088  0E0E               	movlw	low _sinyounai_DS_data
  1458  00008A  24F3               	addwf	prodl,w,c
  1459  00008C  6ED9               	movwf	fsr2l,c
  1460  00008E  0E00               	movlw	high _sinyounai_DS_data
  1461  000090  20F4               	addwfc	prodh,w,c
  1462  000092  6EDA               	movwf	fsr2h,c
  1463  000094  503E               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1464  000096  0D01               	mullw	1
  1465  000098  0E01               	movlw	low _DS_data
  1466  00009A  24F3               	addwf	prodl,w,c
  1467  00009C  6EE1               	movwf	fsr1l,c
  1468  00009E  0E00               	movlw	high _DS_data
  1469  0000A0  20F4               	addwfc	prodh,w,c
  1470  0000A2  6EE2               	movwf	fsr1h,c
  1471  0000A4  CFDF FFE7          	movff	indf2,indf1
  1472                           
  1473                           ;ds_dual_wood.h: 146: check_sum+=DS_data[read_number];
  1474  0000A8  503E               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1475  0000AA  0D01               	mullw	1
  1476  0000AC  0E01               	movlw	low _DS_data
  1477  0000AE  24F3               	addwf	prodl,w,c
  1478  0000B0  6ED9               	movwf	fsr2l,c
  1479  0000B2  0E00               	movlw	high _DS_data
  1480  0000B4  20F4               	addwfc	prodh,w,c
  1481  0000B6  6EDA               	movwf	fsr2h,c
  1482  0000B8  50DF               	movf	indf2,w,c
  1483  0000BA  263C               	addwf	read_ds_dual_de_gozaru@check_sum,f,c
  1484                           
  1485                           ;ds_dual_wood.h: 147: read_number++;
  1486  0000BC  2A3E               	incf	read_ds_dual_de_gozaru@read_number,f,c
  1487                           
  1488                           ;ds_dual_wood.h: 148: if(read_number>13-2){
  1489  0000BE  0E0B               	movlw	11
  1490  0000C0  643E               	cpfsgt	read_ds_dual_de_gozaru@read_number,c
  1491  0000C2  D049               	goto	l1003
  1492                           
  1493                           ;ds_dual_wood.h: 149: mode=2;
  1494  0000C4  0E02               	movlw	2
  1495  0000C6                     L6:
  1496  0000C6  6E3D               	movwf	read_ds_dual_de_gozaru@mode,c
  1497                           
  1498                           ;ds_dual_wood.h: 150: };ds_dual_wood.h: 151: break;
  1499  0000C8  D046               	goto	l1003
  1500  0000CA                     
  1501                           ;ds_dual_wood.h: 153: DS_data[read_number]=sinyounai_DS_data[read_number];
  1502  0000CA  503E               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1503  0000CC  0D01               	mullw	1
  1504  0000CE  0E0E               	movlw	low _sinyounai_DS_data
  1505  0000D0  24F3               	addwf	prodl,w,c
  1506  0000D2  6ED9               	movwf	fsr2l,c
  1507  0000D4  0E00               	movlw	high _sinyounai_DS_data
  1508  0000D6  20F4               	addwfc	prodh,w,c
  1509  0000D8  6EDA               	movwf	fsr2h,c
  1510  0000DA  503E               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1511  0000DC  0D01               	mullw	1
  1512  0000DE  0E01               	movlw	low _DS_data
  1513  0000E0  24F3               	addwf	prodl,w,c
  1514  0000E2  6EE1               	movwf	fsr1l,c
  1515  0000E4  0E00               	movlw	high _DS_data
  1516  0000E6  20F4               	addwfc	prodh,w,c
  1517  0000E8  6EE2               	movwf	fsr1h,c
  1518  0000EA  CFDF FFE7          	movff	indf2,indf1
  1519                           
  1520                           ;ds_dual_wood.h: 154: DS_uart_number=0;
  1521  0000EE  0E00               	movlw	0
  1522  0000F0  6E40               	movwf	_DS_uart_number,c
  1523                           
  1524                           ;ds_dual_wood.h: 155: DS_read_stop=0;
  1525  0000F2  0E00               	movlw	0
  1526  0000F4  6E3F               	movwf	_DS_read_stop,c
  1527                           
  1528                           ;ds_dual_wood.h: 156: mode=0;
  1529  0000F6  0E00               	movlw	0
  1530  0000F8  6E3D               	movwf	read_ds_dual_de_gozaru@mode,c
  1531                           
  1532                           ;ds_dual_wood.h: 157: if(DS_data[read_number]==check_sum){
  1533  0000FA  503E               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1534  0000FC  0D01               	mullw	1
  1535  0000FE  0E01               	movlw	low _DS_data
  1536  000100  24F3               	addwf	prodl,w,c
  1537  000102  6ED9               	movwf	fsr2l,c
  1538  000104  0E00               	movlw	high _DS_data
  1539  000106  20F4               	addwfc	prodh,w,c
  1540  000108  6EDA               	movwf	fsr2h,c
  1541  00010A  503C               	movf	read_ds_dual_de_gozaru@check_sum,w,c
  1542  00010C  18DE               	xorwf	postinc2,w,c
  1543  00010E  A4D8               	btfss	status,2,c
  1544  000110  D015               	goto	l1007
  1545                           
  1546                           ;ds_dual_wood.h: 158: push_DS_data[0]=~before_DS_data[0] & DS_data[6];
  1547  000112  504E               	movf	_before_DS_data,w,c
  1548  000114  0AFF               	xorlw	255
  1549  000116  1407               	andwf	_DS_data+6,w,c
  1550  000118  6E39               	movwf	_push_DS_data,c
  1551                           
  1552                           ;ds_dual_wood.h: 159: push_DS_data[1]=~before_DS_data[1] & DS_data[7];
  1553  00011A  504F               	movf	_before_DS_data+1,w,c
  1554  00011C  0AFF               	xorlw	255
  1555  00011E  1408               	andwf	_DS_data+7,w,c
  1556  000120  6E3A               	movwf	_push_DS_data+1,c
  1557                           
  1558                           ;ds_dual_wood.h: 160: before_DS_data[0]=DS_data[6];
  1559  000122  C007  F04E         	movff	_DS_data+6,_before_DS_data
  1560                           
  1561                           ;ds_dual_wood.h: 161: before_DS_data[1]=DS_data[7];
  1562  000126  C008  F04F         	movff	_DS_data+7,_before_DS_data+1
  1563                           
  1564                           ;ds_dual_wood.h: 162: DS_communication_error_time=0;
  1565  00012A  0E00               	movlw	0
  1566  00012C  6E38               	movwf	_DS_communication_error_time+1,c
  1567  00012E  0E00               	movlw	0
  1568  000130  6E37               	movwf	_DS_communication_error_time,c
  1569                           
  1570                           ;ds_dual_wood.h: 163: first_communication=0;
  1571  000132  0E00               	movlw	0
  1572  000134  6E50               	movwf	read_ds_dual_de_gozaru@first_communication,c
  1573                           
  1574                           ;ds_dual_wood.h: 164: GOOD_de_gozaru();
  1575  000136  EC5C  F002         	call	_GOOD_de_gozaru	;wreg free
  1576                           
  1577                           ;ds_dual_wood.h: 165: }else{
  1578  00013A  D00D               	goto	l1003
  1579  00013C                     l1007:
  1580                           
  1581                           ;ds_dual_wood.h: 166: BAD_de_gozaru();
  1582  00013C  EC3B  F003         	call	_BAD_de_gozaru	;wreg free
  1583                           
  1584                           ;ds_dual_wood.h: 169: }
  1585                           
  1586                           ;ds_dual_wood.h: 167: };ds_dual_wood.h: 168: break;
  1587  000140  D00A               	goto	l1003
  1588  000142                     l1001:
  1589  000142  503D               	movf	read_ds_dual_de_gozaru@mode,w,c
  1590                           
  1591                           ; Switch size 1, requested type "space"
  1592                           ; Number of cases is 3, Range of values is 0 to 2
  1593                           ; switch strategies available:
  1594                           ; Name         Instructions Cycles
  1595                           ; simple_byte           10     6 (average)
  1596                           ;	Chosen strategy is simple_byte
  1597  000144  0A00               	xorlw	0	; case 0
  1598  000146  B4D8               	btfsc	status,2,c
  1599  000148  D795               	goto	l1002
  1600  00014A  0A01               	xorlw	1	; case 1
  1601  00014C  B4D8               	btfsc	status,2,c
  1602  00014E  D79A               	goto	l1004
  1603  000150  0A03               	xorlw	3	; case 2
  1604  000152  B4D8               	btfsc	status,2,c
  1605  000154  D7BA               	goto	l1006
  1606  000156                     l1003:
  1607                           
  1608                           ;ds_dual_wood.h: 170: };ds_dual_wood.h: 171: if(DS_time_out>10){
  1609  000156  0E0A               	movlw	10
  1610  000158  6451               	cpfsgt	_DS_time_out,c
  1611  00015A  D002               	goto	l1009
  1612                           
  1613                           ;ds_dual_wood.h: 172: BAD_de_gozaru();
  1614  00015C  EC3B  F003         	call	_BAD_de_gozaru	;wreg free
  1615  000160                     l1009:
  1616                           
  1617                           ;ds_dual_wood.h: 173: };ds_dual_wood.h: 182: always_de_gozaru();
  1618  000160  EC40  F003         	call	_always_de_gozaru	;wreg free
  1619  000164  0012               	return		;funcret
  1620  000166                     __end_of_read_ds_dual_de_gozaru:
  1621                           	opt stack 0
  1622                           tblptru	equ	0xFF8
  1623                           tblptrh	equ	0xFF7
  1624                           tblptrl	equ	0xFF6
  1625                           tablat	equ	0xFF5
  1626                           prodh	equ	0xFF4
  1627                           prodl	equ	0xFF3
  1628                           intcon	equ	0xFF2
  1629                           postinc0	equ	0xFEE
  1630                           wreg	equ	0xFE8
  1631                           indf1	equ	0xFE7
  1632                           postdec1	equ	0xFE5
  1633                           fsr1h	equ	0xFE2
  1634                           fsr1l	equ	0xFE1
  1635                           indf2	equ	0xFDF
  1636                           postinc2	equ	0xFDE
  1637                           fsr2h	equ	0xFDA
  1638                           fsr2l	equ	0xFD9
  1639                           status	equ	0xFD8
  1640                           
  1641 ;; *************** function _always_de_gozaru *****************
  1642 ;; Defined at:
  1643 ;;		line 95 in file "MELON PAN1_main.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		None
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;Total ram usage:        0 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    3
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_read_ds_dual_de_gozaru
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text9
  1672  000680                     __ptext9:
  1673                           	opt stack 0
  1674  000680                     _always_de_gozaru:
  1675                           	opt stack 26
  1676                           
  1677                           ;incstack = 0
  1678  000680  0012               	return		;funcret
  1679  000682                     __end_of_always_de_gozaru:
  1680                           	opt stack 0
  1681                           tblptru	equ	0xFF8
  1682                           tblptrh	equ	0xFF7
  1683                           tblptrl	equ	0xFF6
  1684                           tablat	equ	0xFF5
  1685                           prodh	equ	0xFF4
  1686                           prodl	equ	0xFF3
  1687                           intcon	equ	0xFF2
  1688                           postinc0	equ	0xFEE
  1689                           wreg	equ	0xFE8
  1690                           indf1	equ	0xFE7
  1691                           postdec1	equ	0xFE5
  1692                           fsr1h	equ	0xFE2
  1693                           fsr1l	equ	0xFE1
  1694                           indf2	equ	0xFDF
  1695                           postinc2	equ	0xFDE
  1696                           fsr2h	equ	0xFDA
  1697                           fsr2l	equ	0xFD9
  1698                           status	equ	0xFD8
  1699                           
  1700 ;; *************** function _GOOD_de_gozaru *****************
  1701 ;; Defined at:
  1702 ;;		line 69 in file "MELON PAN1_main.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1720 ;;Total ram usage:        1 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    4
  1723 ;; This function calls:
  1724 ;;		_bit_test
  1725 ;;		_output_LED5
  1726 ;; This function is called by:
  1727 ;;		_read_ds_dual_de_gozaru
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text10
  1732  0004B8                     __ptext10:
  1733                           	opt stack 0
  1734  0004B8                     _GOOD_de_gozaru:
  1735                           	opt stack 25
  1736                           
  1737                           ;MELON PAN1_main.c: 72: LATDbits.LATD0=0;
  1738                           
  1739                           ;incstack = 0
  1740  0004B8  907C               	bcf	3964,0,c	;volatile
  1741                           
  1742                           ;MELON PAN1_main.c: 73: LATHbits.LATH2=1;
  1743  0004BA  8480               	bsf	3968,2,c	;volatile
  1744                           
  1745                           ;MELON PAN1_main.c: 75: if(DS_data[1]==0x00){
  1746  0004BC  5002               	movf	_DS_data+1,w,c
  1747  0004BE  A4D8               	btfss	status,2,c
  1748  0004C0  D003               	goto	l1167
  1749                           
  1750                           ;MELON PAN1_main.c: 76: output_LED5(DS_data[3]);
  1751  0004C2  5004               	movf	_DS_data+3,w,c
  1752  0004C4  ECA3  F001         	call	_output_LED5
  1753  0004C8                     l1167:
  1754                           
  1755                           ;MELON PAN1_main.c: 77: };MELON PAN1_main.c: 79: if(bit_test(push_DS_data[1],5)){
  1756  0004C8  0E05               	movlw	5
  1757  0004CA  6E47               	movwf	bit_test@bit_place,c
  1758  0004CC  503A               	movf	_push_DS_data+1,w,c
  1759  0004CE  ECF9  F002         	call	_bit_test
  1760  0004D2  0900               	iorlw	0
  1761  0004D4  B4D8               	btfsc	status,2,c
  1762  0004D6  D00F               	goto	l1168
  1763                           
  1764                           ;MELON PAN1_main.c: 80: LATHbits.LATH3=~LATHbits.LATH3;
  1765  0004D8  A680               	btfss	3968,3,c	;volatile
  1766  0004DA  D002               	goto	u1500
  1767  0004DC  0E01               	movlw	1
  1768  0004DE  D001               	goto	u1506
  1769  0004E0                     u1500:
  1770  0004E0  0E00               	movlw	0
  1771  0004E2                     u1506:
  1772  0004E2  0AFF               	xorlw	255
  1773  0004E4  6E4C               	movwf	??_GOOD_de_gozaru& (0+255),c
  1774  0004E6  464C               	rlncf	??_GOOD_de_gozaru,f,c
  1775  0004E8  464C               	rlncf	??_GOOD_de_gozaru,f,c
  1776  0004EA  464C               	rlncf	??_GOOD_de_gozaru,f,c
  1777  0004EC  5080               	movf	3968,w,c	;volatile
  1778  0004EE  184C               	xorwf	??_GOOD_de_gozaru,w,c
  1779  0004F0  0BF7               	andlw	-9
  1780  0004F2  184C               	xorwf	??_GOOD_de_gozaru,w,c
  1781  0004F4  6E80               	movwf	3968,c	;volatile
  1782  0004F6                     l1168:
  1783                           
  1784                           ;MELON PAN1_main.c: 82: };MELON PAN1_main.c: 83: if(bit_test(push_DS_data[1],6)){
  1785  0004F6  0E06               	movlw	6
  1786  0004F8  6E47               	movwf	bit_test@bit_place,c
  1787  0004FA  503A               	movf	_push_DS_data+1,w,c
  1788  0004FC  ECF9  F002         	call	_bit_test
  1789  000500  0900               	iorlw	0
  1790  000502  B4D8               	btfsc	status,2,c
  1791  000504  0012               	return	
  1792                           
  1793                           ;MELON PAN1_main.c: 84: LATDbits.LATD2=~LATDbits.LATD2;
  1794  000506  A47C               	btfss	3964,2,c	;volatile
  1795  000508  D002               	goto	u1520
  1796  00050A  0E01               	movlw	1
  1797  00050C  D001               	goto	u1526
  1798  00050E                     u1520:
  1799  00050E  0E00               	movlw	0
  1800  000510                     u1526:
  1801  000510  0AFF               	xorlw	255
  1802  000512  6E4C               	movwf	??_GOOD_de_gozaru& (0+255),c
  1803  000514  464C               	rlncf	??_GOOD_de_gozaru,f,c
  1804  000516  464C               	rlncf	??_GOOD_de_gozaru,f,c
  1805  000518  507C               	movf	3964,w,c	;volatile
  1806  00051A  184C               	xorwf	??_GOOD_de_gozaru,w,c
  1807  00051C  0BFB               	andlw	-5
  1808  00051E  184C               	xorwf	??_GOOD_de_gozaru,w,c
  1809  000520  6E7C               	movwf	3964,c	;volatile
  1810  000522  0012               	return	
  1811  000524                     __end_of_GOOD_de_gozaru:
  1812                           	opt stack 0
  1813                           tblptru	equ	0xFF8
  1814                           tblptrh	equ	0xFF7
  1815                           tblptrl	equ	0xFF6
  1816                           tablat	equ	0xFF5
  1817                           prodh	equ	0xFF4
  1818                           prodl	equ	0xFF3
  1819                           intcon	equ	0xFF2
  1820                           postinc0	equ	0xFEE
  1821                           wreg	equ	0xFE8
  1822                           indf1	equ	0xFE7
  1823                           postdec1	equ	0xFE5
  1824                           fsr1h	equ	0xFE2
  1825                           fsr1l	equ	0xFE1
  1826                           indf2	equ	0xFDF
  1827                           postinc2	equ	0xFDE
  1828                           fsr2h	equ	0xFDA
  1829                           fsr2l	equ	0xFD9
  1830                           status	equ	0xFD8
  1831                           
  1832 ;; *************** function _output_LED5 *****************
  1833 ;; Defined at:
  1834 ;;		line 151 in file "pindef.h"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  num             1    wreg     unsigned char 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  num             1    6[COMRAM] unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;Total ram usage:        1 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    3
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_GOOD_de_gozaru
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text11
  1863  000346                     __ptext11:
  1864                           	opt stack 0
  1865  000346                     _output_LED5:
  1866                           	opt stack 25
  1867                           
  1868                           ;incstack = 0
  1869                           ;output_LED5@num stored from wreg
  1870  000346  6E47               	movwf	output_LED5@num,c
  1871                           
  1872                           ;pindef.h: 152: switch(num){
  1873  000348  D02A               	goto	l885
  1874  00034A                     l886:
  1875                           
  1876                           ;pindef.h: 154: LATEbits.LATE3=0;
  1877  00034A  967D               	bcf	3965,3,c	;volatile
  1878                           
  1879                           ;pindef.h: 155: LATEbits.LATE4=0;
  1880  00034C  987D               	bcf	3965,4,c	;volatile
  1881                           
  1882                           ;pindef.h: 156: LATEbits.LATE5=0;
  1883  00034E  9A7D               	bcf	3965,5,c	;volatile
  1884                           
  1885                           ;pindef.h: 157: LATEbits.LATE6=0;
  1886  000350  9C7D               	bcf	3965,6,c	;volatile
  1887                           
  1888                           ;pindef.h: 158: LATEbits.LATE7=0;
  1889  000352  9E7D               	bcf	3965,7,c	;volatile
  1890                           
  1891                           ;pindef.h: 159: break;
  1892  000354  0012               	return	
  1893  000356                     l888:
  1894                           
  1895                           ;pindef.h: 161: LATEbits.LATE3=0;
  1896  000356  967D               	bcf	3965,3,c	;volatile
  1897                           
  1898                           ;pindef.h: 162: LATEbits.LATE4=0;
  1899  000358  987D               	bcf	3965,4,c	;volatile
  1900                           
  1901                           ;pindef.h: 163: LATEbits.LATE5=0;
  1902  00035A  9A7D               	bcf	3965,5,c	;volatile
  1903                           
  1904                           ;pindef.h: 164: LATEbits.LATE6=0;
  1905  00035C  9C7D               	bcf	3965,6,c	;volatile
  1906                           
  1907                           ;pindef.h: 165: LATEbits.LATE7=1;
  1908  00035E  8E7D               	bsf	3965,7,c	;volatile
  1909                           
  1910                           ;pindef.h: 166: break;
  1911  000360  0012               	return	
  1912  000362                     l889:
  1913                           
  1914                           ;pindef.h: 168: LATEbits.LATE3=0;
  1915  000362  967D               	bcf	3965,3,c	;volatile
  1916                           
  1917                           ;pindef.h: 169: LATEbits.LATE4=0;
  1918  000364  987D               	bcf	3965,4,c	;volatile
  1919                           
  1920                           ;pindef.h: 170: LATEbits.LATE5=0;
  1921  000366  9A7D               	bcf	3965,5,c	;volatile
  1922                           
  1923                           ;pindef.h: 171: LATEbits.LATE6=1;
  1924  000368  8C7D               	bsf	3965,6,c	;volatile
  1925                           
  1926                           ;pindef.h: 172: LATEbits.LATE7=1;
  1927  00036A  8E7D               	bsf	3965,7,c	;volatile
  1928                           
  1929                           ;pindef.h: 173: break;
  1930  00036C  0012               	return	
  1931  00036E                     l890:
  1932                           
  1933                           ;pindef.h: 175: LATEbits.LATE3=0;
  1934  00036E  967D               	bcf	3965,3,c	;volatile
  1935                           
  1936                           ;pindef.h: 176: LATEbits.LATE4=0;
  1937  000370  987D               	bcf	3965,4,c	;volatile
  1938                           
  1939                           ;pindef.h: 177: LATEbits.LATE5=1;
  1940  000372  8A7D               	bsf	3965,5,c	;volatile
  1941                           
  1942                           ;pindef.h: 178: LATEbits.LATE6=1;
  1943  000374  8C7D               	bsf	3965,6,c	;volatile
  1944                           
  1945                           ;pindef.h: 179: LATEbits.LATE7=1;
  1946  000376  8E7D               	bsf	3965,7,c	;volatile
  1947                           
  1948                           ;pindef.h: 180: break;
  1949  000378  0012               	return	
  1950  00037A                     l891:
  1951                           
  1952                           ;pindef.h: 182: LATEbits.LATE3=0;
  1953  00037A  967D               	bcf	3965,3,c	;volatile
  1954                           
  1955                           ;pindef.h: 183: LATEbits.LATE4=1;
  1956  00037C  887D               	bsf	3965,4,c	;volatile
  1957                           
  1958                           ;pindef.h: 184: LATEbits.LATE5=1;
  1959  00037E  8A7D               	bsf	3965,5,c	;volatile
  1960                           
  1961                           ;pindef.h: 185: LATEbits.LATE6=1;
  1962  000380  8C7D               	bsf	3965,6,c	;volatile
  1963                           
  1964                           ;pindef.h: 186: LATEbits.LATE7=1;
  1965  000382  8E7D               	bsf	3965,7,c	;volatile
  1966                           
  1967                           ;pindef.h: 187: break;
  1968  000384  0012               	return	
  1969  000386                     l892:
  1970                           
  1971                           ;pindef.h: 189: LATEbits.LATE3=1;
  1972  000386  867D               	bsf	3965,3,c	;volatile
  1973                           
  1974                           ;pindef.h: 190: LATEbits.LATE4=1;
  1975  000388  887D               	bsf	3965,4,c	;volatile
  1976                           
  1977                           ;pindef.h: 191: LATEbits.LATE5=1;
  1978  00038A  8A7D               	bsf	3965,5,c	;volatile
  1979                           
  1980                           ;pindef.h: 192: LATEbits.LATE6=1;
  1981  00038C  8C7D               	bsf	3965,6,c	;volatile
  1982                           
  1983                           ;pindef.h: 193: LATEbits.LATE7=1;
  1984  00038E  8E7D               	bsf	3965,7,c	;volatile
  1985                           
  1986                           ;pindef.h: 194: break;
  1987  000390  0012               	return	
  1988  000392                     l893:
  1989                           
  1990                           ;pindef.h: 196: LATEbits.LATE3=0;
  1991  000392  967D               	bcf	3965,3,c	;volatile
  1992                           
  1993                           ;pindef.h: 197: LATEbits.LATE4=0;
  1994  000394  987D               	bcf	3965,4,c	;volatile
  1995                           
  1996                           ;pindef.h: 198: LATEbits.LATE5=0;
  1997  000396  9A7D               	bcf	3965,5,c	;volatile
  1998                           
  1999                           ;pindef.h: 199: LATEbits.LATE6=0;
  2000  000398  9C7D               	bcf	3965,6,c	;volatile
  2001                           
  2002                           ;pindef.h: 200: LATEbits.LATE7=0;
  2003  00039A  9E7D               	bcf	3965,7,c	;volatile
  2004                           
  2005                           ;pindef.h: 202: }
  2006                           
  2007                           ;pindef.h: 201: break;
  2008  00039C  0012               	return	
  2009  00039E                     l885:
  2010  00039E  5047               	movf	output_LED5@num,w,c
  2011                           
  2012                           ; Switch size 1, requested type "space"
  2013                           ; Number of cases is 6, Range of values is 0 to 5
  2014                           ; switch strategies available:
  2015                           ; Name         Instructions Cycles
  2016                           ; simple_byte           19    10 (average)
  2017                           ;	Chosen strategy is simple_byte
  2018  0003A0  0A00               	xorlw	0	; case 0
  2019  0003A2  B4D8               	btfsc	status,2,c
  2020  0003A4  D7D2               	goto	l886
  2021  0003A6  0A01               	xorlw	1	; case 1
  2022  0003A8  B4D8               	btfsc	status,2,c
  2023  0003AA  D7D5               	goto	l888
  2024  0003AC  0A03               	xorlw	3	; case 2
  2025  0003AE  B4D8               	btfsc	status,2,c
  2026  0003B0  D7D8               	goto	l889
  2027  0003B2  0A01               	xorlw	1	; case 3
  2028  0003B4  B4D8               	btfsc	status,2,c
  2029  0003B6  D7DB               	goto	l890
  2030  0003B8  0A07               	xorlw	7	; case 4
  2031  0003BA  B4D8               	btfsc	status,2,c
  2032  0003BC  D7DE               	goto	l891
  2033  0003BE  0A01               	xorlw	1	; case 5
  2034  0003C0  B4D8               	btfsc	status,2,c
  2035  0003C2  D7E1               	goto	l892
  2036  0003C4  D7E6               	goto	l893
  2037  0003C6                     __end_of_output_LED5:
  2038                           	opt stack 0
  2039                           tblptru	equ	0xFF8
  2040                           tblptrh	equ	0xFF7
  2041                           tblptrl	equ	0xFF6
  2042                           tablat	equ	0xFF5
  2043                           prodh	equ	0xFF4
  2044                           prodl	equ	0xFF3
  2045                           intcon	equ	0xFF2
  2046                           postinc0	equ	0xFEE
  2047                           wreg	equ	0xFE8
  2048                           indf1	equ	0xFE7
  2049                           postdec1	equ	0xFE5
  2050                           fsr1h	equ	0xFE2
  2051                           fsr1l	equ	0xFE1
  2052                           indf2	equ	0xFDF
  2053                           postinc2	equ	0xFDE
  2054                           fsr2h	equ	0xFDA
  2055                           fsr2l	equ	0xFD9
  2056                           status	equ	0xFD8
  2057                           
  2058 ;; *************** function _bit_test *****************
  2059 ;; Defined at:
  2060 ;;		line 1191 in file "MELONPAN1_lib_ver1.20.h"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  number          1    wreg     unsigned char 
  2063 ;;  bit_place       1    6[COMRAM] unsigned char 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  number          1    9[COMRAM] unsigned char 
  2066 ;;  i               1   10[COMRAM] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      unsigned char 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2076 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;Total ram usage:        5 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    3
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_GOOD_de_gozaru
  2087 ;;		_bit_clear
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text12
  2092  0005F2                     __ptext12:
  2093                           	opt stack 0
  2094  0005F2                     _bit_test:
  2095                           	opt stack 25
  2096                           
  2097                           ;incstack = 0
  2098                           ;bit_test@number stored from wreg
  2099  0005F2  6E4A               	movwf	bit_test@number,c
  2100                           
  2101                           ;MELONPAN1_lib_ver1.20.h: 1192: char i;;MELONPAN1_lib_ver1.20.h: 1193: i=number & (0b000
      +                          00001<<bit_place);
  2102  0005F4  C047  F048         	movff	bit_test@bit_place,??_bit_test
  2103  0005F8  0E01               	movlw	1
  2104  0005FA  6E49               	movwf	(??_bit_test+1)& (0+255),c
  2105  0005FC  2A48               	incf	??_bit_test,f,c
  2106  0005FE  D002               	goto	u1414
  2107  000600                     u1415:
  2108  000600  90D8               	bcf	status,0,c
  2109  000602  3649               	rlcf	??_bit_test+1,f,c
  2110  000604                     u1414:
  2111  000604  2E48               	decfsz	??_bit_test,f,c
  2112  000606  D7FC               	goto	u1415
  2113  000608  5049               	movf	??_bit_test+1,w,c
  2114  00060A  144A               	andwf	bit_test@number,w,c
  2115  00060C  6E4B               	movwf	bit_test@i,c
  2116                           
  2117                           ;MELONPAN1_lib_ver1.20.h: 1194: if(i>0){
  2118  00060E  504B               	movf	bit_test@i,w,c
  2119  000610  B4D8               	btfsc	status,2,c
  2120  000612  D002               	goto	l874
  2121                           
  2122                           ;MELONPAN1_lib_ver1.20.h: 1195: return 1;
  2123  000614  0E01               	movlw	1
  2124  000616  0012               	return	
  2125  000618                     l874:
  2126                           
  2127                           ;MELONPAN1_lib_ver1.20.h: 1196: };MELONPAN1_lib_ver1.20.h: 1197: return 0;
  2128  000618  0E00               	movlw	0
  2129  00061A  0012               	return	
  2130  00061C                     __end_of_bit_test:
  2131                           	opt stack 0
  2132                           tblptru	equ	0xFF8
  2133                           tblptrh	equ	0xFF7
  2134                           tblptrl	equ	0xFF6
  2135                           tablat	equ	0xFF5
  2136                           prodh	equ	0xFF4
  2137                           prodl	equ	0xFF3
  2138                           intcon	equ	0xFF2
  2139                           postinc0	equ	0xFEE
  2140                           wreg	equ	0xFE8
  2141                           indf1	equ	0xFE7
  2142                           postdec1	equ	0xFE5
  2143                           fsr1h	equ	0xFE2
  2144                           fsr1l	equ	0xFE1
  2145                           indf2	equ	0xFDF
  2146                           postinc2	equ	0xFDE
  2147                           fsr2h	equ	0xFDA
  2148                           fsr2l	equ	0xFD9
  2149                           status	equ	0xFD8
  2150                           
  2151 ;; *************** function _BAD_de_gozaru *****************
  2152 ;; Defined at:
  2153 ;;		line 90 in file "MELON PAN1_main.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;		None
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		None
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;Total ram usage:        0 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    3
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_read_ds_dual_de_gozaru
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text13
  2182  000676                     __ptext13:
  2183                           	opt stack 0
  2184  000676                     _BAD_de_gozaru:
  2185                           	opt stack 26
  2186                           
  2187                           ;MELON PAN1_main.c: 91: LATHbits.LATH2=0;
  2188                           
  2189                           ;incstack = 0
  2190  000676  9480               	bcf	3968,2,c	;volatile
  2191                           
  2192                           ;MELON PAN1_main.c: 92: LATDbits.LATD0=1;
  2193  000678  807C               	bsf	3964,0,c	;volatile
  2194  00067A  0012               	return		;funcret
  2195  00067C                     __end_of_BAD_de_gozaru:
  2196                           	opt stack 0
  2197                           tblptru	equ	0xFF8
  2198                           tblptrh	equ	0xFF7
  2199                           tblptrl	equ	0xFF6
  2200                           tablat	equ	0xFF5
  2201                           prodh	equ	0xFF4
  2202                           prodl	equ	0xFF3
  2203                           intcon	equ	0xFF2
  2204                           postinc0	equ	0xFEE
  2205                           wreg	equ	0xFE8
  2206                           indf1	equ	0xFE7
  2207                           postdec1	equ	0xFE5
  2208                           fsr1h	equ	0xFE2
  2209                           fsr1l	equ	0xFE1
  2210                           indf2	equ	0xFDF
  2211                           postinc2	equ	0xFDE
  2212                           fsr2h	equ	0xFDA
  2213                           fsr2l	equ	0xFD9
  2214                           status	equ	0xFD8
  2215                           
  2216 ;; *************** function _pin_init *****************
  2217 ;; Defined at:
  2218 ;;		line 75 in file "pindef.h"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2236 ;;Total ram usage:        0 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    3
  2239 ;; This function calls:
  2240 ;;		Nothing
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text14
  2247  000166                     __ptext14:
  2248                           	opt stack 0
  2249  000166                     _pin_init:
  2250                           	opt stack 27
  2251                           
  2252                           ;pindef.h: 77: LATA = 0x00;
  2253                           
  2254                           ;incstack = 0
  2255  000166  0E00               	movlw	0
  2256  000168  6E79               	movwf	3961,c	;volatile
  2257                           
  2258                           ;pindef.h: 78: LATB = 0x00;
  2259  00016A  0E00               	movlw	0
  2260  00016C  6E7A               	movwf	3962,c	;volatile
  2261                           
  2262                           ;pindef.h: 79: LATC = 0x00;
  2263  00016E  0E00               	movlw	0
  2264  000170  6E7B               	movwf	3963,c	;volatile
  2265                           
  2266                           ;pindef.h: 80: LATD = 0x50;
  2267  000172  0E50               	movlw	80
  2268  000174  6E7C               	movwf	3964,c	;volatile
  2269                           
  2270                           ;pindef.h: 81: LATE = 0x00;
  2271  000176  0E00               	movlw	0
  2272  000178  6E7D               	movwf	3965,c	;volatile
  2273                           
  2274                           ;pindef.h: 82: LATF = 0x00;
  2275  00017A  0E00               	movlw	0
  2276  00017C  6E7E               	movwf	3966,c	;volatile
  2277                           
  2278                           ;pindef.h: 83: LATG = 0x00;
  2279  00017E  0E00               	movlw	0
  2280  000180  6E7F               	movwf	3967,c	;volatile
  2281                           
  2282                           ;pindef.h: 84: LATH = 0x00;
  2283  000182  0E00               	movlw	0
  2284  000184  6E80               	movwf	3968,c	;volatile
  2285                           
  2286                           ;pindef.h: 87: TRISA = 0b11000000;
  2287  000186  0EC0               	movlw	192
  2288  000188  6E81               	movwf	3969,c	;volatile
  2289                           
  2290                           ;pindef.h: 88: TRISB = 0b11111111;
  2291  00018A  6882               	setf	3970,c	;volatile
  2292                           
  2293                           ;pindef.h: 89: TRISC = 0b10111110;
  2294  00018C  0EBE               	movlw	190
  2295  00018E  6E83               	movwf	3971,c	;volatile
  2296                           
  2297                           ;pindef.h: 90: TRISD = 0b10101000;
  2298  000190  0EA8               	movlw	168
  2299  000192  6E84               	movwf	3972,c	;volatile
  2300                           
  2301                           ;pindef.h: 91: TRISE = 0b00000000;
  2302  000194  0E00               	movlw	0
  2303  000196  6E85               	movwf	3973,c	;volatile
  2304                           
  2305                           ;pindef.h: 92: TRISF = 0b11111111;
  2306  000198  6886               	setf	3974,c	;volatile
  2307                           
  2308                           ;pindef.h: 93: TRISG = 0b10111100;
  2309  00019A  0EBC               	movlw	188
  2310  00019C  6E87               	movwf	3975,c	;volatile
  2311                           
  2312                           ;pindef.h: 94: TRISH = 0b11110000;
  2313  00019E  0EF0               	movlw	240
  2314  0001A0  6E88               	movwf	3976,c	;volatile
  2315                           
  2316                           ;pindef.h: 106: ANSELA = 0x00;
  2317  0001A2  0E00               	movlw	0
  2318  0001A4  010E               	movlb	14	; () banked
  2319  0001A6  6F92               	movwf	146,b	;volatile
  2320                           
  2321                           ;pindef.h: 107: ANSELB = 0x00;
  2322  0001A8  0E00               	movlw	0
  2323  0001AA  6F9A               	movwf	154,b	;volatile
  2324                           
  2325                           ;pindef.h: 108: ANSELD = 0x00;
  2326  0001AC  0E00               	movlw	0
  2327  0001AE  6FA7               	movwf	167,b	;volatile
  2328                           
  2329                           ;pindef.h: 109: ANSELE = 0x00;
  2330  0001B0  0E00               	movlw	0
  2331  0001B2  6FAF               	movwf	175,b	;volatile
  2332                           
  2333                           ;pindef.h: 110: ANSELF = 0x00;
  2334  0001B4  0E00               	movlw	0
  2335  0001B6  6FB4               	movwf	180,b	;volatile
  2336                           
  2337                           ;pindef.h: 111: ANSELG = 0x00;
  2338  0001B8  0E00               	movlw	0
  2339  0001BA  6FBC               	movwf	188,b	;volatile
  2340                           
  2341                           ;pindef.h: 114: WPUA = 0x00;
  2342  0001BC  0E00               	movlw	0
  2343  0001BE  6F91               	movwf	145,b	;volatile
  2344                           
  2345                           ;pindef.h: 115: WPUB = 0x00;
  2346  0001C0  0E00               	movlw	0
  2347  0001C2  6F99               	movwf	153,b	;volatile
  2348                           
  2349                           ;pindef.h: 116: WPUC = 0x00;
  2350  0001C4  0E00               	movlw	0
  2351  0001C6  6FA1               	movwf	161,b	;volatile
  2352                           
  2353                           ;pindef.h: 117: WPUD = 0x00;
  2354  0001C8  0E00               	movlw	0
  2355  0001CA  6FA6               	movwf	166,b	;volatile
  2356                           
  2357                           ;pindef.h: 118: WPUE = 0x00;
  2358  0001CC  0E00               	movlw	0
  2359  0001CE  6FAE               	movwf	174,b	;volatile
  2360                           
  2361                           ;pindef.h: 119: WPUF = 0x00;
  2362  0001D0  0E00               	movlw	0
  2363  0001D2  6FB3               	movwf	179,b	;volatile
  2364                           
  2365                           ;pindef.h: 120: WPUG = 0x00;
  2366  0001D4  0E00               	movlw	0
  2367  0001D6  6FBB               	movwf	187,b	;volatile
  2368                           
  2369                           ;pindef.h: 121: WPUH = 0x00;
  2370  0001D8  0E00               	movlw	0
  2371  0001DA  6FC0               	movwf	192,b	;volatile
  2372                           
  2373                           ;pindef.h: 124: ODCONA = 0x00;
  2374  0001DC  0E00               	movlw	0
  2375  0001DE  6F90               	movwf	144,b	;volatile
  2376                           
  2377                           ;pindef.h: 125: ODCONB = 0x00;
  2378  0001E0  0E00               	movlw	0
  2379  0001E2  6F98               	movwf	152,b	;volatile
  2380                           
  2381                           ;pindef.h: 126: ODCONC = 0x00;
  2382  0001E4  0E00               	movlw	0
  2383  0001E6  6FA0               	movwf	160,b	;volatile
  2384                           
  2385                           ;pindef.h: 127: ODCOND = 0x00;
  2386  0001E8  0E00               	movlw	0
  2387  0001EA  6FA5               	movwf	165,b	;volatile
  2388                           
  2389                           ;pindef.h: 128: ODCONE = 0x00;
  2390  0001EC  0E00               	movlw	0
  2391  0001EE  6FAD               	movwf	173,b	;volatile
  2392                           
  2393                           ;pindef.h: 129: ODCONF = 0x00;
  2394  0001F0  0E00               	movlw	0
  2395  0001F2  6FB2               	movwf	178,b	;volatile
  2396                           
  2397                           ;pindef.h: 130: ODCONG = 0x00;
  2398  0001F4  0E00               	movlw	0
  2399  0001F6  6FBA               	movwf	186,b	;volatile
  2400                           
  2401                           ;pindef.h: 131: ODCONH = 0x00;
  2402  0001F8  0E00               	movlw	0
  2403  0001FA  6FBF               	movwf	191,b	;volatile
  2404                           
  2405                           ;pindef.h: 134: RC0PPS = 0x1A;
  2406  0001FC  0E1A               	movlw	26
  2407  0001FE  6F62               	movwf	98,b	;volatile
  2408                           
  2409                           ; BSR set to: 14
  2410                           ;pindef.h: 135: SSP1DATPPSbits.SSP1DATPPS = 0x11;
  2411  000200  811A               	bsf	26,0,b	;volatile
  2412  000202  931A               	bcf	26,1,b	;volatile
  2413  000204  951A               	bcf	26,2,b	;volatile
  2414  000206  971A               	bcf	26,3,b	;volatile
  2415  000208  891A               	bsf	26,4,b	;volatile
  2416  00020A  9B1A               	bcf	26,5,b	;volatile
  2417                           
  2418                           ; BSR set to: 14
  2419                           ;pindef.h: 136: SSP1CLKPPSbits.SSP1CLKPPS = 0x16;
  2420  00020C  9119               	bcf	25,0,b	;volatile
  2421  00020E  8319               	bsf	25,1,b	;volatile
  2422  000210  8519               	bsf	25,2,b	;volatile
  2423  000212  9719               	bcf	25,3,b	;volatile
  2424  000214  8919               	bsf	25,4,b	;volatile
  2425  000216  9B19               	bcf	25,5,b	;volatile
  2426                           
  2427                           ;pindef.h: 137: RC6PPS = 0x19;
  2428  000218  0E19               	movlw	25
  2429  00021A  6F68               	movwf	104,b	;volatile
  2430                           
  2431                           ;pindef.h: 139: RB0PPS = 0x1C;
  2432  00021C  0E1C               	movlw	28
  2433  00021E  6F5A               	movwf	90,b	;volatile
  2434                           
  2435                           ;pindef.h: 140: RB1PPS = 0x1B;
  2436  000220  0E1B               	movlw	27
  2437  000222  6F5B               	movwf	91,b	;volatile
  2438                           
  2439                           ; BSR set to: 14
  2440                           ;pindef.h: 141: SSP2DATPPSbits.SSP2DATPPS = 0x08;
  2441  000224  911D               	bcf	29,0,b	;volatile
  2442  000226  931D               	bcf	29,1,b	;volatile
  2443  000228  951D               	bcf	29,2,b	;volatile
  2444  00022A  871D               	bsf	29,3,b	;volatile
  2445  00022C  991D               	bcf	29,4,b	;volatile
  2446  00022E  9B1D               	bcf	29,5,b	;volatile
  2447                           
  2448                           ; BSR set to: 14
  2449                           ;pindef.h: 142: SSP2CLKPPSbits.SSP2CLKPPS = 0x09;
  2450  000230  811C               	bsf	28,0,b	;volatile
  2451  000232  931C               	bcf	28,1,b	;volatile
  2452  000234  951C               	bcf	28,2,b	;volatile
  2453  000236  871C               	bsf	28,3,b	;volatile
  2454  000238  991C               	bcf	28,4,b	;volatile
  2455  00023A  9B1C               	bcf	28,5,b	;volatile
  2456                           
  2457                           ; BSR set to: 14
  2458                           ;pindef.h: 144: RX1PPSbits.RX1PPS = 0x1B;
  2459  00023C  810F               	bsf	15,0,b	;volatile
  2460  00023E  830F               	bsf	15,1,b	;volatile
  2461  000240  950F               	bcf	15,2,b	;volatile
  2462  000242  870F               	bsf	15,3,b	;volatile
  2463  000244  890F               	bsf	15,4,b	;volatile
  2464  000246  9B0F               	bcf	15,5,b	;volatile
  2465                           
  2466                           ;pindef.h: 145: RD4PPS = 0x0C;
  2467  000248  0E0C               	movlw	12
  2468  00024A  6F6E               	movwf	110,b	;volatile
  2469                           
  2470                           ; BSR set to: 14
  2471                           ;pindef.h: 147: RX2PPSbits.RX2PPS = 0x1D;
  2472  00024C  8111               	bsf	17,0,b	;volatile
  2473  00024E  9311               	bcf	17,1,b	;volatile
  2474  000250  8511               	bsf	17,2,b	;volatile
  2475  000252  8711               	bsf	17,3,b	;volatile
  2476  000254  8911               	bsf	17,4,b	;volatile
  2477  000256  9B11               	bcf	17,5,b	;volatile
  2478                           
  2479                           ;pindef.h: 148: RD6PPS = 0x0E;
  2480  000258  0E0E               	movlw	14
  2481  00025A  6F70               	movwf	112,b	;volatile
  2482                           
  2483                           ; BSR set to: 14
  2484  00025C  0012               	return		;funcret
  2485  00025E                     __end_of_pin_init:
  2486                           	opt stack 0
  2487                           tblptru	equ	0xFF8
  2488                           tblptrh	equ	0xFF7
  2489                           tblptrl	equ	0xFF6
  2490                           tablat	equ	0xFF5
  2491                           prodh	equ	0xFF4
  2492                           prodl	equ	0xFF3
  2493                           intcon	equ	0xFF2
  2494                           postinc0	equ	0xFEE
  2495                           wreg	equ	0xFE8
  2496                           indf1	equ	0xFE7
  2497                           postdec1	equ	0xFE5
  2498                           fsr1h	equ	0xFE2
  2499                           fsr1l	equ	0xFE1
  2500                           indf2	equ	0xFDF
  2501                           postinc2	equ	0xFDE
  2502                           fsr2h	equ	0xFDA
  2503                           fsr2l	equ	0xFD9
  2504                           status	equ	0xFD8
  2505                           
  2506 ;; *************** function _TIMER1_setup *****************
  2507 ;; Defined at:
  2508 ;;		line 735 in file "MELONPAN1_lib_ver1.20.h"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  data            2    6[COMRAM] unsigned int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;Total ram usage:        2 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    3
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_main
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text15
  2537  00061C                     __ptext15:
  2538                           	opt stack 0
  2539  00061C                     _TIMER1_setup:
  2540                           	opt stack 27
  2541                           
  2542                           ;MELONPAN1_lib_ver1.20.h: 736: T1GCON=0;
  2543                           
  2544                           ; BSR set to: 14
  2545                           ;incstack = 0
  2546  00061C  0E00               	movlw	0
  2547  00061E  6ED0               	movwf	4048,c	;volatile
  2548                           
  2549                           ;MELONPAN1_lib_ver1.20.h: 737: TMR1CLK=(char)((data>>8) & 0xff);
  2550  000620  5048               	movf	TIMER1_setup@data+1,w,c
  2551  000622  6ED2               	movwf	4050,c	;volatile
  2552                           
  2553                           ;MELONPAN1_lib_ver1.20.h: 738: T1CON=((char)(data & 0xff)) | 0x03;
  2554  000624  5047               	movf	TIMER1_setup@data,w,c
  2555  000626  0903               	iorlw	3
  2556  000628  6ECF               	movwf	4047,c	;volatile
  2557  00062A  0012               	return		;funcret
  2558  00062C                     __end_of_TIMER1_setup:
  2559                           	opt stack 0
  2560                           tblptru	equ	0xFF8
  2561                           tblptrh	equ	0xFF7
  2562                           tblptrl	equ	0xFF6
  2563                           tablat	equ	0xFF5
  2564                           prodh	equ	0xFF4
  2565                           prodl	equ	0xFF3
  2566                           intcon	equ	0xFF2
  2567                           postinc0	equ	0xFEE
  2568                           wreg	equ	0xFE8
  2569                           indf1	equ	0xFE7
  2570                           postdec1	equ	0xFE5
  2571                           fsr1h	equ	0xFE2
  2572                           fsr1l	equ	0xFE1
  2573                           indf2	equ	0xFDF
  2574                           postinc2	equ	0xFDE
  2575                           fsr2h	equ	0xFDA
  2576                           fsr2l	equ	0xFD9
  2577                           status	equ	0xFD8
  2578                           
  2579 ;; *************** function _TIMER1_set_count *****************
  2580 ;; Defined at:
  2581 ;;		line 745 in file "MELONPAN1_lib_ver1.20.h"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  data            2    6[COMRAM] unsigned int 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2598 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;Total ram usage:        2 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    3
  2602 ;; This function calls:
  2603 ;;		Nothing
  2604 ;; This function is called by:
  2605 ;;		_main
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text16
  2610  00064E                     __ptext16:
  2611                           	opt stack 0
  2612  00064E                     _TIMER1_set_count:
  2613                           	opt stack 27
  2614                           
  2615                           ;MELONPAN1_lib_ver1.20.h: 746: TMR1H=(char)(data>>8);
  2616                           
  2617                           ;incstack = 0
  2618  00064E  5048               	movf	TIMER1_set_count@data+1,w,c
  2619  000650  6ECE               	movwf	4046,c	;volatile
  2620                           
  2621                           ;MELONPAN1_lib_ver1.20.h: 747: TMR1L=(char)(data);
  2622  000652  C047  FFCD         	movff	TIMER1_set_count@data,4045	;volatile
  2623  000656  0012               	return		;funcret
  2624  000658                     __end_of_TIMER1_set_count:
  2625                           	opt stack 0
  2626                           tblptru	equ	0xFF8
  2627                           tblptrh	equ	0xFF7
  2628                           tblptrl	equ	0xFF6
  2629                           tablat	equ	0xFF5
  2630                           prodh	equ	0xFF4
  2631                           prodl	equ	0xFF3
  2632                           intcon	equ	0xFF2
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           indf1	equ	0xFE7
  2636                           postdec1	equ	0xFE5
  2637                           fsr1h	equ	0xFE2
  2638                           fsr1l	equ	0xFE1
  2639                           indf2	equ	0xFDF
  2640                           postinc2	equ	0xFDE
  2641                           fsr2h	equ	0xFDA
  2642                           fsr2l	equ	0xFD9
  2643                           status	equ	0xFD8
  2644                           
  2645 ;; *************** function _wood_isr *****************
  2646 ;; Defined at:
  2647 ;;		line 16 in file "MELON PAN1_main.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;Total ram usage:        4 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    2
  2668 ;; This function calls:
  2669 ;;		_read_ds_dual_byte
  2670 ;;		i2_TIMER0_16bit_set_count
  2671 ;;		i2_TIMER1_set_count
  2672 ;; This function is called by:
  2673 ;;		Interrupt level 2
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	intcode
  2678  000008                     __pintcode:
  2679                           	opt stack 0
  2680  000008                     _wood_isr:
  2681                           	opt stack 25
  2682                           
  2683                           ;incstack = 0
  2684  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2685  00000A  CFD9 F043          	movff	fsr2l,??_wood_isr
  2686  00000E  CFDA F044          	movff	fsr2h,??_wood_isr+1
  2687  000012  CFF3 F045          	movff	prodl,??_wood_isr+2
  2688  000016  CFF4 F046          	movff	prodh,??_wood_isr+3
  2689                           
  2690                           ;MELON PAN1_main.c: 17: if(PIR3bits.RC1IF){
  2691  00001A  010E               	movlb	14	; () banked
  2692  00001C  BB36               	btfsc	54,5,b	;volatile
  2693                           
  2694                           ; BSR set to: 14
  2695                           ;MELON PAN1_main.c: 19: read_ds_dual_byte();
  2696  00001E  ECE3  F001         	call	_read_ds_dual_byte	;wreg free
  2697                           
  2698                           ;MELON PAN1_main.c: 20: };MELON PAN1_main.c: 21: if(PIR0bits.TMR0IF){
  2699  000022  010E               	movlb	14	; () banked
  2700  000024  AB33               	btfss	51,5,b	;volatile
  2701  000026  D00A               	goto	i2l1154
  2702                           
  2703                           ; BSR set to: 14
  2704                           ;MELON PAN1_main.c: 22: PIR0bits.TMR0IF=0;
  2705  000028  9B33               	bcf	51,5,b	;volatile
  2706                           
  2707                           ; BSR set to: 14
  2708                           ;MELON PAN1_main.c: 24: TIMER0_16bit_set_count(25536);
  2709  00002A  0E63               	movlw	99
  2710  00002C  6E42               	movwf	i2TIMER0_16bit_set_count@data+1,c
  2711  00002E  0EC0               	movlw	192
  2712  000030  6E41               	movwf	i2TIMER0_16bit_set_count@data,c
  2713  000032  EC31  F003         	call	i2_TIMER0_16bit_set_count	;wreg free
  2714                           
  2715                           ;MELON PAN1_main.c: 26: DS_time_out++;
  2716  000036  2A51               	incf	_DS_time_out,f,c
  2717                           
  2718                           ;MELON PAN1_main.c: 27: DS_communication_error_time++;
  2719  000038  4A37               	infsnz	_DS_communication_error_time,f,c
  2720  00003A  2A38               	incf	_DS_communication_error_time+1,f,c
  2721  00003C                     i2l1154:
  2722                           
  2723                           ;MELON PAN1_main.c: 28: };MELON PAN1_main.c: 29: if(PIR5bits.TMR1IF){
  2724  00003C  010E               	movlb	14	; () banked
  2725  00003E  A138               	btfss	56,0,b	;volatile
  2726  000040  D007               	goto	i2l1155
  2727                           
  2728                           ; BSR set to: 14
  2729                           ;MELON PAN1_main.c: 30: PIR5bits.TMR1IF=0;
  2730  000042  9138               	bcf	56,0,b	;volatile
  2731                           
  2732                           ; BSR set to: 14
  2733                           ;MELON PAN1_main.c: 32: TIMER1_set_count(25536);
  2734  000044  0E63               	movlw	99
  2735  000046  6E42               	movwf	i2TIMER1_set_count@data+1,c
  2736  000048  0EC0               	movlw	192
  2737  00004A  6E41               	movwf	i2TIMER1_set_count@data,c
  2738  00004C  EC2C  F003         	call	i2_TIMER1_set_count	;wreg free
  2739  000050                     i2l1155:
  2740  000050  C046  FFF4         	movff	??_wood_isr+3,prodh
  2741  000054  C045  FFF3         	movff	??_wood_isr+2,prodl
  2742  000058  C044  FFDA         	movff	??_wood_isr+1,fsr2h
  2743  00005C  C043  FFD9         	movff	??_wood_isr,fsr2l
  2744  000060  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2745  000062  0011               	retfie		f
  2746  000064                     __end_of_wood_isr:
  2747                           	opt stack 0
  2748                           tblptru	equ	0xFF8
  2749                           tblptrh	equ	0xFF7
  2750                           tblptrl	equ	0xFF6
  2751                           tablat	equ	0xFF5
  2752                           prodh	equ	0xFF4
  2753                           prodl	equ	0xFF3
  2754                           intcon	equ	0xFF2
  2755                           postinc0	equ	0xFEE
  2756                           wreg	equ	0xFE8
  2757                           indf1	equ	0xFE7
  2758                           postdec1	equ	0xFE5
  2759                           fsr1h	equ	0xFE2
  2760                           fsr1l	equ	0xFE1
  2761                           indf2	equ	0xFDF
  2762                           postinc2	equ	0xFDE
  2763                           fsr2h	equ	0xFDA
  2764                           fsr2l	equ	0xFD9
  2765                           status	equ	0xFD8
  2766                           
  2767 ;; *************** function i2_TIMER1_set_count *****************
  2768 ;; Defined at:
  2769 ;;		line 745 in file "MELONPAN1_lib_ver1.20.h"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  data            2    0[COMRAM] unsigned int 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;Total ram usage:        2 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_wood_isr
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text18
  2797  000658                     __ptext18:
  2798                           	opt stack 0
  2799  000658                     i2_TIMER1_set_count:
  2800                           	opt stack 26
  2801                           
  2802                           ;MELONPAN1_lib_ver1.20.h: 746: TMR1H=(char)(data>>8);
  2803                           
  2804                           ;incstack = 0
  2805  000658  5042               	movf	i2TIMER1_set_count@data+1,w,c
  2806  00065A  6ECE               	movwf	4046,c	;volatile
  2807                           
  2808                           ;MELONPAN1_lib_ver1.20.h: 747: TMR1L=(char)(data);
  2809  00065C  C041  FFCD         	movff	i2TIMER1_set_count@data,4045	;volatile
  2810  000660  0012               	return		;funcret
  2811  000662                     __end_ofi2_TIMER1_set_count:
  2812                           	opt stack 0
  2813                           tblptru	equ	0xFF8
  2814                           tblptrh	equ	0xFF7
  2815                           tblptrl	equ	0xFF6
  2816                           tablat	equ	0xFF5
  2817                           prodh	equ	0xFF4
  2818                           prodl	equ	0xFF3
  2819                           intcon	equ	0xFF2
  2820                           postinc0	equ	0xFEE
  2821                           wreg	equ	0xFE8
  2822                           indf1	equ	0xFE7
  2823                           postdec1	equ	0xFE5
  2824                           fsr1h	equ	0xFE2
  2825                           fsr1l	equ	0xFE1
  2826                           indf2	equ	0xFDF
  2827                           postinc2	equ	0xFDE
  2828                           fsr2h	equ	0xFDA
  2829                           fsr2l	equ	0xFD9
  2830                           status	equ	0xFD8
  2831                           
  2832 ;; *************** function i2_TIMER0_16bit_set_count *****************
  2833 ;; Defined at:
  2834 ;;		line 721 in file "MELONPAN1_lib_ver1.20.h"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  data            2    0[COMRAM] unsigned int 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2852 ;;Total ram usage:        2 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_wood_isr
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text19
  2862  000662                     __ptext19:
  2863                           	opt stack 0
  2864  000662                     i2_TIMER0_16bit_set_count:
  2865                           	opt stack 26
  2866                           
  2867                           ;MELONPAN1_lib_ver1.20.h: 722: TMR0H=(char)(data>>8);
  2868                           
  2869                           ;incstack = 0
  2870  000662  5042               	movf	i2TIMER0_16bit_set_count@data+1,w,c
  2871  000664  6ED4               	movwf	4052,c	;volatile
  2872                           
  2873                           ;MELONPAN1_lib_ver1.20.h: 723: TMR0L=(char)(data);
  2874  000666  C041  FFD3         	movff	i2TIMER0_16bit_set_count@data,4051	;volatile
  2875  00066A  0012               	return		;funcret
  2876  00066C                     __end_ofi2_TIMER0_16bit_set_count:
  2877                           	opt stack 0
  2878                           tblptru	equ	0xFF8
  2879                           tblptrh	equ	0xFF7
  2880                           tblptrl	equ	0xFF6
  2881                           tablat	equ	0xFF5
  2882                           prodh	equ	0xFF4
  2883                           prodl	equ	0xFF3
  2884                           intcon	equ	0xFF2
  2885                           postinc0	equ	0xFEE
  2886                           wreg	equ	0xFE8
  2887                           indf1	equ	0xFE7
  2888                           postdec1	equ	0xFE5
  2889                           fsr1h	equ	0xFE2
  2890                           fsr1l	equ	0xFE1
  2891                           indf2	equ	0xFDF
  2892                           postinc2	equ	0xFDE
  2893                           fsr2h	equ	0xFDA
  2894                           fsr2l	equ	0xFD9
  2895                           status	equ	0xFD8
  2896                           
  2897 ;; *************** function _read_ds_dual_byte *****************
  2898 ;; Defined at:
  2899 ;;		line 112 in file "ds_dual_wood.h"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2917 ;;Total ram usage:        1 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    1
  2920 ;; This function calls:
  2921 ;;		_Serial1_read
  2922 ;; This function is called by:
  2923 ;;		_wood_isr
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text20
  2928  0003C6                     __ptext20:
  2929                           	opt stack 0
  2930  0003C6                     _read_ds_dual_byte:
  2931                           	opt stack 25
  2932                           
  2933                           ;ds_dual_wood.h: 113: if(DS_read_stop==0){
  2934                           
  2935                           ;incstack = 0
  2936  0003C6  503F               	movf	_DS_read_stop,w,c
  2937  0003C8  A4D8               	btfss	status,2,c
  2938  0003CA  D038               	goto	i2l978
  2939                           
  2940                           ;ds_dual_wood.h: 114: sinyounai_DS_data[DS_uart_number]=Serial1_read();
  2941  0003CC  5040               	movf	_DS_uart_number,w,c
  2942  0003CE  0D01               	mullw	1
  2943  0003D0  0E0E               	movlw	low _sinyounai_DS_data
  2944  0003D2  24F3               	addwf	prodl,w,c
  2945  0003D4  6ED9               	movwf	fsr2l,c
  2946  0003D6  0E00               	movlw	high _sinyounai_DS_data
  2947  0003D8  20F4               	addwfc	prodh,w,c
  2948  0003DA  6EDA               	movwf	fsr2h,c
  2949  0003DC  EC36  F003         	call	_Serial1_read	;wreg free
  2950  0003E0  6EDF               	movwf	indf2,c
  2951                           
  2952                           ;ds_dual_wood.h: 115: if(DS_uart_number==1 && sinyounai_DS_data[DS_uart_number]==0x0D){
  2953  0003E2  0440               	decf	_DS_uart_number,w,c
  2954  0003E4  A4D8               	btfss	status,2,c
  2955  0003E6  D00F               	goto	i2l979
  2956  0003E8  5040               	movf	_DS_uart_number,w,c
  2957  0003EA  0D01               	mullw	1
  2958  0003EC  0E0E               	movlw	low _sinyounai_DS_data
  2959  0003EE  24F3               	addwf	prodl,w,c
  2960  0003F0  6ED9               	movwf	fsr2l,c
  2961  0003F2  0E00               	movlw	high _sinyounai_DS_data
  2962  0003F4  20F4               	addwfc	prodh,w,c
  2963  0003F6  6EDA               	movwf	fsr2h,c
  2964  0003F8  0E0D               	movlw	13
  2965  0003FA  18DE               	xorwf	postinc2,w,c
  2966  0003FC  A4D8               	btfss	status,2,c
  2967  0003FE  D003               	goto	i2l979
  2968                           
  2969                           ;ds_dual_wood.h: 116: DS_uart_number=1;
  2970  000400  0E01               	movlw	1
  2971  000402  6E40               	movwf	_DS_uart_number,c
  2972                           
  2973                           ;ds_dual_wood.h: 117: }else if((DS_uart_number==0 && sinyounai_DS_data[0]!=0x0D)||(DS_ua
      +                          rt_number==1 && sinyounai_DS_data[1]!=0x00 && sinyounai_DS_data[1]!=0xCB)){
  2974  000404  0012               	return	
  2975  000406                     i2l979:
  2976  000406  5040               	movf	_DS_uart_number,w,c
  2977  000408  A4D8               	btfss	status,2,c
  2978  00040A  D004               	goto	i2u46_40
  2979  00040C  0E0D               	movlw	13
  2980  00040E  180E               	xorwf	_sinyounai_DS_data,w,c
  2981  000410  A4D8               	btfss	status,2,c
  2982  000412  D00A               	goto	i2u49_40
  2983  000414                     i2u46_40:
  2984  000414  0440               	decf	_DS_uart_number,w,c
  2985  000416  A4D8               	btfss	status,2,c
  2986  000418  D00A               	goto	i2l981
  2987  00041A  500F               	movf	_sinyounai_DS_data+1,w,c
  2988  00041C  B4D8               	btfsc	status,2,c
  2989  00041E  D007               	goto	i2l981
  2990  000420  0ECB               	movlw	203
  2991  000422  180F               	xorwf	_sinyounai_DS_data+1,w,c
  2992  000424  B4D8               	btfsc	status,2,c
  2993  000426  D003               	goto	i2l981
  2994  000428                     i2u49_40:
  2995                           
  2996                           ;ds_dual_wood.h: 118: DS_uart_number=0;
  2997  000428  0E00               	movlw	0
  2998  00042A  6E40               	movwf	_DS_uart_number,c
  2999                           
  3000                           ;ds_dual_wood.h: 119: }else{
  3001  00042C  0012               	return	
  3002  00042E                     i2l981:
  3003                           
  3004                           ;ds_dual_wood.h: 120: DS_uart_number++;
  3005  00042E  2A40               	incf	_DS_uart_number,f,c
  3006                           
  3007                           ;ds_dual_wood.h: 121: if(DS_uart_number>(13-1)){
  3008  000430  0E0C               	movlw	12
  3009  000432  6440               	cpfsgt	_DS_uart_number,c
  3010  000434  0012               	return	
  3011                           
  3012                           ;ds_dual_wood.h: 122: DS_read_stop=1;
  3013  000436  0E01               	movlw	1
  3014  000438  6E3F               	movwf	_DS_read_stop,c
  3015                           
  3016                           ;ds_dual_wood.h: 123: };ds_dual_wood.h: 124: };ds_dual_wood.h: 125: }else{
  3017  00043A  0012               	return	
  3018  00043C                     i2l978:
  3019                           
  3020                           ;ds_dual_wood.h: 126: Serial1_read();
  3021  00043C  EC36  F003         	call	_Serial1_read	;wreg free
  3022  000440  0012               	return	
  3023  000442                     __end_of_read_ds_dual_byte:
  3024                           	opt stack 0
  3025                           tblptru	equ	0xFF8
  3026                           tblptrh	equ	0xFF7
  3027                           tblptrl	equ	0xFF6
  3028                           tablat	equ	0xFF5
  3029                           prodh	equ	0xFF4
  3030                           prodl	equ	0xFF3
  3031                           intcon	equ	0xFF2
  3032                           postinc0	equ	0xFEE
  3033                           wreg	equ	0xFE8
  3034                           indf1	equ	0xFE7
  3035                           postdec1	equ	0xFE5
  3036                           fsr1h	equ	0xFE2
  3037                           fsr1l	equ	0xFE1
  3038                           indf2	equ	0xFDF
  3039                           postinc2	equ	0xFDE
  3040                           fsr2h	equ	0xFDA
  3041                           fsr2l	equ	0xFD9
  3042                           status	equ	0xFD8
  3043                           
  3044 ;; *************** function _Serial1_read *****************
  3045 ;; Defined at:
  3046 ;;		line 490 in file "MELONPAN1_lib_ver1.20.h"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      unsigned char 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;Total ram usage:        0 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_read_ds_dual_byte
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text21
  3074  00066C                     __ptext21:
  3075                           	opt stack 0
  3076  00066C                     _Serial1_read:
  3077                           	opt stack 25
  3078                           
  3079                           ;MELONPAN1_lib_ver1.20.h: 491: while(!PIR3bits.RC1IF);
  3080                           
  3081                           ;incstack = 0
  3082  00066C  010E               	movlb	14	; () banked
  3083  00066E  AB36               	btfss	54,5,b	;volatile
  3084  000670  D7FD               	goto	_Serial1_read
  3085                           
  3086                           ; BSR set to: 14
  3087                           ;MELONPAN1_lib_ver1.20.h: 492: return RC1REG;
  3088                           
  3089                           ; BSR set to: 14
  3090  000672  5098               	movf	3992,w,c	;volatile
  3091  000674  0012               	return	
  3092  000676                     __end_of_Serial1_read:
  3093                           	opt stack 0
  3094  0000                     tblptru	equ	0xFF8
  3095                           tblptrh	equ	0xFF7
  3096                           tblptrl	equ	0xFF6
  3097                           tablat	equ	0xFF5
  3098                           prodh	equ	0xFF4
  3099                           prodl	equ	0xFF3
  3100                           intcon	equ	0xFF2
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           indf1	equ	0xFE7
  3104                           postdec1	equ	0xFE5
  3105                           fsr1h	equ	0xFE2
  3106                           fsr1l	equ	0xFE1
  3107                           indf2	equ	0xFDF
  3108                           postinc2	equ	0xFDE
  3109                           fsr2h	equ	0xFDA
  3110                           fsr2l	equ	0xFD9
  3111                           status	equ	0xFD8
  3112                           tblptru	equ	0xFF8
  3113                           tblptrh	equ	0xFF7
  3114                           tblptrl	equ	0xFF6
  3115                           tablat	equ	0xFF5
  3116                           prodh	equ	0xFF4
  3117                           prodl	equ	0xFF3
  3118                           intcon	equ	0xFF2
  3119                           postinc0	equ	0xFEE
  3120                           wreg	equ	0xFE8
  3121                           indf1	equ	0xFE7
  3122                           postdec1	equ	0xFE5
  3123                           fsr1h	equ	0xFE2
  3124                           fsr1l	equ	0xFE1
  3125                           indf2	equ	0xFDF
  3126                           postinc2	equ	0xFDE
  3127                           fsr2h	equ	0xFDA
  3128                           fsr2l	equ	0xFD9
  3129                           status	equ	0xFD8
  3130                           
  3131                           	psect	rparam
  3132  0000                     tblptru	equ	0xFF8
  3133                           tblptrh	equ	0xFF7
  3134                           tblptrl	equ	0xFF6
  3135                           tablat	equ	0xFF5
  3136                           prodh	equ	0xFF4
  3137                           prodl	equ	0xFF3
  3138                           intcon	equ	0xFF2
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           indf1	equ	0xFE7
  3142                           postdec1	equ	0xFE5
  3143                           fsr1h	equ	0xFE2
  3144                           fsr1l	equ	0xFE1
  3145                           indf2	equ	0xFDF
  3146                           postinc2	equ	0xFDE
  3147                           fsr2h	equ	0xFDA
  3148                           fsr2l	equ	0xFD9
  3149                           status	equ	0xFD8
  3150                           
  3151                           	psect	temp
  3152  000052                     btemp:
  3153                           	opt stack 0
  3154  000052                     	ds	1
  3155  0000                     int$flags	set	btemp
  3156  0000                     wtemp8	set	btemp+1
  3157  0000                     ttemp5	set	btemp+1
  3158  0000                     ttemp6	set	btemp+4
  3159  0000                     ttemp7	set	btemp+8
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           prodh	equ	0xFF4
  3165                           prodl	equ	0xFF3
  3166                           intcon	equ	0xFF2
  3167                           postinc0	equ	0xFEE
  3168                           wreg	equ	0xFE8
  3169                           indf1	equ	0xFE7
  3170                           postdec1	equ	0xFE5
  3171                           fsr1h	equ	0xFE2
  3172                           fsr1l	equ	0xFE1
  3173                           indf2	equ	0xFDF
  3174                           postinc2	equ	0xFDE
  3175                           fsr2h	equ	0xFDA
  3176                           fsr2l	equ	0xFD9
  3177                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      81
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_ds_dual_de_gozaru
    _spi_init->_SPI_begin
    _read_ds_dual_init->_Serial1_begin
    _read_ds_dual_de_gozaru->_GOOD_de_gozaru
    _GOOD_de_gozaru->_bit_test

Critical Paths under _wood_isr in COMRAM

    _wood_isr->i2_TIMER0_16bit_set_count
    _wood_isr->i2_TIMER1_set_count

Critical Paths under _main in BANK0

    None.

Critical Paths under _wood_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _wood_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _wood_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _wood_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _wood_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _wood_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _wood_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _wood_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _wood_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _wood_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _wood_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _wood_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _wood_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _wood_isr in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1324
                   _TIMER1_set_count
                       _TIMER1_setup
                  _enable_interrupts
                           _pin_init
             _read_ds_dual_de_gozaru
                  _read_ds_dual_init
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0     120
                          _SPI_begin
 ---------------------------------------------------------------------------------
 (2) _SPI_begin                                            2     0      2     120
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _read_ds_dual_init                                    0     0      0     589
                      _Serial1_begin
             _TIMER0_16bit_set_count
                       _TIMER0_setup
                  _enable_interrupts
 ---------------------------------------------------------------------------------
 (2) _enable_interrupts                                    1     1      0      15
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_setup                                         2     0      2     120
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TIMER0_16bit_set_count                               2     0      2     170
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Serial1_begin                                        3     0      3     284
                                              6 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _read_ds_dual_de_gozaru                               1     1      0     310
                                             12 COMRAM     1     1      0
                      _BAD_de_gozaru
                     _GOOD_de_gozaru
                   _always_de_gozaru
 ---------------------------------------------------------------------------------
 (2) _always_de_gozaru                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GOOD_de_gozaru                                       1     1      0     310
                                             11 COMRAM     1     1      0
                           _bit_test
                        _output_LED5
 ---------------------------------------------------------------------------------
 (3) _output_LED5                                          1     1      0      15
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bit_test                                             5     4      1     295
                                              6 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _BAD_de_gozaru                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER1_setup                                         2     0      2     120
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TIMER1_set_count                                     2     0      2     170
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _wood_isr                                             4     4      0     140
                                              2 COMRAM     4     4      0
                  _read_ds_dual_byte
           i2_TIMER0_16bit_set_count
                 i2_TIMER1_set_count
 ---------------------------------------------------------------------------------
 (5) i2_TIMER1_set_count                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) i2_TIMER0_16bit_set_count                             2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _read_ds_dual_byte                                    1     1      0       0
                                              0 COMRAM     1     1      0
                       _Serial1_read
 ---------------------------------------------------------------------------------
 (6) _Serial1_read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TIMER1_set_count
   _TIMER1_setup
   _enable_interrupts
   _pin_init
   _read_ds_dual_de_gozaru
     _BAD_de_gozaru
     _GOOD_de_gozaru
       _bit_test
       _output_LED5
     _always_de_gozaru
   _read_ds_dual_init
     _Serial1_begin
     _TIMER0_16bit_set_count
     _TIMER0_setup
     _enable_interrupts
   _spi_init
     _SPI_begin

 _wood_isr (ROOT)
   _read_ds_dual_byte
     _Serial1_read
   i2_TIMER0_16bit_set_count
   i2_TIMER1_set_count

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D      51       1       86.2%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51       8        0.0%
DATA                 0      0      51       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Aug 16 12:42:37 2018

                              __CFG_CP$OFF 000000                                        l460 0466  
                                      l462 047C                                        l464 0492  
                                      l457 04A8                                        l466 04A8  
                                      l458 0454                                        l742 02E8  
                                      l750 0298                                        l751 02A2  
                                      l743 0262                                        l752 02AC  
                                      l753 02B6                                        l745 0266  
                                      l754 02C0                                        l746 0270  
                                      l755 02C8                                        l747 027A  
                                      l756 02D0                                        l748 0284  
                                      l757 02D8                                        l749 028E  
                                      l758 02E0                                        l874 0618  
                                      l890 036E                                        l891 037A  
                                      l892 0386                                        l885 039E  
                                      l893 0392                                        l886 034A  
                                      l888 0356                                        l889 0362  
                             __CFG_CPD$OFF 000000                       ??i2_TIMER1_set_count 0043  
                                      prod 000FF3                                        wreg 000FE8  
read_ds_dual_de_gozaru@first_communication 0050                               __CFG_LVP$OFF 000000  
           ten_bit_test_unsignedint@F14391 0025                               __CFG_ZCD$OFF 000000  
                                     l1001 0142                                       l1002 0074  
                                     l1003 0156                                       l1004 0084  
                                     l1006 00CA                                       l1007 013C  
                                     l1009 0160                                       l1161 05C2  
                                     l1167 04C8                                       l1168 04F6  
                                     l3372 047C                                _output_LED5 0346  
                                     l3376 0492                                       u1500 04E0  
                                     _LATA 000F79                                       u1414 0604  
                                     _LATB 000F7A                                       u1415 0600  
                                     _LATC 000F7B                                       u1520 050E  
                                     _LATD 000F7C                                       _LATE 000F7D  
                                     u1506 04E2                                       _LATF 000F7E  
                                     _LATG 000F7F                                       _LATH 000F80  
                                     u1526 0510                                       _T2PR 000FBC  
                                     _T4PR 000FB6                                       _T6PR 000FB0  
                                     _T8PR 000F29                      __end_of_Serial1_begin 04B8  
                                     _TMR2 000FBB                                       _TMR4 000FB5  
                                     _TMR6 000FAF                                       _TMR8 000F28  
                 ??_TIMER0_16bit_set_count 0049                                       _WPUA 000E91  
                                     _WPUB 000E99                                       _WPUC 000EA1  
                                     _WPUD 000EA6                                       _WPUE 000EAE  
                                     _WPUF 000EB3                                       _WPUG 000EBB  
                                     _WPUH 000EC0                                       _data 001B  
                                     _main 0598                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 0052                              __CFG_BOREN$ON 000000  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0064            __size_of_read_ds_dual_de_gozaru 00FE  
                            __CFG_CSWEN$ON 000000                               ___param_bank 000000  
                            __CFG_SCANE$ON 000000                                      _ADACQ 000F5C  
                                    ?_main 0041                                      _ADCLK 000F57  
                                    _ADPCH 000F5F                                      _ADREF 000F58  
                                    _ADPRE 000F5E                              __CFG_WDTE$OFF 000000  
                                    _T1CON 000FCF                                      _T2CON 000FBD  
                                    _T3CON 000FC9                                      _T4CON 000FB7  
                                    _T2HLT 000FBE                                      _T5CON 000FC3  
                                    _T6CON 000FB1                                      _T4HLT 000FB8  
                           __CFG_DEBUG$OFF 000000                                      _T7CON 000F30  
                                    _T8CON 000F2A                                      _T6HLT 000FB2  
                                    _T8HLT 000F2B                                      _T2RST 000FC0  
                                    _T4RST 000FBA                                      _T6RST 000FB4  
                                    _T8RST 000F2D                                      i2l981 042E  
                                    i2l978 043C                                      i2l979 0406  
                                    _TMR0H 000FD4                                      _TMR1H 000FCE  
                                    _TMR0L 000FD3                                      _TMR1L 000FCD  
                                    _TMR3H 000FC8                                      _TMR3L 000FC7  
                                    _TMR5H 000FC2                                      _TMR5L 000FC1  
                                    _TMR7H 000F2F                                      _TMR7L 000F2E  
                                    _TRISA 000F81                                      _TRISB 000F82  
                                    _TRISC 000F83                                      _TRISD 000F84  
                                    _TRISE 000F85                                      _TRISF 000F86  
                                    _TRISG 000F87                                      _TRISH 000F88  
                         _always_de_gozaru 0680                              __CFG_WRT0$OFF 000000  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                              __CFG_PWRTE$ON 000000  
                            __CFG_WRT4$OFF 000000                              __CFG_WRT5$OFF 000000  
                            __CFG_WRT6$OFF 000000                              __CFG_WRT7$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                             __CFG_EBTR4$OFF 000000  
                           __CFG_EBTR5$OFF 000000                             __CFG_EBTR6$OFF 000000  
                           __CFG_EBTR7$OFF 000000                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           __CFG_EBTRB$OFF 000000                         __CFG_MCLRE$EXTMCLR 000000  
                                    tablat 000FF5                                      ttemp5 0053  
                                    ttemp6 0056                                      ttemp7 005A  
                                    status 000FD8                                      wtemp8 0053  
                       __size_of_SPI_begin 000C                            __initialization 0562  
                        ?_TIMER1_set_count 0047                               __end_of_main 05C8  
                       ??_TIMER1_set_count 0049                                     ??_main 004E  
                            __activetblptr 000003                     _read_ds_dual_de_gozaru 0068  
                                   _ADCON0 000F60                                     _ADCON1 000F59  
                                   _ADCON2 000F5A                                     _ADCON3 000F5B  
                                   _ADRESH 000F64                                     _ADRESL 000F63  
                           _GOOD_de_gozaru 04B8                                     _ANSELA 000E92  
                                   _ANSELB 000E9A                                     _ANSELD 000EA7  
                                   _ANSELE 000EAF                                     _ANSELF 000EB4  
                                   _ANSELG 000EBC                                     _T0CON0 000FD5  
                                   _T0CON1 000FD6                                     _T1GCON 000FD0  
                                   _T3GCON 000FCA                                     _T5GCON 000FC4  
                                   _RC1REG 000F98                                     _RB0PPS 000E5A  
                                   _RC2REG 000EF1                                     _RB1PPS 000E5B  
                                   _T7GCON 000F31                                     _RC3REG 000EEA  
                                   _RC0PPS 000E62                                     _RC4REG 000EE3  
                                   _RC1STA 000F9C                                     _RC5REG 000EDC  
                                   _RC2STA 000EF5                                     _RC3STA 000EEE  
                                   _RC4STA 000EE7                                     _RC5STA 000EE0  
                                   _ODCONA 000E90                                     _ODCONB 000E98  
                                   _ODCONC 000EA0                                     _RC6PPS 000E68  
                                   _RD4PPS 000E6E                                     _ODCOND 000EA5  
                                   _ODCONE 000EAD                                     _ODCONF 000EB2  
                                   _ODCONG 000EBA                                     _ODCONH 000EBF  
                                   _RD6PPS 000E70                                     i2l1154 003C  
                                   i2l1155 0050                             __CFG_WDTCCS$SC 000000  
          __size_of_TIMER0_16bit_set_count 000A                      _CSV_lib_transmit_flag 0031  
                                   _TX1REG 000F99                                     _TX2REG 000EF2  
                                   _TX3REG 000EEB                                     _TX4REG 000EE4  
                                   _TX1STA 000F9D                                     _TX5REG 000EDD  
                                   _TX2STA 000EF6                                     _TX3STA 000EEF  
                                   _TX4STA 000EE8                                     _TX5STA 000EE1  
                         __end_of_bit_test 061C                             __CFG_XINST$OFF 000000  
                           __CFG_STVREN$ON 000000                                     clear_0 0588  
                         __end_of_pin_init 025E                             output_LED5@num 0047  
                        __end_of_SPI_begin 0638                               __pdataCOMRAM 004E  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                           __end_of_spi_init 05F2  
                   __end_of_GOOD_de_gozaru 0524                     __size_of_BAD_de_gozaru 0006  
                         __end_of_wood_isr 0064                                 __accesstop 0060  
                  __end_of__initialization 058E                            __CFG_FEXTOSC$HS 000000  
                            ___rparam_used 000001                             __pcstackCOMRAM 0041  
        __size_ofi2_TIMER0_16bit_set_count 000A                  ?i2_TIMER0_16bit_set_count 0041  
                   _TIMER0_16bit_set_count 0644                              ?_Serial1_read 0041  
                          ?_GOOD_de_gozaru 0041                               ?_output_LED5 0041  
                        _read_ds_dual_byte 03C6                          _read_ds_dual_init 0524  
                            ?_TIMER0_setup 0047                              ?_TIMER1_setup 0047  
                       ?_read_ds_dual_byte 0041                         ?_read_ds_dual_init 0041  
                 __end_of_always_de_gozaru 0682                             _SSP1DATPPSbits 000E1A  
                   i2TIMER1_set_count@data 0041                              _BAD_de_gozaru 0676  
                      ??_read_ds_dual_byte 0041                        ??_read_ds_dual_init 004A  
                           _SSP2DATPPSbits 000E1D                             _SSP1CLKPPSbits 000E19  
                           ??_Serial1_read 0041                                    _SP1BRGH 000F9B  
                                  _SP1BRGL 000F9A                __size_ofi2_TIMER1_set_count 000A  
                                  _SP2BRGH 000EF4                                    _SP2BRGL 000EF3  
                                  _SP3BRGH 000EED                                    _SP3BRGL 000EEC  
                                  _SP4BRGH 000EE6                                    _SP4BRGL 000EE5  
                                  _SP5BRGH 000EDF                                    _SP5BRGL 000EDE  
                           _SSP2CLKPPSbits 000E1C                                    i2u46_40 0414  
                                  _TMR1CLK 000FD2                                    i2u49_40 0428  
                                  _DS_data 0001                                    _TMR3CLK 000FCC  
                                  _TMR5CLK 000FC6                                    _TMR7CLK 000F33  
                                ?_bit_test 0047                                    _SSP2ADD 000ED6  
                                  _SSP1BUF 000F91                                    _SSP2BUF 000ED5  
                __end_of_read_ds_dual_byte 0442                  __end_of_read_ds_dual_init 0562  
                           ??_TIMER0_setup 0049                             ??_TIMER1_setup 0049  
                                ?_pin_init 0041                                    __Hparam 0000  
                                  __Lparam 0000                           TIMER0_setup@data 0047  
                           ?_BAD_de_gozaru 0041                                  ?_spi_init 0041  
               read_ds_dual_de_gozaru@mode 003D                                    __pcinit 0562  
                  ?_read_ds_dual_de_gozaru 0041                                  ?_wood_isr 0041  
                                  __ramtop 0E00                     __size_of_Serial1_begin 0076  
                                  __ptext0 0598                                    __ptext1 05C8  
                                  __ptext2 062C                                    __ptext3 0524  
                                  __ptext4 025E                                    __ptext5 0638  
                                  __ptext6 0644                                    __ptext7 0442  
                                  __ptext8 0068                                    __ptext9 0680  
                                _T1CONbits 000FCF                              SPI_begin@data 0047  
                                _T2CONbits 000FBD                                  _T3CONbits 000FC9  
                                _T4CONbits 000FB7                  __size_of_TIMER1_set_count 000A  
                                _T5CONbits 000FC3                                  _T6CONbits 000FB1  
                               ??_bit_test 0048                           TIMER1_setup@data 0047  
                                _T7CONbits 000F30                                  _T8CONbits 000F2A  
                     end_of_initialization 058E                          _sinyounai_DS_data 000E  
                               ??_pin_init 0047                          bit_test@bit_place 0047  
                                  postdec1 000FE5                                 ??_spi_init 0049  
                                  postinc0 000FEE                                    postinc2 000FDE  
           __end_of_read_ds_dual_de_gozaru 0166                      __CFG_WDTCPS$WDTCPS_31 000000  
                               ??_wood_isr 0043                                  _SPI_begin 062C  
               __size_of_read_ds_dual_byte 007C                 __size_of_read_ds_dual_init 003E  
                            _Serial1_begin 0442                       __size_of_output_LED5 0080  
         __end_ofi2_TIMER0_16bit_set_count 066C                             _DS_uart_number 0040  
                     __end_of_Serial1_read 0676                         _CSV_lib_cycle_time 0035  
                          ??_BAD_de_gozaru 0047                    ?_TIMER0_16bit_set_count 0047  
              _DS_communication_error_time 0037                              __pidataCOMRAM 067C  
                         ??_GOOD_de_gozaru 004C                       __end_of_TIMER0_setup 0644  
                        _enable_interrupts 025E                       __end_of_TIMER1_setup 062C  
                       ?_enable_interrupts 0041                        start_initialization 0562  
                           bit_test@number 004A                                 ?_SPI_begin 0047  
                      ??_enable_interrupts 0047                             ?_Serial1_begin 0047  
             i2TIMER0_16bit_set_count@data 0041             __end_of_TIMER0_16bit_set_count 064E  
                         __CFG_LPBOREN$OFF 000000                          ?_always_de_gozaru 0041  
                       ??_always_de_gozaru 0047                  __end_of_enable_interrupts 0346  
                              __pbssCOMRAM 0001                           _TIMER1_set_count 064E  
                        __size_of_bit_test 002A                 TIMER0_16bit_set_count@data 0047  
                       ten_bit_test@F14387 002A                   i2_TIMER0_16bit_set_count 0662  
                                __pintcode 0008                          __size_of_pin_init 00F8  
                         __CFG_PPS1WAY$OFF 000000                          __size_of_spi_init 002A  
               __end_ofi2_TIMER1_set_count 0662                                   _BAUD1CON 000F9E  
                                 _BAUD2CON 000EF7                                   _BAUD3CON 000EF0  
                                 _BAUD4CON 000EE9                                   _BAUD5CON 000EE2  
                        __size_of_wood_isr 005C                                ??_SPI_begin 0049  
                          ??_Serial1_begin 004A                                   _T2CLKCON 000FBF  
                       Serial1_begin@speed 0047                                   _T4CLKCON 000FB9  
                    __size_of_Serial1_read 000A                                   _T6CLKCON 000FB3  
                                 _T8CLKCON 000F2C                             _CSV_lib_enable 003B  
                                 _LATAbits 000F79                                   _LATDbits 000F7C  
                                 _LATEbits 000F7D                                   _LATGbits 000F7F  
                                 _LATHbits 000F80                                   _PIE0bits 000E29  
                                 _PIE3bits 000E2C                                   _PIE4bits 000E2D  
                                 _PIE5bits 000E2E                        __CFG_BORV$VBOR_2P45 000000  
                                 _PIR0bits 000E33                                   _PIR3bits 000E36  
                                 _PIR4bits 000E37                                   _PIR5bits 000E38  
                                bit_test@i 004B                      __size_of_TIMER0_setup 000C  
                                 _SSP1CON1 000F95                                   _SSP2CON1 000ED9  
                                 _SSP2CON3 000EDB                      __size_of_TIMER1_setup 0010  
                     TIMER1_set_count@data 0047                                   _SSP1STAT 000F94  
                                 _SSP2STAT 000ED8                 __size_of_enable_interrupts 00E8  
                               _ADCON0bits 000F60                               _Serial1_read 066C  
                                copy_data0 0576                               _TIMER0_setup 0638  
                             _TIMER1_setup 061C                                   __Hrparam 0000  
                  __CFG_RSTOSC$EXTOSC_4PLL 000000                                   __Lrparam 0000  
                                 _bit_test 05F2                                   __ptext10 04B8  
                                 __ptext11 0346                                   __ptext20 03C6  
                                 __ptext12 05F2                                   __ptext21 066C  
                                 __ptext13 0676                                   __ptext14 0166  
                                 __ptext15 061C                                   __ptext16 064E  
                                 __ptext18 0658                                   __ptext19 0662  
                             _SSP1CON1bits 000F95                              ??_output_LED5 0047  
                             _SSP2CON2bits 000EDA                                   _csv_data 002D  
                             _DS_read_stop 003F                          Serial1_begin@data 0049  
                            __size_of_main 0030                       __CFG_WDTCWS$WDTCWS_7 000000  
                                 _pin_init 0166                   __end_of_TIMER1_set_count 0658  
                    __end_of_BAD_de_gozaru 067C                                   _spi_init 05C8  
                                 int$flags 0052                      enable_interrupts@data 0047  
                             _SSP1STATbits 000F94                                   _wood_isr 0008  
                             _SSP2STATbits 000ED8                                 _INTCONbits 000FF2  
                __size_of_always_de_gozaru 0002                           _CSV_lib_now_time 0033  
                                 intlevel2 0000                 ??i2_TIMER0_16bit_set_count 0043  
                        __CFG_CLKOUTEN$OFF 000000                        __end_of_output_LED5 03C6  
                 ??_read_ds_dual_de_gozaru 004D                             _before_DS_data 004E  
                              _DS_time_out 0051          read_ds_dual_de_gozaru@read_number 003E  
                               _RX1PPSbits 000E0F                                 _RX2PPSbits 000E11  
                               _TX1STAbits 000F9D                                 _TX2STAbits 000EF6  
                               _TX3STAbits 000EEF                    __size_of_GOOD_de_gozaru 006C  
                               _TX4STAbits 000EE8                                 _TX5STAbits 000EE1  
                       i2_TIMER1_set_count 0658                CSV_timer_task@CSV_lib_count 002F  
                             _push_DS_data 0039            read_ds_dual_de_gozaru@check_sum 003C  
                      ?i2_TIMER1_set_count 0041  
