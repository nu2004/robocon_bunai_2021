

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Feb 22 13:52:46 2021

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 1.44
    47                           ; Generated 14/09/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F67K40 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMRAM
    82  000AB4                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _before_DS_data
    86  000AB4  FF                 	db	255
    87  000AB5  FF                 	db	255
    88                           
    89                           ;initializer for read_ds_dual_de_gozaru@first_communication
    90  000AB6  01                 	db	1
    91                           
    92                           ;initializer for _DS_time_out
    93  000AB7  64                 	db	100
    94  0000                     _RD6PPS	set	3696
    95  0000                     _RX2PPSbits	set	3601
    96  0000                     _RD4PPS	set	3694
    97  0000                     _RX1PPSbits	set	3599
    98  0000                     _SSP2CLKPPSbits	set	3612
    99  0000                     _SSP2DATPPSbits	set	3613
   100  0000                     _RB1PPS	set	3675
   101  0000                     _RB0PPS	set	3674
   102  0000                     _RC6PPS	set	3688
   103  0000                     _SSP1CLKPPSbits	set	3609
   104  0000                     _SSP1DATPPSbits	set	3610
   105  0000                     _RC0PPS	set	3682
   106  0000                     _ODCONH	set	3775
   107  0000                     _ODCONG	set	3770
   108  0000                     _ODCONF	set	3762
   109  0000                     _ODCONE	set	3757
   110  0000                     _ODCOND	set	3749
   111  0000                     _ODCONC	set	3744
   112  0000                     _ODCONB	set	3736
   113  0000                     _ODCONA	set	3728
   114  0000                     _WPUH	set	3776
   115  0000                     _WPUG	set	3771
   116  0000                     _WPUF	set	3763
   117  0000                     _WPUE	set	3758
   118  0000                     _WPUD	set	3750
   119  0000                     _WPUC	set	3745
   120  0000                     _WPUB	set	3737
   121  0000                     _WPUA	set	3729
   122  0000                     _ANSELG	set	3772
   123  0000                     _ANSELF	set	3764
   124  0000                     _ANSELE	set	3759
   125  0000                     _ANSELD	set	3751
   126  0000                     _ANSELB	set	3738
   127  0000                     _ANSELA	set	3730
   128  0000                     _PIE4bits	set	3629
   129  0000                     _PIE3bits	set	3628
   130  0000                     _PIE5bits	set	3630
   131  0000                     _PIR5bits	set	3640
   132  0000                     _PIE0bits	set	3625
   133  0000                     _PIR0bits	set	3635
   134  0000                     _TX5REG	set	3805
   135  0000                     _TX5STAbits	set	3809
   136  0000                     _RC5REG	set	3804
   137  0000                     _BAUD5CON	set	3810
   138  0000                     _RC5STA	set	3808
   139  0000                     _TX5STA	set	3809
   140  0000                     _SP5BRGL	set	3806
   141  0000                     _SP5BRGH	set	3807
   142  0000                     _TX4REG	set	3812
   143  0000                     _TX4STAbits	set	3816
   144  0000                     _RC4REG	set	3811
   145  0000                     _BAUD4CON	set	3817
   146  0000                     _RC4STA	set	3815
   147  0000                     _TX4STA	set	3816
   148  0000                     _SP4BRGL	set	3813
   149  0000                     _SP4BRGH	set	3814
   150  0000                     _TX3REG	set	3819
   151  0000                     _TX3STAbits	set	3823
   152  0000                     _RC3REG	set	3818
   153  0000                     _PIR4bits	set	3639
   154  0000                     _BAUD3CON	set	3824
   155  0000                     _RC3STA	set	3822
   156  0000                     _TX3STA	set	3823
   157  0000                     _SP3BRGL	set	3820
   158  0000                     _SP3BRGH	set	3821
   159  0000                     _TX2REG	set	3826
   160  0000                     _TX2STAbits	set	3830
   161  0000                     _RC2REG	set	3825
   162  0000                     _BAUD2CON	set	3831
   163  0000                     _RC2STA	set	3829
   164  0000                     _TX2STA	set	3830
   165  0000                     _SP2BRGL	set	3827
   166  0000                     _SP2BRGH	set	3828
   167  0000                     _SSP2STATbits	set	3800
   168  0000                     _SSP2BUF	set	3797
   169  0000                     _PIR3bits	set	3638
   170  0000                     _SSP2CON2bits	set	3802
   171  0000                     _SSP2STAT	set	3800
   172  0000                     _SSP2ADD	set	3798
   173  0000                     _SSP2CON3	set	3803
   174  0000                     _SSP2CON1	set	3801
   175  0000                     _TMR8	set	3880
   176  0000                     _T8CONbits	set	3882
   177  0000                     _T8CON	set	3882
   178  0000                     _T8CLKCON	set	3884
   179  0000                     _T8PR	set	3881
   180  0000                     _T8HLT	set	3883
   181  0000                     _T8RST	set	3885
   182  0000                     _TMR7L	set	3886
   183  0000                     _TMR7H	set	3887
   184  0000                     _T7CONbits	set	3888
   185  0000                     _T7CON	set	3888
   186  0000                     _TMR7CLK	set	3891
   187  0000                     _T7GCON	set	3889
   188  0000                     _ADPCH	set	3935
   189  0000                     _ADACQ	set	3932
   190  0000                     _ADPRE	set	3934
   191  0000                     _ADREF	set	3928
   192  0000                     _ADCLK	set	3927
   193  0000                     _ADCON3	set	3931
   194  0000                     _ADCON2	set	3930
   195  0000                     _ADCON1	set	3929
   196  0000                     _LATDbits	set	3964
   197  0000                     _LATGbits	set	3967
   198  0000                     _LATHbits	set	3968
   199  0000                     _LATAbits	set	3961
   200  0000                     _LATEbits	set	3965
   201  0000                     _TRISH	set	3976
   202  0000                     _TRISG	set	3975
   203  0000                     _TRISF	set	3974
   204  0000                     _TRISE	set	3973
   205  0000                     _TRISD	set	3972
   206  0000                     _TRISC	set	3971
   207  0000                     _TRISB	set	3970
   208  0000                     _TRISA	set	3969
   209  0000                     _LATH	set	3968
   210  0000                     _LATG	set	3967
   211  0000                     _LATF	set	3966
   212  0000                     _LATE	set	3965
   213  0000                     _LATD	set	3964
   214  0000                     _LATC	set	3963
   215  0000                     _LATB	set	3962
   216  0000                     _LATA	set	3961
   217  0000                     _INTCONbits	set	4082
   218  0000                     _TMR6	set	4015
   219  0000                     _T6CONbits	set	4017
   220  0000                     _T6CON	set	4017
   221  0000                     _T6CLKCON	set	4019
   222  0000                     _T6PR	set	4016
   223  0000                     _T6HLT	set	4018
   224  0000                     _T6RST	set	4020
   225  0000                     _TMR4	set	4021
   226  0000                     _T4CONbits	set	4023
   227  0000                     _T4CON	set	4023
   228  0000                     _T4CLKCON	set	4025
   229  0000                     _T4PR	set	4022
   230  0000                     _T4HLT	set	4024
   231  0000                     _T4RST	set	4026
   232  0000                     _TMR2	set	4027
   233  0000                     _T2CONbits	set	4029
   234  0000                     _T2CON	set	4029
   235  0000                     _T2CLKCON	set	4031
   236  0000                     _T2PR	set	4028
   237  0000                     _T2HLT	set	4030
   238  0000                     _T2RST	set	4032
   239  0000                     _TMR5L	set	4033
   240  0000                     _TMR5H	set	4034
   241  0000                     _T5CONbits	set	4035
   242  0000                     _T5CON	set	4035
   243  0000                     _TMR5CLK	set	4038
   244  0000                     _T5GCON	set	4036
   245  0000                     _TMR3L	set	4039
   246  0000                     _TMR3H	set	4040
   247  0000                     _T3CONbits	set	4041
   248  0000                     _T3CON	set	4041
   249  0000                     _TMR3CLK	set	4044
   250  0000                     _T3GCON	set	4042
   251  0000                     _TMR1L	set	4045
   252  0000                     _TMR1H	set	4046
   253  0000                     _T1CONbits	set	4047
   254  0000                     _T1CON	set	4047
   255  0000                     _TMR1CLK	set	4050
   256  0000                     _T1GCON	set	4048
   257  0000                     _TMR0H	set	4052
   258  0000                     _TMR0L	set	4051
   259  0000                     _T0CON0	set	4053
   260  0000                     _T0CON1	set	4054
   261  0000                     _TX1REG	set	3993
   262  0000                     _TX1STAbits	set	3997
   263  0000                     _RC1REG	set	3992
   264  0000                     _BAUD1CON	set	3998
   265  0000                     _RC1STA	set	3996
   266  0000                     _TX1STA	set	3997
   267  0000                     _SP1BRGL	set	3994
   268  0000                     _SP1BRGH	set	3995
   269  0000                     _SSP1STATbits	set	3988
   270  0000                     _SSP1BUF	set	3985
   271  0000                     _SSP1CON1bits	set	3989
   272  0000                     _SSP1CON1	set	3989
   273  0000                     _SSP1STAT	set	3988
   274  0000                     _ADRESL	set	3939
   275  0000                     _ADRESH	set	3940
   276  0000                     _ADCON0bits	set	3936
   277  0000                     _ADCON0	set	3936
   278                           
   279                           ; #config settings
   280  0000                     
   281                           	psect	cinit
   282  0008CE                     __pcinit:
   283                           	opt stack 0
   284  0008CE                     start_initialization:
   285                           	opt stack 0
   286  0008CE                     __initialization:
   287                           	opt stack 0
   288                           
   289                           ; Initialize objects allocated to COMRAM (4 bytes)
   290                           ; load TBLPTR registers with __pidataCOMRAM
   291  0008CE  0EB4               	movlw	low __pidataCOMRAM
   292  0008D0  6EF6               	movwf	tblptrl,c
   293  0008D2  0E0A               	movlw	high __pidataCOMRAM
   294  0008D4  6EF7               	movwf	tblptrh,c
   295  0008D6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   296  0008D8  6EF8               	movwf	tblptru,c
   297  0008DA  EE00  F04B         	lfsr	0,__pdataCOMRAM
   298  0008DE  EE10 F004          	lfsr	1,4
   299  0008E2                     copy_data0:
   300  0008E2  0009               	tblrd		*+
   301  0008E4  CFF5 FFEE          	movff	tablat,postinc0
   302  0008E8  50E5               	movf	postdec1,w,c
   303  0008EA  50E1               	movf	fsr1l,w,c
   304  0008EC  E1FA               	bnz	copy_data0
   305                           
   306                           ; Clear objects allocated to BANK0 (10 bytes)
   307  0008EE  EE00  F060         	lfsr	0,__pbssBANK0
   308  0008F2  0E0A               	movlw	10
   309  0008F4                     clear_0:
   310  0008F4  6AEE               	clrf	postinc0,c
   311  0008F6  06E8               	decf	wreg,f,c
   312  0008F8  E1FD               	bnz	clear_0
   313                           
   314                           ; Clear objects allocated to COMRAM (54 bytes)
   315  0008FA  EE00  F001         	lfsr	0,__pbssCOMRAM
   316  0008FE  0E36               	movlw	54
   317  000900                     clear_1:
   318  000900  6AEE               	clrf	postinc0,c
   319  000902  06E8               	decf	wreg,f,c
   320  000904  E1FD               	bnz	clear_1
   321  000906                     end_of_initialization:
   322                           	opt stack 0
   323  000906                     __end_of__initialization:
   324                           	opt stack 0
   325  000906  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   326  000908  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   327  00090A  0100               	movlb	0
   328  00090C  EF88  F004         	goto	_main	;jump to C main() function
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           postdec1	equ	0xFE5
   336                           fsr1l	equ	0xFE1
   337                           
   338                           	psect	bssCOMRAM
   339  000001                     __pbssCOMRAM:
   340                           	opt stack 0
   341  000001                     _DS_data:
   342                           	opt stack 0
   343  000001                     	ds	13
   344  00000E                     _sinyounai_DS_data:
   345                           	opt stack 0
   346  00000E                     	ds	13
   347  00001B                     ten_bit_test_unsignedint@F17526:
   348                           	opt stack 0
   349  00001B                     	ds	5
   350  000020                     ten_bit_test@F17522:
   351                           	opt stack 0
   352  000020                     	ds	3
   353  000023                     _csv_data:
   354                           	opt stack 0
   355  000023                     	ds	2
   356  000025                     CSV_timer_task@CSV_lib_count:
   357                           	opt stack 0
   358  000025                     	ds	2
   359  000027                     _CSV_lib_transmit_flag:
   360                           	opt stack 0
   361  000027                     	ds	2
   362  000029                     _CSV_lib_now_time:
   363                           	opt stack 0
   364  000029                     	ds	2
   365  00002B                     _CSV_lib_cycle_time:
   366                           	opt stack 0
   367  00002B                     	ds	2
   368  00002D                     _DS_communication_error_time:
   369                           	opt stack 0
   370  00002D                     	ds	2
   371  00002F                     _push_DS_data:
   372                           	opt stack 0
   373  00002F                     	ds	2
   374  000031                     _CSV_lib_enable:
   375                           	opt stack 0
   376  000031                     	ds	1
   377  000032                     read_ds_dual_de_gozaru@check_sum:
   378                           	opt stack 0
   379  000032                     	ds	1
   380  000033                     read_ds_dual_de_gozaru@mode:
   381                           	opt stack 0
   382  000033                     	ds	1
   383  000034                     read_ds_dual_de_gozaru@read_number:
   384                           	opt stack 0
   385  000034                     	ds	1
   386  000035                     _DS_read_stop:
   387                           	opt stack 0
   388  000035                     	ds	1
   389  000036                     _DS_uart_number:
   390                           	opt stack 0
   391  000036                     	ds	1
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           
   401                           	psect	dataCOMRAM
   402  00004B                     __pdataCOMRAM:
   403                           	opt stack 0
   404  00004B                     _before_DS_data:
   405                           	opt stack 0
   406  00004B                     	ds	2
   407  00004D                     read_ds_dual_de_gozaru@first_communication:
   408                           	opt stack 0
   409  00004D                     	ds	1
   410  00004E                     _DS_time_out:
   411                           	opt stack 0
   412  00004E                     	ds	1
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           postinc0	equ	0xFEE
   418                           wreg	equ	0xFE8
   419                           postdec1	equ	0xFE5
   420                           fsr1l	equ	0xFE1
   421                           
   422                           	psect	bssBANK0
   423  000060                     __pbssBANK0:
   424                           	opt stack 0
   425  000060                     _data:
   426                           	opt stack 0
   427  000060                     	ds	10
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	cstackBANK0
   438  00006A                     __pcstackBANK0:
   439                           	opt stack 0
   440  00006A                     ?_DS_RIGHT_LR_signed_VALUE:
   441                           	opt stack 0
   442  00006A                     ?_DS_LEFT_UD_signed_VALUE:
   443                           	opt stack 0
   444  00006A                     SPI_transfer@send_data:
   445                           	opt stack 0
   446  00006A                     enable_interrupts@data:
   447                           	opt stack 0
   448  00006A                     bit_test@bit_place:
   449                           	opt stack 0
   450  00006A                     output_LED5@num:
   451                           	opt stack 0
   452  00006A                     make_s_driver_ver1_send_data@pwm_value:
   453                           	opt stack 0
   454  00006A                     SPI_begin@data:
   455                           	opt stack 0
   456  00006A                     Serial1_begin@speed:
   457                           	opt stack 0
   458  00006A                     TIMER0_setup@data:
   459                           	opt stack 0
   460  00006A                     TIMER0_16bit_set_count@data:
   461                           	opt stack 0
   462  00006A                     TIMER1_setup@data:
   463                           	opt stack 0
   464  00006A                     TIMER1_set_count@data:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x0
   468  00006A                     	ds	1
   469  00006B                     ??_bit_test:
   470  00006B                     make_s_driver_ver1_send_data@mode:
   471                           	opt stack 0
   472  00006B                     s_driver1_set_value@temp:
   473                           	opt stack 0
   474  00006B                     s_driver2_set_value@temp:
   475                           	opt stack 0
   476  00006B                     s_driver3_set_value@temp:
   477                           	opt stack 0
   478  00006B                     s_driver4_set_value@temp:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x1
   482  00006B                     	ds	1
   483  00006C                     ??_DS_LEFT_UD_signed_VALUE:
   484  00006C                     Serial1_begin@data:
   485                           	opt stack 0
   486  00006C                     s_driver1_set_value@value:
   487                           	opt stack 0
   488  00006C                     s_driver2_set_value@value:
   489                           	opt stack 0
   490  00006C                     s_driver3_set_value@value:
   491                           	opt stack 0
   492  00006C                     s_driver4_set_value@value:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x2
   496  00006C                     	ds	1
   497  00006D                     bit_test@number:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x3
   501  00006D                     	ds	1
   502  00006E                     bit_test@i:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x4
   506  00006E                     	ds	1
   507  00006F                     ??_GOOD_de_gozaru:
   508                           
   509                           ; 1 bytes @ 0x5
   510  00006F                     	ds	1
   511  000070                     
   512                           ; 1 bytes @ 0x6
   513  000070                     	ds	1
   514  000071                     tblptru	equ	0xFF8
   515                           tblptrh	equ	0xFF7
   516                           tblptrl	equ	0xFF6
   517                           tablat	equ	0xFF5
   518                           postinc0	equ	0xFEE
   519                           wreg	equ	0xFE8
   520                           postdec1	equ	0xFE5
   521                           fsr1l	equ	0xFE1
   522                           
   523                           ; 1 bytes @ 0x7
   524                           
   525                           	psect	cstackCOMRAM
   526  000037                     __pcstackCOMRAM:
   527                           	opt stack 0
   528  000037                     i2TIMER0_16bit_set_count@data:
   529                           	opt stack 0
   530  000037                     i2TIMER1_set_count@data:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x0
   534  000037                     	ds	2
   535  000039                     ??_wood_isr:
   536  000039                     
   537                           ; 1 bytes @ 0x2
   538  000039                     	ds	18
   539                           tblptru	equ	0xFF8
   540                           tblptrh	equ	0xFF7
   541                           tblptrl	equ	0xFF6
   542                           tablat	equ	0xFF5
   543                           postinc0	equ	0xFEE
   544                           wreg	equ	0xFE8
   545                           postdec1	equ	0xFE5
   546                           fsr1l	equ	0xFE1
   547                           
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 42 in file "MELON PAN1_main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels required when called:    7
   573 ;; This function calls:
   574 ;;		_TIMER1_set_count
   575 ;;		_TIMER1_setup
   576 ;;		_enable_interrupts
   577 ;;		_pin_init
   578 ;;		_read_ds_dual_de_gozaru
   579 ;;		_read_ds_dual_init
   580 ;;		_spi_init
   581 ;; This function is called by:
   582 ;;		Startup code after reset
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text0
   587  000910                     __ptext0:
   588                           	opt stack 0
   589  000910                     _main:
   590                           	opt stack 24
   591                           
   592                           ;MELON PAN1_main.c: 44: pin_init();
   593                           
   594                           ;incstack = 0
   595  000910  EC1C  F002         	call	_pin_init	;wreg free
   596                           
   597                           ;MELON PAN1_main.c: 48: spi_init();
   598  000914  ECBA  F004         	call	_spi_init	;wreg free
   599                           
   600                           ;MELON PAN1_main.c: 49: read_ds_dual_init();
   601  000918  EC45  F004         	call	_read_ds_dual_init	;wreg free
   602                           
   603                           ;MELON PAN1_main.c: 51: TIMER1_setup(0x0100 | 0x20);
   604  00091C  0E01               	movlw	1
   605  00091E  0100               	movlb	0	; () banked
   606  000920  6F6B               	movwf	(TIMER1_setup@data+1)& (0+255),b
   607  000922  0E20               	movlw	32
   608  000924  6F6A               	movwf	TIMER1_setup@data& (0+255),b
   609  000926  EC25  F005         	call	_TIMER1_setup	;wreg free
   610                           
   611                           ;MELON PAN1_main.c: 52: TIMER1_set_count(25536);
   612  00092A  0E63               	movlw	99
   613  00092C  0100               	movlb	0	; () banked
   614  00092E  6F6B               	movwf	(TIMER1_set_count@data+1)& (0+255),b
   615  000930  0EC0               	movlw	192
   616  000932  6F6A               	movwf	TIMER1_set_count@data& (0+255),b
   617  000934  EC42  F005         	call	_TIMER1_set_count	;wreg free
   618                           
   619                           ;MELON PAN1_main.c: 53: enable_interrupts(2);
   620  000938  0E02               	movlw	2
   621  00093A  EC98  F002         	call	_enable_interrupts
   622  00093E                     
   623                           ;MELON PAN1_main.c: 67: read_ds_dual_de_gozaru();
   624  00093E  EC9D  F001         	call	_read_ds_dual_de_gozaru	;wreg free
   625  000942  D7FD               	goto	l1161
   626  000944                     __end_of_main:
   627                           	opt stack 0
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           postdec1	equ	0xFE5
   635                           fsr1l	equ	0xFE1
   636                           
   637 ;; *************** function _spi_init *****************
   638 ;; Defined at:
   639 ;;		line 205 in file "pindef.h"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    4
   660 ;; This function calls:
   661 ;;		_SPI_begin
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text1
   668  000974                     __ptext1:
   669                           	opt stack 0
   670  000974                     _spi_init:
   671                           	opt stack 26
   672                           
   673                           ;pindef.h: 206: SPI_begin(0x0000 | 0x01);
   674                           
   675                           ;incstack = 0
   676  000974  0E00               	movlw	0
   677  000976  0100               	movlb	0	; () banked
   678  000978  6F6B               	movwf	(SPI_begin@data+1)& (0+255),b
   679  00097A  0E01               	movlw	1
   680  00097C  6F6A               	movwf	SPI_begin@data& (0+255),b
   681  00097E  EC2E  F005         	call	_SPI_begin	;wreg free
   682                           
   683                           ;pindef.h: 207: LATAbits.LATA3=1;
   684  000982  8679               	bsf	3961,3,c	;volatile
   685                           
   686                           ;pindef.h: 208: LATAbits.LATA2=1;
   687  000984  8479               	bsf	3961,2,c	;volatile
   688                           
   689                           ;pindef.h: 209: LATAbits.LATA1=1;
   690  000986  8279               	bsf	3961,1,c	;volatile
   691                           
   692                           ;pindef.h: 210: LATAbits.LATA0=1;
   693  000988  8079               	bsf	3961,0,c	;volatile
   694                           
   695                           ;pindef.h: 211: LATHbits.LATH1=1;
   696  00098A  8280               	bsf	3968,1,c	;volatile
   697                           
   698                           ;pindef.h: 212: LATHbits.LATH0=1;
   699  00098C  8080               	bsf	3968,0,c	;volatile
   700                           
   701                           ;pindef.h: 213: LATAbits.LATA5=1;
   702  00098E  8A79               	bsf	3961,5,c	;volatile
   703                           
   704                           ;pindef.h: 214: LATAbits.LATA4=1;
   705  000990  8879               	bsf	3961,4,c	;volatile
   706                           
   707                           ;pindef.h: 215: LATGbits.LATG6=1;
   708  000992  8C7F               	bsf	3967,6,c	;volatile
   709                           
   710                           ;pindef.h: 216: LATGbits.LATG1=1;
   711  000994  827F               	bsf	3967,1,c	;volatile
   712                           
   713                           ;pindef.h: 217: LATGbits.LATG0=1;
   714  000996  807F               	bsf	3967,0,c	;volatile
   715                           
   716                           ;pindef.h: 218: LATEbits.LATE0=1;
   717  000998  807D               	bsf	3965,0,c	;volatile
   718                           
   719                           ;pindef.h: 219: LATEbits.LATE1=1;
   720  00099A  827D               	bsf	3965,1,c	;volatile
   721                           
   722                           ;pindef.h: 220: LATEbits.LATE2=1;
   723  00099C  847D               	bsf	3965,2,c	;volatile
   724  00099E  0012               	return		;funcret
   725  0009A0                     __end_of_spi_init:
   726                           	opt stack 0
   727                           tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           postinc0	equ	0xFEE
   732                           wreg	equ	0xFE8
   733                           postdec1	equ	0xFE5
   734                           fsr1l	equ	0xFE1
   735                           
   736 ;; *************** function _SPI_begin *****************
   737 ;; Defined at:
   738 ;;		line 383 in file "MELONPAN1_lib_ver1.20.h"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  data            2    0[BANK0 ] unsigned int 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;		None
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   752 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   755 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;Total ram usage:        2 bytes
   757 ;; Hardware stack levels used:    1
   758 ;; Hardware stack levels required when called:    3
   759 ;; This function calls:
   760 ;;		Nothing
   761 ;; This function is called by:
   762 ;;		_spi_init
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text2
   767  000A5C                     __ptext2:
   768                           	opt stack 0
   769  000A5C                     _SPI_begin:
   770                           	opt stack 26
   771                           
   772                           ;MELONPAN1_lib_ver1.20.h: 384: SSP1STAT=((char)(data>>8)) | 0x00;
   773                           
   774                           ;incstack = 0
   775  000A5C  0100               	movlb	0	; () banked
   776  000A5E  516B               	movf	(SPI_begin@data+1)& (0+255),w,b
   777  000A60  6E94               	movwf	3988,c	;volatile
   778                           
   779                           ; BSR set to: 0
   780                           ;MELONPAN1_lib_ver1.20.h: 385: SSP1CON1=((char)(data & 0x00ff)) | 0x20;
   781  000A62  516A               	movf	SPI_begin@data& (0+255),w,b
   782  000A64  0920               	iorlw	32
   783  000A66  6E95               	movwf	3989,c	;volatile
   784                           
   785                           ; BSR set to: 0
   786  000A68  0012               	return		;funcret
   787  000A6A                     __end_of_SPI_begin:
   788                           	opt stack 0
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           tblptrl	equ	0xFF6
   792                           tablat	equ	0xFF5
   793                           postinc0	equ	0xFEE
   794                           wreg	equ	0xFE8
   795                           postdec1	equ	0xFE5
   796                           fsr1l	equ	0xFE1
   797                           
   798 ;; *************** function _read_ds_dual_init *****************
   799 ;; Defined at:
   800 ;;		line 95 in file "ds_dual_wood.h"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, status,2, status,0, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   818 ;;Total ram usage:        0 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; Hardware stack levels required when called:    4
   821 ;; This function calls:
   822 ;;		_Serial1_begin
   823 ;;		_TIMER0_16bit_set_count
   824 ;;		_TIMER0_setup
   825 ;;		_enable_interrupts
   826 ;; This function is called by:
   827 ;;		_main
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text3
   832  00088A                     __ptext3:
   833                           	opt stack 0
   834  00088A                     _read_ds_dual_init:
   835                           	opt stack 26
   836                           
   837                           ;ds_dual_wood.h: 97: TIMER0_setup(0x10 | 0x4000 | 0x0300);
   838                           
   839                           ; BSR set to: 0
   840                           ;incstack = 0
   841  00088A  0E43               	movlw	67
   842  00088C  0100               	movlb	0	; () banked
   843  00088E  6F6B               	movwf	(TIMER0_setup@data+1)& (0+255),b
   844  000890  0E10               	movlw	16
   845  000892  6F6A               	movwf	TIMER0_setup@data& (0+255),b
   846  000894  EC35  F005         	call	_TIMER0_setup	;wreg free
   847                           
   848                           ;ds_dual_wood.h: 98: TIMER0_16bit_set_count(25536);
   849  000898  0E63               	movlw	99
   850  00089A  0100               	movlb	0	; () banked
   851  00089C  6F6B               	movwf	(TIMER0_16bit_set_count@data+1)& (0+255),b
   852  00089E  0EC0               	movlw	192
   853  0008A0  6F6A               	movwf	TIMER0_16bit_set_count@data& (0+255),b
   854  0008A2  EC3C  F005         	call	_TIMER0_16bit_set_count	;wreg free
   855                           
   856                           ;ds_dual_wood.h: 104: Serial1_begin(57600,0x00);
   857  0008A6  0EE1               	movlw	225
   858  0008A8  0100               	movlb	0	; () banked
   859  0008AA  6F6B               	movwf	(Serial1_begin@speed+1)& (0+255),b
   860  0008AC  0E00               	movlw	0
   861  0008AE  6F6A               	movwf	Serial1_begin@speed& (0+255),b
   862  0008B0  0E00               	movlw	0
   863  0008B2  6F6C               	movwf	Serial1_begin@data& (0+255),b
   864  0008B4  EC8E  F003         	call	_Serial1_begin	;wreg free
   865                           
   866                           ;ds_dual_wood.h: 105: TX1STAbits.TXEN=0;
   867  0008B8  9A9D               	bcf	3997,5,c	;volatile
   868                           
   869                           ;ds_dual_wood.h: 107: enable_interrupts(10);
   870  0008BA  0E0A               	movlw	10
   871  0008BC  EC98  F002         	call	_enable_interrupts
   872                           
   873                           ;ds_dual_wood.h: 108: enable_interrupts(1);
   874  0008C0  0E01               	movlw	1
   875  0008C2  EC98  F002         	call	_enable_interrupts
   876                           
   877                           ;ds_dual_wood.h: 109: enable_interrupts(0);
   878  0008C6  0E00               	movlw	0
   879  0008C8  EC98  F002         	call	_enable_interrupts
   880  0008CC  0012               	return		;funcret
   881  0008CE                     __end_of_read_ds_dual_init:
   882                           	opt stack 0
   883                           tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           postdec1	equ	0xFE5
   890                           fsr1l	equ	0xFE1
   891                           
   892 ;; *************** function _enable_interrupts *****************
   893 ;; Defined at:
   894 ;;		line 911 in file "MELONPAN1_lib_ver1.20.h"
   895 ;; Parameters:    Size  Location     Type
   896 ;;  data            1    wreg     unsigned char 
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  data            1    0[BANK0 ] unsigned char 
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   911 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;Total ram usage:        1 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    3
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_read_ds_dual_init
   919 ;;		_main
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text4
   924  000530                     __ptext4:
   925                           	opt stack 0
   926  000530                     _enable_interrupts:
   927                           	opt stack 26
   928                           
   929                           ;incstack = 0
   930                           ;enable_interrupts@data stored from wreg
   931  000530  0100               	movlb	0	; () banked
   932  000532  6F6A               	movwf	enable_interrupts@data& (0+255),b
   933                           
   934                           ;MELONPAN1_lib_ver1.20.h: 912: switch(data){
   935  000534  D043               	goto	l742
   936  000536                     l743:
   937                           
   938                           ; BSR set to: 0
   939                           ;MELONPAN1_lib_ver1.20.h: 914: INTCONbits.GIE=1;
   940  000536  8EF2               	bsf	intcon,7,c	;volatile
   941                           
   942                           ;MELONPAN1_lib_ver1.20.h: 915: break;
   943  000538  0012               	return	
   944  00053A                     l745:
   945                           
   946                           ; BSR set to: 0
   947                           ;MELONPAN1_lib_ver1.20.h: 917: INTCONbits.PEIE=1;
   948  00053A  8CF2               	bsf	intcon,6,c	;volatile
   949                           
   950                           ;MELONPAN1_lib_ver1.20.h: 918: PIR0bits.TMR0IF=0;
   951  00053C  010E               	movlb	14	; () banked
   952  00053E  9B33               	bcf	51,5,b	;volatile
   953                           
   954                           ;MELONPAN1_lib_ver1.20.h: 919: PIE0bits.TMR0IE=1;
   955  000540  8B29               	bsf	41,5,b	;volatile
   956                           
   957                           ;MELONPAN1_lib_ver1.20.h: 920: break;
   958  000542  0012               	return	
   959  000544                     l746:
   960                           
   961                           ; BSR set to: 0
   962                           ;MELONPAN1_lib_ver1.20.h: 922: INTCONbits.PEIE=1;
   963  000544  8CF2               	bsf	intcon,6,c	;volatile
   964                           
   965                           ;MELONPAN1_lib_ver1.20.h: 923: PIR5bits.TMR1IF=0;
   966  000546  010E               	movlb	14	; () banked
   967  000548  9138               	bcf	56,0,b	;volatile
   968                           
   969                           ;MELONPAN1_lib_ver1.20.h: 924: PIE5bits.TMR1IE=1;
   970  00054A  812E               	bsf	46,0,b	;volatile
   971                           
   972                           ;MELONPAN1_lib_ver1.20.h: 925: break;
   973  00054C  0012               	return	
   974  00054E                     l747:
   975                           
   976                           ; BSR set to: 0
   977                           ;MELONPAN1_lib_ver1.20.h: 927: INTCONbits.PEIE=1;
   978  00054E  8CF2               	bsf	intcon,6,c	;volatile
   979                           
   980                           ;MELONPAN1_lib_ver1.20.h: 928: PIR5bits.TMR3IF=0;
   981  000550  010E               	movlb	14	; () banked
   982  000552  9538               	bcf	56,2,b	;volatile
   983                           
   984                           ;MELONPAN1_lib_ver1.20.h: 929: PIE5bits.TMR3IE=1;
   985  000554  852E               	bsf	46,2,b	;volatile
   986                           
   987                           ;MELONPAN1_lib_ver1.20.h: 930: break;
   988  000556  0012               	return	
   989  000558                     l748:
   990                           
   991                           ; BSR set to: 0
   992                           ;MELONPAN1_lib_ver1.20.h: 932: INTCONbits.PEIE=1;
   993  000558  8CF2               	bsf	intcon,6,c	;volatile
   994                           
   995                           ;MELONPAN1_lib_ver1.20.h: 933: PIR5bits.TMR5IF=0;
   996  00055A  010E               	movlb	14	; () banked
   997  00055C  9938               	bcf	56,4,b	;volatile
   998                           
   999                           ;MELONPAN1_lib_ver1.20.h: 934: PIE5bits.TMR5IE=1;
  1000  00055E  892E               	bsf	46,4,b	;volatile
  1001                           
  1002                           ;MELONPAN1_lib_ver1.20.h: 935: break;
  1003  000560  0012               	return	
  1004  000562                     l749:
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;MELONPAN1_lib_ver1.20.h: 937: INTCONbits.PEIE=1;
  1008  000562  8CF2               	bsf	intcon,6,c	;volatile
  1009                           
  1010                           ;MELONPAN1_lib_ver1.20.h: 938: PIR5bits.TMR7IF=0;
  1011  000564  010E               	movlb	14	; () banked
  1012  000566  9D38               	bcf	56,6,b	;volatile
  1013                           
  1014                           ;MELONPAN1_lib_ver1.20.h: 939: PIE5bits.TMR7IE=1;
  1015  000568  8D2E               	bsf	46,6,b	;volatile
  1016                           
  1017                           ;MELONPAN1_lib_ver1.20.h: 940: break;
  1018  00056A  0012               	return	
  1019  00056C                     l750:
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;MELONPAN1_lib_ver1.20.h: 942: INTCONbits.PEIE=1;
  1023  00056C  8CF2               	bsf	intcon,6,c	;volatile
  1024                           
  1025                           ;MELONPAN1_lib_ver1.20.h: 943: PIR5bits.TMR2IF=0;
  1026  00056E  010E               	movlb	14	; () banked
  1027  000570  9338               	bcf	56,1,b	;volatile
  1028                           
  1029                           ;MELONPAN1_lib_ver1.20.h: 944: PIE5bits.TMR2IE=1;
  1030  000572  832E               	bsf	46,1,b	;volatile
  1031                           
  1032                           ;MELONPAN1_lib_ver1.20.h: 945: break;
  1033  000574  0012               	return	
  1034  000576                     l751:
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;MELONPAN1_lib_ver1.20.h: 947: INTCONbits.PEIE=1;
  1038  000576  8CF2               	bsf	intcon,6,c	;volatile
  1039                           
  1040                           ;MELONPAN1_lib_ver1.20.h: 948: PIR5bits.TMR4IF=0;
  1041  000578  010E               	movlb	14	; () banked
  1042  00057A  9738               	bcf	56,3,b	;volatile
  1043                           
  1044                           ;MELONPAN1_lib_ver1.20.h: 949: PIE5bits.TMR4IE=1;
  1045  00057C  872E               	bsf	46,3,b	;volatile
  1046                           
  1047                           ;MELONPAN1_lib_ver1.20.h: 950: break;
  1048  00057E  0012               	return	
  1049  000580                     l752:
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;MELONPAN1_lib_ver1.20.h: 952: INTCONbits.PEIE=1;
  1053  000580  8CF2               	bsf	intcon,6,c	;volatile
  1054                           
  1055                           ;MELONPAN1_lib_ver1.20.h: 953: PIR5bits.TMR6IF=0;
  1056  000582  010E               	movlb	14	; () banked
  1057  000584  9B38               	bcf	56,5,b	;volatile
  1058                           
  1059                           ;MELONPAN1_lib_ver1.20.h: 954: PIE5bits.TMR6IE=1;
  1060  000586  8B2E               	bsf	46,5,b	;volatile
  1061                           
  1062                           ;MELONPAN1_lib_ver1.20.h: 955: break;
  1063  000588  0012               	return	
  1064  00058A                     l753:
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;MELONPAN1_lib_ver1.20.h: 957: INTCONbits.PEIE=1;
  1068  00058A  8CF2               	bsf	intcon,6,c	;volatile
  1069                           
  1070                           ;MELONPAN1_lib_ver1.20.h: 958: PIR5bits.TMR8IF=0;
  1071  00058C  010E               	movlb	14	; () banked
  1072  00058E  9F38               	bcf	56,7,b	;volatile
  1073                           
  1074                           ;MELONPAN1_lib_ver1.20.h: 959: PIE5bits.TMR8IE=1;
  1075  000590  8F2E               	bsf	46,7,b	;volatile
  1076                           
  1077                           ;MELONPAN1_lib_ver1.20.h: 960: break;
  1078  000592  0012               	return	
  1079  000594                     l754:
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;MELONPAN1_lib_ver1.20.h: 962: INTCONbits.PEIE=1;
  1083  000594  8CF2               	bsf	intcon,6,c	;volatile
  1084                           
  1085                           ;MELONPAN1_lib_ver1.20.h: 963: PIE3bits.RC1IE=1;
  1086  000596  010E               	movlb	14	; () banked
  1087  000598  8B2C               	bsf	44,5,b	;volatile
  1088                           
  1089                           ;MELONPAN1_lib_ver1.20.h: 964: break;
  1090  00059A  0012               	return	
  1091  00059C                     l755:
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;MELONPAN1_lib_ver1.20.h: 966: INTCONbits.PEIE=1;
  1095  00059C  8CF2               	bsf	intcon,6,c	;volatile
  1096                           
  1097                           ;MELONPAN1_lib_ver1.20.h: 967: PIE3bits.RC2IE=1;
  1098  00059E  010E               	movlb	14	; () banked
  1099  0005A0  8F2C               	bsf	44,7,b	;volatile
  1100                           
  1101                           ;MELONPAN1_lib_ver1.20.h: 968: break;
  1102  0005A2  0012               	return	
  1103  0005A4                     l756:
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;MELONPAN1_lib_ver1.20.h: 970: INTCONbits.PEIE=1;
  1107  0005A4  8CF2               	bsf	intcon,6,c	;volatile
  1108                           
  1109                           ;MELONPAN1_lib_ver1.20.h: 971: PIE4bits.RC3IE=1;
  1110  0005A6  010E               	movlb	14	; () banked
  1111  0005A8  832D               	bsf	45,1,b	;volatile
  1112                           
  1113                           ;MELONPAN1_lib_ver1.20.h: 972: break;
  1114  0005AA  0012               	return	
  1115  0005AC                     l757:
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;MELONPAN1_lib_ver1.20.h: 974: INTCONbits.PEIE=1;
  1119  0005AC  8CF2               	bsf	intcon,6,c	;volatile
  1120                           
  1121                           ;MELONPAN1_lib_ver1.20.h: 975: PIE4bits.RC4IE=1;
  1122  0005AE  010E               	movlb	14	; () banked
  1123  0005B0  872D               	bsf	45,3,b	;volatile
  1124                           
  1125                           ;MELONPAN1_lib_ver1.20.h: 976: break;
  1126  0005B2  0012               	return	
  1127  0005B4                     l758:
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;MELONPAN1_lib_ver1.20.h: 978: INTCONbits.PEIE=1;
  1131  0005B4  8CF2               	bsf	intcon,6,c	;volatile
  1132                           
  1133                           ;MELONPAN1_lib_ver1.20.h: 979: PIE4bits.RC5IE=1;
  1134  0005B6  010E               	movlb	14	; () banked
  1135  0005B8  8B2D               	bsf	45,5,b	;volatile
  1136                           
  1137                           ; BSR set to: 14
  1138                           ;MELONPAN1_lib_ver1.20.h: 981: }
  1139                           
  1140                           ;MELONPAN1_lib_ver1.20.h: 980: break;
  1141  0005BA  0012               	return	
  1142  0005BC                     l742:
  1143                           
  1144                           ; BSR set to: 14
  1145  0005BC  0100               	movlb	0	; () banked
  1146  0005BE  516A               	movf	enable_interrupts@data& (0+255),w,b
  1147                           
  1148                           ; Switch size 1, requested type "space"
  1149                           ; Number of cases is 15, Range of values is 0 to 14
  1150                           ; switch strategies available:
  1151                           ; Name         Instructions Cycles
  1152                           ; simple_byte           46    24 (average)
  1153                           ;	Chosen strategy is simple_byte
  1154  0005C0  0A00               	xorlw	0	; case 0
  1155  0005C2  B4D8               	btfsc	status,2,c
  1156  0005C4  D7B8               	goto	l743
  1157  0005C6  0A01               	xorlw	1	; case 1
  1158  0005C8  B4D8               	btfsc	status,2,c
  1159  0005CA  D7B7               	goto	l745
  1160  0005CC  0A03               	xorlw	3	; case 2
  1161  0005CE  B4D8               	btfsc	status,2,c
  1162  0005D0  D7B9               	goto	l746
  1163  0005D2  0A01               	xorlw	1	; case 3
  1164  0005D4  B4D8               	btfsc	status,2,c
  1165  0005D6  D7CA               	goto	l750
  1166  0005D8  0A07               	xorlw	7	; case 4
  1167  0005DA  B4D8               	btfsc	status,2,c
  1168  0005DC  D7B8               	goto	l747
  1169  0005DE  0A01               	xorlw	1	; case 5
  1170  0005E0  B4D8               	btfsc	status,2,c
  1171  0005E2  D7C9               	goto	l751
  1172  0005E4  0A03               	xorlw	3	; case 6
  1173  0005E6  B4D8               	btfsc	status,2,c
  1174  0005E8  D7B7               	goto	l748
  1175  0005EA  0A01               	xorlw	1	; case 7
  1176  0005EC  B4D8               	btfsc	status,2,c
  1177  0005EE  D7C8               	goto	l752
  1178  0005F0  0A0F               	xorlw	15	; case 8
  1179  0005F2  B4D8               	btfsc	status,2,c
  1180  0005F4  D7B6               	goto	l749
  1181  0005F6  0A01               	xorlw	1	; case 9
  1182  0005F8  B4D8               	btfsc	status,2,c
  1183  0005FA  D7C7               	goto	l753
  1184  0005FC  0A03               	xorlw	3	; case 10
  1185  0005FE  B4D8               	btfsc	status,2,c
  1186  000600  D7C9               	goto	l754
  1187  000602  0A01               	xorlw	1	; case 11
  1188  000604  B4D8               	btfsc	status,2,c
  1189  000606  D7CA               	goto	l755
  1190  000608  0A07               	xorlw	7	; case 12
  1191  00060A  B4D8               	btfsc	status,2,c
  1192  00060C  D7CB               	goto	l756
  1193  00060E  0A01               	xorlw	1	; case 13
  1194  000610  B4D8               	btfsc	status,2,c
  1195  000612  D7CC               	goto	l757
  1196  000614  0A03               	xorlw	3	; case 14
  1197  000616  A4D8               	btfss	status,2,c
  1198  000618  0012               	return	
  1199  00061A  D7CC               	goto	l758
  1200  00061C                     __end_of_enable_interrupts:
  1201                           	opt stack 0
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           intcon	equ	0xFF2
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postdec1	equ	0xFE5
  1210                           fsr1l	equ	0xFE1
  1211                           status	equ	0xFD8
  1212                           
  1213 ;; *************** function _TIMER0_setup *****************
  1214 ;; Defined at:
  1215 ;;		line 708 in file "MELONPAN1_lib_ver1.20.h"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  data            2    0[BANK0 ] unsigned int 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;Total ram usage:        2 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    3
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_read_ds_dual_init
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text5
  1244  000A6A                     __ptext5:
  1245                           	opt stack 0
  1246  000A6A                     _TIMER0_setup:
  1247                           	opt stack 26
  1248                           
  1249                           ;MELONPAN1_lib_ver1.20.h: 709: T0CON1=(char)((data>>8) & 0xff);
  1250                           
  1251                           ;incstack = 0
  1252  000A6A  0100               	movlb	0	; () banked
  1253  000A6C  516B               	movf	(TIMER0_setup@data+1)& (0+255),w,b
  1254  000A6E  6ED6               	movwf	4054,c	;volatile
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;MELONPAN1_lib_ver1.20.h: 710: T0CON0=((char)(data & 0xff)) | 0x80;
  1258  000A70  516A               	movf	TIMER0_setup@data& (0+255),w,b
  1259  000A72  0980               	iorlw	128
  1260  000A74  6ED5               	movwf	4053,c	;volatile
  1261                           
  1262                           ; BSR set to: 0
  1263  000A76  0012               	return		;funcret
  1264  000A78                     __end_of_TIMER0_setup:
  1265                           	opt stack 0
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           intcon	equ	0xFF2
  1271                           postinc0	equ	0xFEE
  1272                           wreg	equ	0xFE8
  1273                           postdec1	equ	0xFE5
  1274                           fsr1l	equ	0xFE1
  1275                           status	equ	0xFD8
  1276                           
  1277 ;; *************** function _TIMER0_16bit_set_count *****************
  1278 ;; Defined at:
  1279 ;;		line 721 in file "MELONPAN1_lib_ver1.20.h"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  data            2    0[BANK0 ] unsigned int 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1293 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;Total ram usage:        2 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    3
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_read_ds_dual_init
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text6
  1308  000A78                     __ptext6:
  1309                           	opt stack 0
  1310  000A78                     _TIMER0_16bit_set_count:
  1311                           	opt stack 26
  1312                           
  1313                           ;MELONPAN1_lib_ver1.20.h: 722: TMR0H=(char)(data>>8);
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;incstack = 0
  1317  000A78  0100               	movlb	0	; () banked
  1318  000A7A  516B               	movf	(TIMER0_16bit_set_count@data+1)& (0+255),w,b
  1319  000A7C  6ED4               	movwf	4052,c	;volatile
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;MELONPAN1_lib_ver1.20.h: 723: TMR0L=(char)(data);
  1323  000A7E  C06A  FFD3         	movff	TIMER0_16bit_set_count@data,4051	;volatile
  1324                           
  1325                           ; BSR set to: 0
  1326  000A82  0012               	return		;funcret
  1327  000A84                     __end_of_TIMER0_16bit_set_count:
  1328                           	opt stack 0
  1329                           tblptru	equ	0xFF8
  1330                           tblptrh	equ	0xFF7
  1331                           tblptrl	equ	0xFF6
  1332                           tablat	equ	0xFF5
  1333                           intcon	equ	0xFF2
  1334                           postinc0	equ	0xFEE
  1335                           wreg	equ	0xFE8
  1336                           postdec1	equ	0xFE5
  1337                           fsr1l	equ	0xFE1
  1338                           status	equ	0xFD8
  1339                           
  1340 ;; *************** function _Serial1_begin *****************
  1341 ;; Defined at:
  1342 ;;		line 458 in file "MELONPAN1_lib_ver1.20.h"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  speed           2    0[BANK0 ] unsigned int 
  1345 ;;  data            1    2[BANK0 ] unsigned char 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1357 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1361 ;;Total ram usage:        3 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    3
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_read_ds_dual_init
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text7
  1372  00071C                     __ptext7:
  1373                           	opt stack 0
  1374  00071C                     _Serial1_begin:
  1375                           	opt stack 26
  1376                           
  1377                           ;MELONPAN1_lib_ver1.20.h: 462: }else if(speed==57600){
  1378                           
  1379                           ;MELONPAN1_lib_ver1.20.h: 461: SP1BRGL=0x8A;
  1380                           
  1381                           ;MELONPAN1_lib_ver1.20.h: 460: SP1BRGH=0x00;
  1382                           
  1383                           ;MELONPAN1_lib_ver1.20.h: 459: if(speed==115200){
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;incstack = 0
  1387  00071C  0EE1               	movlw	225
  1388  00071E  0100               	movlb	0	; () banked
  1389  000720  196B               	xorwf	(Serial1_begin@speed+1)& (0+255),w,b
  1390  000722  116A               	iorwf	Serial1_begin@speed& (0+255),w,b
  1391  000724  A4D8               	btfss	status,2,c
  1392  000726  D004               	goto	l458
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;MELONPAN1_lib_ver1.20.h: 463: SP1BRGH=0x01;
  1396  000728  0E01               	movlw	1
  1397  00072A  6E9B               	movwf	3995,c	;volatile
  1398                           
  1399                           ;MELONPAN1_lib_ver1.20.h: 464: SP1BRGL=0x15;
  1400  00072C  0E15               	movlw	21
  1401  00072E  D029               	goto	L5
  1402  000730                     l458:
  1403                           
  1404                           ; BSR set to: 0
  1405                           
  1406                           ; BSR set to: 0
  1407  000730  0E4B               	movlw	75
  1408  000732  196B               	xorwf	(Serial1_begin@speed+1)& (0+255),w,b
  1409  000734  116A               	iorwf	Serial1_begin@speed& (0+255),w,b
  1410  000736  A4D8               	btfss	status,2,c
  1411  000738  D004               	goto	l460
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;MELONPAN1_lib_ver1.20.h: 466: SP1BRGH=0x03;
  1415  00073A  0E03               	movlw	3
  1416  00073C  6E9B               	movwf	3995,c	;volatile
  1417                           
  1418                           ;MELONPAN1_lib_ver1.20.h: 467: SP1BRGL=0x40;
  1419  00073E  0E40               	movlw	64
  1420  000740  D020               	goto	L5
  1421  000742                     l460:
  1422                           
  1423                           ; BSR set to: 0
  1424                           
  1425                           ; BSR set to: 0
  1426  000742  0E80               	movlw	128
  1427  000744  196A               	xorwf	Serial1_begin@speed& (0+255),w,b
  1428  000746  E108               	bnz	l3758
  1429  000748  0E25               	movlw	37
  1430  00074A  196B               	xorwf	(Serial1_begin@speed+1)& (0+255),w,b
  1431  00074C  A4D8               	btfss	status,2,c
  1432  00074E  D004               	goto	l462
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;MELONPAN1_lib_ver1.20.h: 469: SP1BRGH=0x06;
  1436  000750  0E06               	movlw	6
  1437  000752  6E9B               	movwf	3995,c	;volatile
  1438                           
  1439                           ;MELONPAN1_lib_ver1.20.h: 470: SP1BRGL=0x82;
  1440  000754  0E82               	movlw	130
  1441  000756  D015               	goto	L5
  1442  000758                     l462:
  1443  000758                     l3758:
  1444                           
  1445                           ; BSR set to: 0
  1446  000758  0E60               	movlw	96
  1447  00075A  196A               	xorwf	Serial1_begin@speed& (0+255),w,b
  1448  00075C  E108               	bnz	l3762
  1449  00075E  0E09               	movlw	9
  1450  000760  196B               	xorwf	(Serial1_begin@speed+1)& (0+255),w,b
  1451  000762  A4D8               	btfss	status,2,c
  1452  000764  D004               	goto	l464
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;MELONPAN1_lib_ver1.20.h: 472: SP1BRGH=0x1A;
  1456  000766  0E1A               	movlw	26
  1457  000768  6E9B               	movwf	3995,c	;volatile
  1458                           
  1459                           ;MELONPAN1_lib_ver1.20.h: 473: SP1BRGL=0x0A;
  1460  00076A  0E0A               	movlw	10
  1461  00076C  D00A               	goto	L5
  1462  00076E                     l464:
  1463  00076E                     l3762:
  1464                           
  1465                           ; BSR set to: 0
  1466  00076E  0EB0               	movlw	176
  1467  000770  196A               	xorwf	Serial1_begin@speed& (0+255),w,b
  1468  000772  E108               	bnz	l457
  1469  000774  0E04               	movlw	4
  1470  000776  196B               	xorwf	(Serial1_begin@speed+1)& (0+255),w,b
  1471  000778  A4D8               	btfss	status,2,c
  1472  00077A  D004               	goto	l466
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;MELONPAN1_lib_ver1.20.h: 475: SP1BRGH=0x34;
  1476  00077C  0E34               	movlw	52
  1477  00077E  6E9B               	movwf	3995,c	;volatile
  1478                           
  1479                           ;MELONPAN1_lib_ver1.20.h: 476: SP1BRGL=0x14;
  1480  000780  0E14               	movlw	20
  1481  000782                     L5:
  1482  000782  6E9A               	movwf	3994,c	;volatile
  1483  000784                     l466:
  1484  000784                     l457:
  1485                           
  1486                           ;MELONPAN1_lib_ver1.20.h: 477: }
  1487                           ;MELONPAN1_lib_ver1.20.h: 479: TX1STA=0x24;
  1488  000784  0E24               	movlw	36
  1489  000786  6E9D               	movwf	3997,c	;volatile
  1490                           
  1491                           ;MELONPAN1_lib_ver1.20.h: 480: RC1STA=0x90;
  1492  000788  0E90               	movlw	144
  1493  00078A  6E9C               	movwf	3996,c	;volatile
  1494                           
  1495                           ;MELONPAN1_lib_ver1.20.h: 481: BAUD1CON=0x08 | data;
  1496  00078C  0100               	movlb	0	; () banked
  1497  00078E  516C               	movf	Serial1_begin@data& (0+255),w,b
  1498  000790  0908               	iorlw	8
  1499  000792  6E9E               	movwf	3998,c	;volatile
  1500                           
  1501                           ; BSR set to: 0
  1502  000794  0012               	return		;funcret
  1503  000796                     __end_of_Serial1_begin:
  1504                           	opt stack 0
  1505                           tblptru	equ	0xFF8
  1506                           tblptrh	equ	0xFF7
  1507                           tblptrl	equ	0xFF6
  1508                           tablat	equ	0xFF5
  1509                           intcon	equ	0xFF2
  1510                           postinc0	equ	0xFEE
  1511                           wreg	equ	0xFE8
  1512                           postdec1	equ	0xFE5
  1513                           fsr1l	equ	0xFE1
  1514                           status	equ	0xFD8
  1515                           
  1516 ;; *************** function _read_ds_dual_de_gozaru *****************
  1517 ;; Defined at:
  1518 ;;		line 130 in file "ds_dual_wood.h"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1534 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1535 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1536 ;;Total ram usage:        1 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    6
  1539 ;; This function calls:
  1540 ;;		_BAD_de_gozaru
  1541 ;;		_GOOD_de_gozaru
  1542 ;;		_always_de_gozaru
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text8
  1549  00033A                     __ptext8:
  1550                           	opt stack 0
  1551  00033A                     _read_ds_dual_de_gozaru:
  1552                           	opt stack 24
  1553                           
  1554                           ;ds_dual_wood.h: 131: static char read_number;
  1555                           ;ds_dual_wood.h: 132: static char mode=0;
  1556                           ;ds_dual_wood.h: 133: static char check_sum;
  1557                           ;ds_dual_wood.h: 134: static char first_communication=1;
  1558                           ;ds_dual_wood.h: 135: if(DS_read_stop){
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;incstack = 0
  1562  00033A  5035               	movf	_DS_read_stop,w,c
  1563  00033C  B4D8               	btfsc	status,2,c
  1564  00033E  D074               	goto	l1003
  1565                           
  1566                           ;ds_dual_wood.h: 136: DS_time_out=0;
  1567  000340  0E00               	movlw	0
  1568  000342  6E4E               	movwf	_DS_time_out,c
  1569                           
  1570                           ;ds_dual_wood.h: 137: switch(mode){
  1571  000344  D067               	goto	l1001
  1572  000346                     l1002:
  1573                           
  1574                           ;ds_dual_wood.h: 139: DS_data[0]=sinyounai_DS_data[0];
  1575  000346  C00E  F001         	movff	_sinyounai_DS_data,_DS_data
  1576                           
  1577                           ;ds_dual_wood.h: 140: read_number=1;
  1578  00034A  0E01               	movlw	1
  1579  00034C  6E34               	movwf	read_ds_dual_de_gozaru@read_number,c
  1580                           
  1581                           ;ds_dual_wood.h: 141: check_sum=0x0d;
  1582  00034E  0E0D               	movlw	13
  1583  000350  6E32               	movwf	read_ds_dual_de_gozaru@check_sum,c
  1584                           
  1585                           ;ds_dual_wood.h: 142: mode=1;
  1586  000352  0E01               	movlw	1
  1587  000354  D021               	goto	L6
  1588  000356                     
  1589                           ;ds_dual_wood.h: 145: DS_data[read_number]=sinyounai_DS_data[read_number];
  1590  000356  5034               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1591  000358  0D01               	mullw	1
  1592  00035A  0E0E               	movlw	low _sinyounai_DS_data
  1593  00035C  24F3               	addwf	prodl,w,c
  1594  00035E  6ED9               	movwf	fsr2l,c
  1595  000360  0E00               	movlw	high _sinyounai_DS_data
  1596  000362  20F4               	addwfc	prodh,w,c
  1597  000364  6EDA               	movwf	fsr2h,c
  1598  000366  5034               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1599  000368  0D01               	mullw	1
  1600  00036A  0E01               	movlw	low _DS_data
  1601  00036C  24F3               	addwf	prodl,w,c
  1602  00036E  6EE1               	movwf	fsr1l,c
  1603  000370  0E00               	movlw	high _DS_data
  1604  000372  20F4               	addwfc	prodh,w,c
  1605  000374  6EE2               	movwf	fsr1h,c
  1606  000376  CFDF FFE7          	movff	indf2,indf1
  1607                           
  1608                           ;ds_dual_wood.h: 146: check_sum+=DS_data[read_number];
  1609  00037A  5034               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1610  00037C  0D01               	mullw	1
  1611  00037E  0E01               	movlw	low _DS_data
  1612  000380  24F3               	addwf	prodl,w,c
  1613  000382  6ED9               	movwf	fsr2l,c
  1614  000384  0E00               	movlw	high _DS_data
  1615  000386  20F4               	addwfc	prodh,w,c
  1616  000388  6EDA               	movwf	fsr2h,c
  1617  00038A  50DF               	movf	indf2,w,c
  1618  00038C  2632               	addwf	read_ds_dual_de_gozaru@check_sum,f,c
  1619                           
  1620                           ;ds_dual_wood.h: 147: read_number++;
  1621  00038E  2A34               	incf	read_ds_dual_de_gozaru@read_number,f,c
  1622                           
  1623                           ;ds_dual_wood.h: 148: if(read_number>13-2){
  1624  000390  0E0B               	movlw	11
  1625  000392  6434               	cpfsgt	read_ds_dual_de_gozaru@read_number,c
  1626  000394  D049               	goto	l1003
  1627                           
  1628                           ;ds_dual_wood.h: 149: mode=2;
  1629  000396  0E02               	movlw	2
  1630  000398                     L6:
  1631  000398  6E33               	movwf	read_ds_dual_de_gozaru@mode,c
  1632                           
  1633                           ;ds_dual_wood.h: 150: }
  1634                           ;ds_dual_wood.h: 151: break;
  1635  00039A  D046               	goto	l1003
  1636  00039C                     
  1637                           ;ds_dual_wood.h: 153: DS_data[read_number]=sinyounai_DS_data[read_number];
  1638  00039C  5034               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1639  00039E  0D01               	mullw	1
  1640  0003A0  0E0E               	movlw	low _sinyounai_DS_data
  1641  0003A2  24F3               	addwf	prodl,w,c
  1642  0003A4  6ED9               	movwf	fsr2l,c
  1643  0003A6  0E00               	movlw	high _sinyounai_DS_data
  1644  0003A8  20F4               	addwfc	prodh,w,c
  1645  0003AA  6EDA               	movwf	fsr2h,c
  1646  0003AC  5034               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1647  0003AE  0D01               	mullw	1
  1648  0003B0  0E01               	movlw	low _DS_data
  1649  0003B2  24F3               	addwf	prodl,w,c
  1650  0003B4  6EE1               	movwf	fsr1l,c
  1651  0003B6  0E00               	movlw	high _DS_data
  1652  0003B8  20F4               	addwfc	prodh,w,c
  1653  0003BA  6EE2               	movwf	fsr1h,c
  1654  0003BC  CFDF FFE7          	movff	indf2,indf1
  1655                           
  1656                           ;ds_dual_wood.h: 154: DS_uart_number=0;
  1657  0003C0  0E00               	movlw	0
  1658  0003C2  6E36               	movwf	_DS_uart_number,c
  1659                           
  1660                           ;ds_dual_wood.h: 155: DS_read_stop=0;
  1661  0003C4  0E00               	movlw	0
  1662  0003C6  6E35               	movwf	_DS_read_stop,c
  1663                           
  1664                           ;ds_dual_wood.h: 156: mode=0;
  1665  0003C8  0E00               	movlw	0
  1666  0003CA  6E33               	movwf	read_ds_dual_de_gozaru@mode,c
  1667                           
  1668                           ;ds_dual_wood.h: 157: if(DS_data[read_number]==check_sum){
  1669  0003CC  5034               	movf	read_ds_dual_de_gozaru@read_number,w,c
  1670  0003CE  0D01               	mullw	1
  1671  0003D0  0E01               	movlw	low _DS_data
  1672  0003D2  24F3               	addwf	prodl,w,c
  1673  0003D4  6ED9               	movwf	fsr2l,c
  1674  0003D6  0E00               	movlw	high _DS_data
  1675  0003D8  20F4               	addwfc	prodh,w,c
  1676  0003DA  6EDA               	movwf	fsr2h,c
  1677  0003DC  5032               	movf	read_ds_dual_de_gozaru@check_sum,w,c
  1678  0003DE  18DE               	xorwf	postinc2,w,c
  1679  0003E0  A4D8               	btfss	status,2,c
  1680  0003E2  D015               	goto	l1007
  1681                           
  1682                           ;ds_dual_wood.h: 158: push_DS_data[0]=~before_DS_data[0] & DS_data[6];
  1683  0003E4  504B               	movf	_before_DS_data,w,c
  1684  0003E6  0AFF               	xorlw	255
  1685  0003E8  1407               	andwf	_DS_data+6,w,c
  1686  0003EA  6E2F               	movwf	_push_DS_data,c
  1687                           
  1688                           ;ds_dual_wood.h: 159: push_DS_data[1]=~before_DS_data[1] & DS_data[7];
  1689  0003EC  504C               	movf	_before_DS_data+1,w,c
  1690  0003EE  0AFF               	xorlw	255
  1691  0003F0  1408               	andwf	_DS_data+7,w,c
  1692  0003F2  6E30               	movwf	_push_DS_data+1,c
  1693                           
  1694                           ;ds_dual_wood.h: 160: before_DS_data[0]=DS_data[6];
  1695  0003F4  C007  F04B         	movff	_DS_data+6,_before_DS_data
  1696                           
  1697                           ;ds_dual_wood.h: 161: before_DS_data[1]=DS_data[7];
  1698  0003F8  C008  F04C         	movff	_DS_data+7,_before_DS_data+1
  1699                           
  1700                           ;ds_dual_wood.h: 162: DS_communication_error_time=0;
  1701  0003FC  0E00               	movlw	0
  1702  0003FE  6E2E               	movwf	_DS_communication_error_time+1,c
  1703  000400  0E00               	movlw	0
  1704  000402  6E2D               	movwf	_DS_communication_error_time,c
  1705                           
  1706                           ;ds_dual_wood.h: 163: first_communication=0;
  1707  000404  0E00               	movlw	0
  1708  000406  6E4D               	movwf	read_ds_dual_de_gozaru@first_communication,c
  1709                           
  1710                           ;ds_dual_wood.h: 164: GOOD_de_gozaru();
  1711  000408  EC6C  F000         	call	_GOOD_de_gozaru	;wreg free
  1712                           
  1713                           ;ds_dual_wood.h: 165: }else{
  1714  00040C  D00D               	goto	l1003
  1715  00040E                     l1007:
  1716                           
  1717                           ;ds_dual_wood.h: 166: BAD_de_gozaru();
  1718  00040E  EC57  F005         	call	_BAD_de_gozaru	;wreg free
  1719                           
  1720                           ;ds_dual_wood.h: 169: }
  1721                           
  1722                           ;ds_dual_wood.h: 167: }
  1723                           ;ds_dual_wood.h: 168: break;
  1724  000412  D00A               	goto	l1003
  1725  000414                     l1001:
  1726  000414  5033               	movf	read_ds_dual_de_gozaru@mode,w,c
  1727                           
  1728                           ; Switch size 1, requested type "space"
  1729                           ; Number of cases is 3, Range of values is 0 to 2
  1730                           ; switch strategies available:
  1731                           ; Name         Instructions Cycles
  1732                           ; simple_byte           10     6 (average)
  1733                           ;	Chosen strategy is simple_byte
  1734  000416  0A00               	xorlw	0	; case 0
  1735  000418  B4D8               	btfsc	status,2,c
  1736  00041A  D795               	goto	l1002
  1737  00041C  0A01               	xorlw	1	; case 1
  1738  00041E  B4D8               	btfsc	status,2,c
  1739  000420  D79A               	goto	l1004
  1740  000422  0A03               	xorlw	3	; case 2
  1741  000424  B4D8               	btfsc	status,2,c
  1742  000426  D7BA               	goto	l1006
  1743  000428                     l1003:
  1744                           
  1745                           ;ds_dual_wood.h: 170: }
  1746                           ;ds_dual_wood.h: 171: if(DS_time_out>10){
  1747  000428  0E0A               	movlw	10
  1748  00042A  644E               	cpfsgt	_DS_time_out,c
  1749  00042C  D002               	goto	l1009
  1750                           
  1751                           ;ds_dual_wood.h: 172: BAD_de_gozaru();
  1752  00042E  EC57  F005         	call	_BAD_de_gozaru	;wreg free
  1753  000432                     l1009:
  1754                           
  1755                           ;ds_dual_wood.h: 173: }
  1756                           ;ds_dual_wood.h: 182: always_de_gozaru();
  1757  000432  EC5C  F005         	call	_always_de_gozaru	;wreg free
  1758  000436  0012               	return		;funcret
  1759  000438                     __end_of_read_ds_dual_de_gozaru:
  1760                           	opt stack 0
  1761                           tblptru	equ	0xFF8
  1762                           tblptrh	equ	0xFF7
  1763                           tblptrl	equ	0xFF6
  1764                           tablat	equ	0xFF5
  1765                           prodh	equ	0xFF4
  1766                           prodl	equ	0xFF3
  1767                           intcon	equ	0xFF2
  1768                           postinc0	equ	0xFEE
  1769                           wreg	equ	0xFE8
  1770                           indf1	equ	0xFE7
  1771                           postdec1	equ	0xFE5
  1772                           fsr1h	equ	0xFE2
  1773                           fsr1l	equ	0xFE1
  1774                           indf2	equ	0xFDF
  1775                           postinc2	equ	0xFDE
  1776                           fsr2h	equ	0xFDA
  1777                           fsr2l	equ	0xFD9
  1778                           status	equ	0xFD8
  1779                           
  1780 ;; *************** function _always_de_gozaru *****************
  1781 ;; Defined at:
  1782 ;;		line 134 in file "MELON PAN1_main.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		None
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1800 ;;Total ram usage:        0 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    3
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_read_ds_dual_de_gozaru
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text9
  1811  000AB8                     __ptext9:
  1812                           	opt stack 0
  1813  000AB8                     _always_de_gozaru:
  1814                           	opt stack 26
  1815                           
  1816                           ;incstack = 0
  1817  000AB8  0012               	return		;funcret
  1818  000ABA                     __end_of_always_de_gozaru:
  1819                           	opt stack 0
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           prodh	equ	0xFF4
  1825                           prodl	equ	0xFF3
  1826                           intcon	equ	0xFF2
  1827                           postinc0	equ	0xFEE
  1828                           wreg	equ	0xFE8
  1829                           indf1	equ	0xFE7
  1830                           postdec1	equ	0xFE5
  1831                           fsr1h	equ	0xFE2
  1832                           fsr1l	equ	0xFE1
  1833                           indf2	equ	0xFDF
  1834                           postinc2	equ	0xFDE
  1835                           fsr2h	equ	0xFDA
  1836                           fsr2l	equ	0xFD9
  1837                           status	equ	0xFD8
  1838                           
  1839 ;; *************** function _GOOD_de_gozaru *****************
  1840 ;; Defined at:
  1841 ;;		line 71 in file "MELON PAN1_main.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;Total ram usage:        1 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    5
  1862 ;; This function calls:
  1863 ;;		_DS_LEFT_UD_signed_VALUE
  1864 ;;		_DS_RIGHT_LR_signed_VALUE
  1865 ;;		_bit_test
  1866 ;;		_make_s_driver_ver1_send_data
  1867 ;;		_output_LED5
  1868 ;;		_s_driver1_set_value
  1869 ;;		_s_driver2_set_value
  1870 ;;		_s_driver3_set_value
  1871 ;;		_s_driver4_set_value
  1872 ;; This function is called by:
  1873 ;;		_read_ds_dual_de_gozaru
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text10
  1878  0000D8                     __ptext10:
  1879                           	opt stack 0
  1880  0000D8                     _GOOD_de_gozaru:
  1881                           	opt stack 24
  1882                           
  1883                           ;MELON PAN1_main.c: 74: LATDbits.LATD0=0;
  1884                           
  1885                           ;incstack = 0
  1886  0000D8  907C               	bcf	3964,0,c	;volatile
  1887                           
  1888                           ;MELON PAN1_main.c: 75: LATHbits.LATH2=1;
  1889  0000DA  8480               	bsf	3968,2,c	;volatile
  1890                           
  1891                           ;MELON PAN1_main.c: 77: if(DS_data[1]==0x00){
  1892  0000DC  5002               	movf	_DS_data+1,w,c
  1893  0000DE  A4D8               	btfss	status,2,c
  1894  0000E0  D003               	goto	l1167
  1895                           
  1896                           ;MELON PAN1_main.c: 78: output_LED5(DS_data[3]);
  1897  0000E2  5004               	movf	_DS_data+3,w,c
  1898  0000E4  EC0E  F003         	call	_output_LED5
  1899  0000E8                     l1167:
  1900                           
  1901                           ;MELON PAN1_main.c: 79: }
  1902                           ;MELON PAN1_main.c: 81: if(bit_test(push_DS_data[1],5)){
  1903  0000E8  0E05               	movlw	5
  1904  0000EA  0100               	movlb	0	; () banked
  1905  0000EC  6F6A               	movwf	bit_test@bit_place& (0+255),b
  1906  0000EE  5030               	movf	_push_DS_data+1,w,c
  1907  0000F0  ECA2  F004         	call	_bit_test
  1908  0000F4  0900               	iorlw	0
  1909  0000F6  B4D8               	btfsc	status,2,c
  1910  0000F8  D010               	goto	l1168
  1911                           
  1912                           ;MELON PAN1_main.c: 82: LATHbits.LATH3=~LATHbits.LATH3;
  1913  0000FA  A680               	btfss	3968,3,c	;volatile
  1914  0000FC  D002               	goto	u2000
  1915  0000FE  0E01               	movlw	1
  1916  000100  D001               	goto	u2006
  1917  000102                     u2000:
  1918  000102  0E00               	movlw	0
  1919  000104                     u2006:
  1920  000104  0AFF               	xorlw	255
  1921  000106  0100               	movlb	0	; () banked
  1922  000108  6F6F               	movwf	??_GOOD_de_gozaru& (0+255),b
  1923  00010A  476F               	rlncf	??_GOOD_de_gozaru& (0+255),f,b
  1924  00010C  476F               	rlncf	??_GOOD_de_gozaru& (0+255),f,b
  1925  00010E  476F               	rlncf	??_GOOD_de_gozaru& (0+255),f,b
  1926  000110  5080               	movf	3968,w,c	;volatile
  1927  000112  196F               	xorwf	??_GOOD_de_gozaru& (0+255),w,b
  1928  000114  0BF7               	andlw	-9
  1929  000116  196F               	xorwf	??_GOOD_de_gozaru& (0+255),w,b
  1930  000118  6E80               	movwf	3968,c	;volatile
  1931  00011A                     l1168:
  1932                           
  1933                           ;MELON PAN1_main.c: 84: }
  1934                           ;MELON PAN1_main.c: 85: if(bit_test(push_DS_data[1],6)){
  1935                           
  1936                           ; BSR set to: 0
  1937  00011A  0E06               	movlw	6
  1938  00011C  0100               	movlb	0	; () banked
  1939  00011E  6F6A               	movwf	bit_test@bit_place& (0+255),b
  1940  000120  5030               	movf	_push_DS_data+1,w,c
  1941  000122  ECA2  F004         	call	_bit_test
  1942  000126  0900               	iorlw	0
  1943  000128  B4D8               	btfsc	status,2,c
  1944  00012A  D00F               	goto	l1169
  1945                           
  1946                           ;MELON PAN1_main.c: 86: LATDbits.LATD2=~LATDbits.LATD2;
  1947  00012C  A47C               	btfss	3964,2,c	;volatile
  1948  00012E  D002               	goto	u2020
  1949  000130  0E01               	movlw	1
  1950  000132  D001               	goto	u2026
  1951  000134                     u2020:
  1952  000134  0E00               	movlw	0
  1953  000136                     u2026:
  1954  000136  0AFF               	xorlw	255
  1955  000138  0100               	movlb	0	; () banked
  1956  00013A  6F6F               	movwf	??_GOOD_de_gozaru& (0+255),b
  1957  00013C  476F               	rlncf	??_GOOD_de_gozaru& (0+255),f,b
  1958  00013E  476F               	rlncf	??_GOOD_de_gozaru& (0+255),f,b
  1959  000140  507C               	movf	3964,w,c	;volatile
  1960  000142  196F               	xorwf	??_GOOD_de_gozaru& (0+255),w,b
  1961  000144  0BFB               	andlw	-5
  1962  000146  196F               	xorwf	??_GOOD_de_gozaru& (0+255),w,b
  1963  000148  6E7C               	movwf	3964,c	;volatile
  1964  00014A                     l1169:
  1965                           
  1966                           ;MELON PAN1_main.c: 88: }
  1967                           ;MELON PAN1_main.c: 90: if(DS_LEFT_UD_signed_VALUE() >= 127){
  1968                           
  1969                           ; BSR set to: 0
  1970  00014A  ECCB  F003         	call	_DS_LEFT_UD_signed_VALUE	;wreg free
  1971  00014E  0100               	movlb	0	; () banked
  1972  000150  BF6B               	btfsc	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),7,b
  1973  000152  D026               	goto	l1170
  1974  000154  516B               	movf	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),w,b
  1975  000156  E104               	bnz	u2030
  1976  000158  0E7F               	movlw	127
  1977  00015A  5D6A               	subwf	?_DS_LEFT_UD_signed_VALUE& (0+255),w,b
  1978  00015C  A0D8               	btfss	status,0,c
  1979  00015E  D020               	goto	l1170
  1980  000160                     u2030:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;MELON PAN1_main.c: 91: s_driver1_set_value(make_s_driver_ver1_send_data(2,100));
  1984  000160  0E64               	movlw	100
  1985  000162  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  1986  000164  0E02               	movlw	2
  1987  000166  ECFD  F003         	call	_make_s_driver_ver1_send_data
  1988  00016A  EC09  F005         	call	_s_driver1_set_value
  1989                           
  1990                           ;MELON PAN1_main.c: 92: s_driver2_set_value(make_s_driver_ver1_send_data(2,50));
  1991  00016E  0E32               	movlw	50
  1992  000170  0100               	movlb	0	; () banked
  1993  000172  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  1994  000174  0E02               	movlw	2
  1995  000176  ECFD  F003         	call	_make_s_driver_ver1_send_data
  1996  00017A  ECF6  F004         	call	_s_driver2_set_value
  1997                           
  1998                           ;MELON PAN1_main.c: 93: s_driver3_set_value(make_s_driver_ver1_send_data(2,100));
  1999  00017E  0E64               	movlw	100
  2000  000180  0100               	movlb	0	; () banked
  2001  000182  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2002  000184  0E02               	movlw	2
  2003  000186  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2004  00018A  ECE3  F004         	call	_s_driver3_set_value
  2005                           
  2006                           ;MELON PAN1_main.c: 94: s_driver4_set_value(make_s_driver_ver1_send_data(2,60));
  2007  00018E  0E3C               	movlw	60
  2008  000190  0100               	movlb	0	; () banked
  2009  000192  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2010  000194  0E02               	movlw	2
  2011  000196  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2012  00019A  ECD0  F004         	call	_s_driver4_set_value
  2013                           
  2014                           ;MELON PAN1_main.c: 95: }
  2015  00019E  0012               	return	
  2016  0001A0                     l1170:
  2017                           
  2018                           ;MELON PAN1_main.c: 96: else if(DS_LEFT_UD_signed_VALUE() <= -127){
  2019  0001A0  ECCB  F003         	call	_DS_LEFT_UD_signed_VALUE	;wreg free
  2020  0001A4  0100               	movlb	0	; () banked
  2021  0001A6  AF6B               	btfss	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),7,b
  2022  0001A8  D026               	goto	l1172
  2023  0001AA  0E82               	movlw	130
  2024  0001AC  5D6A               	subwf	?_DS_LEFT_UD_signed_VALUE& (0+255),w,b
  2025  0001AE  0EFF               	movlw	255
  2026  0001B0  596B               	subwfb	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),w,b
  2027  0001B2  B0D8               	btfsc	status,0,c
  2028  0001B4  D020               	goto	l1172
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;MELON PAN1_main.c: 97: s_driver1_set_value(make_s_driver_ver1_send_data(3,100));
  2032  0001B6  0E64               	movlw	100
  2033  0001B8  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2034  0001BA  0E03               	movlw	3
  2035  0001BC  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2036  0001C0  EC09  F005         	call	_s_driver1_set_value
  2037                           
  2038                           ;MELON PAN1_main.c: 98: s_driver2_set_value(make_s_driver_ver1_send_data(3,50));
  2039  0001C4  0E32               	movlw	50
  2040  0001C6  0100               	movlb	0	; () banked
  2041  0001C8  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2042  0001CA  0E03               	movlw	3
  2043  0001CC  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2044  0001D0  ECF6  F004         	call	_s_driver2_set_value
  2045                           
  2046                           ;MELON PAN1_main.c: 99: s_driver3_set_value(make_s_driver_ver1_send_data(3,100));
  2047  0001D4  0E64               	movlw	100
  2048  0001D6  0100               	movlb	0	; () banked
  2049  0001D8  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2050  0001DA  0E03               	movlw	3
  2051  0001DC  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2052  0001E0  ECE3  F004         	call	_s_driver3_set_value
  2053                           
  2054                           ;MELON PAN1_main.c: 100: s_driver4_set_value(make_s_driver_ver1_send_data(3,60));
  2055  0001E4  0E3C               	movlw	60
  2056  0001E6  0100               	movlb	0	; () banked
  2057  0001E8  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2058  0001EA  0E03               	movlw	3
  2059  0001EC  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2060  0001F0  ECD0  F004         	call	_s_driver4_set_value
  2061                           
  2062                           ;MELON PAN1_main.c: 101: }
  2063  0001F4  0012               	return	
  2064  0001F6                     l1172:
  2065                           
  2066                           ;MELON PAN1_main.c: 102: else if(DS_RIGHT_LR_signed_VALUE() <= -126){
  2067  0001F6  EC21  F004         	call	_DS_RIGHT_LR_signed_VALUE	;wreg free
  2068  0001FA  0100               	movlb	0	; () banked
  2069  0001FC  AF6B               	btfss	(?_DS_RIGHT_LR_signed_VALUE+1)& (0+255),7,b
  2070  0001FE  D026               	goto	l1174
  2071  000200  0E83               	movlw	131
  2072  000202  5D6A               	subwf	?_DS_RIGHT_LR_signed_VALUE& (0+255),w,b
  2073  000204  0EFF               	movlw	255
  2074  000206  596B               	subwfb	(?_DS_RIGHT_LR_signed_VALUE+1)& (0+255),w,b
  2075  000208  B0D8               	btfsc	status,0,c
  2076  00020A  D020               	goto	l1174
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;MELON PAN1_main.c: 103: s_driver1_set_value(make_s_driver_ver1_send_data(3,100));
  2080  00020C  0E64               	movlw	100
  2081  00020E  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2082  000210  0E03               	movlw	3
  2083  000212  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2084  000216  EC09  F005         	call	_s_driver1_set_value
  2085                           
  2086                           ;MELON PAN1_main.c: 104: s_driver2_set_value(make_s_driver_ver1_send_data(2,50));
  2087  00021A  0E32               	movlw	50
  2088  00021C  0100               	movlb	0	; () banked
  2089  00021E  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2090  000220  0E02               	movlw	2
  2091  000222  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2092  000226  ECF6  F004         	call	_s_driver2_set_value
  2093                           
  2094                           ;MELON PAN1_main.c: 105: s_driver3_set_value(make_s_driver_ver1_send_data(3,100));
  2095  00022A  0E64               	movlw	100
  2096  00022C  0100               	movlb	0	; () banked
  2097  00022E  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2098  000230  0E03               	movlw	3
  2099  000232  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2100  000236  ECE3  F004         	call	_s_driver3_set_value
  2101                           
  2102                           ;MELON PAN1_main.c: 106: s_driver4_set_value(make_s_driver_ver1_send_data(2,60));
  2103  00023A  0E3C               	movlw	60
  2104  00023C  0100               	movlb	0	; () banked
  2105  00023E  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2106  000240  0E02               	movlw	2
  2107  000242  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2108  000246  ECD0  F004         	call	_s_driver4_set_value
  2109                           
  2110                           ;MELON PAN1_main.c: 107: }
  2111  00024A  0012               	return	
  2112  00024C                     l1174:
  2113                           
  2114                           ;MELON PAN1_main.c: 108: else if(DS_RIGHT_LR_signed_VALUE() >= 127){
  2115  00024C  EC21  F004         	call	_DS_RIGHT_LR_signed_VALUE	;wreg free
  2116  000250  0100               	movlb	0	; () banked
  2117  000252  BF6B               	btfsc	(?_DS_RIGHT_LR_signed_VALUE+1)& (0+255),7,b
  2118  000254  D026               	goto	l1176
  2119  000256  516B               	movf	(?_DS_RIGHT_LR_signed_VALUE+1)& (0+255),w,b
  2120  000258  E104               	bnz	u2060
  2121  00025A  0E7F               	movlw	127
  2122  00025C  5D6A               	subwf	?_DS_RIGHT_LR_signed_VALUE& (0+255),w,b
  2123  00025E  A0D8               	btfss	status,0,c
  2124  000260  D020               	goto	l1176
  2125  000262                     u2060:
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;MELON PAN1_main.c: 109: s_driver1_set_value(make_s_driver_ver1_send_data(2,100));
  2129  000262  0E64               	movlw	100
  2130  000264  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2131  000266  0E02               	movlw	2
  2132  000268  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2133  00026C  EC09  F005         	call	_s_driver1_set_value
  2134                           
  2135                           ;MELON PAN1_main.c: 110: s_driver2_set_value(make_s_driver_ver1_send_data(3,50));
  2136  000270  0E32               	movlw	50
  2137  000272  0100               	movlb	0	; () banked
  2138  000274  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2139  000276  0E03               	movlw	3
  2140  000278  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2141  00027C  ECF6  F004         	call	_s_driver2_set_value
  2142                           
  2143                           ;MELON PAN1_main.c: 111: s_driver3_set_value(make_s_driver_ver1_send_data(2,100));
  2144  000280  0E64               	movlw	100
  2145  000282  0100               	movlb	0	; () banked
  2146  000284  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2147  000286  0E02               	movlw	2
  2148  000288  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2149  00028C  ECE3  F004         	call	_s_driver3_set_value
  2150                           
  2151                           ;MELON PAN1_main.c: 112: s_driver4_set_value(make_s_driver_ver1_send_data(3,60));
  2152  000290  0E3C               	movlw	60
  2153  000292  0100               	movlb	0	; () banked
  2154  000294  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2155  000296  0E03               	movlw	3
  2156  000298  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2157  00029C  ECD0  F004         	call	_s_driver4_set_value
  2158                           
  2159                           ;MELON PAN1_main.c: 113: }
  2160  0002A0  0012               	return	
  2161  0002A2                     l1176:
  2162                           
  2163                           ;MELON PAN1_main.c: 114: else if(DS_RIGHT_LR_signed_VALUE() <= -127){
  2164  0002A2  EC21  F004         	call	_DS_RIGHT_LR_signed_VALUE	;wreg free
  2165  0002A6  0100               	movlb	0	; () banked
  2166  0002A8  AF6B               	btfss	(?_DS_RIGHT_LR_signed_VALUE+1)& (0+255),7,b
  2167  0002AA  D026               	goto	l1178
  2168  0002AC  0E82               	movlw	130
  2169  0002AE  5D6A               	subwf	?_DS_RIGHT_LR_signed_VALUE& (0+255),w,b
  2170  0002B0  0EFF               	movlw	255
  2171  0002B2  596B               	subwfb	(?_DS_RIGHT_LR_signed_VALUE+1)& (0+255),w,b
  2172  0002B4  B0D8               	btfsc	status,0,c
  2173  0002B6  D020               	goto	l1178
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;MELON PAN1_main.c: 115: s_driver1_set_value(make_s_driver_ver1_send_data(3,100));
  2177  0002B8  0E64               	movlw	100
  2178  0002BA  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2179  0002BC  0E03               	movlw	3
  2180  0002BE  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2181  0002C2  EC09  F005         	call	_s_driver1_set_value
  2182                           
  2183                           ;MELON PAN1_main.c: 116: s_driver2_set_value(make_s_driver_ver1_send_data(2,50));
  2184  0002C6  0E32               	movlw	50
  2185  0002C8  0100               	movlb	0	; () banked
  2186  0002CA  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2187  0002CC  0E02               	movlw	2
  2188  0002CE  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2189  0002D2  ECF6  F004         	call	_s_driver2_set_value
  2190                           
  2191                           ;MELON PAN1_main.c: 117: s_driver3_set_value(make_s_driver_ver1_send_data(3,100));
  2192  0002D6  0E64               	movlw	100
  2193  0002D8  0100               	movlb	0	; () banked
  2194  0002DA  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2195  0002DC  0E03               	movlw	3
  2196  0002DE  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2197  0002E2  ECE3  F004         	call	_s_driver3_set_value
  2198                           
  2199                           ;MELON PAN1_main.c: 118: s_driver4_set_value(make_s_driver_ver1_send_data(2,60));
  2200  0002E6  0E3C               	movlw	60
  2201  0002E8  0100               	movlb	0	; () banked
  2202  0002EA  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2203  0002EC  0E02               	movlw	2
  2204  0002EE  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2205  0002F2  ECD0  F004         	call	_s_driver4_set_value
  2206                           
  2207                           ;MELON PAN1_main.c: 119: }
  2208  0002F6  0012               	return	
  2209  0002F8                     l1178:
  2210                           
  2211                           ;MELON PAN1_main.c: 120: else {
  2212                           ;MELON PAN1_main.c: 121: s_driver1_set_value(make_s_driver_ver1_send_data(1,0));
  2213  0002F8  0E00               	movlw	0
  2214  0002FA  0100               	movlb	0	; () banked
  2215  0002FC  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2216  0002FE  0E01               	movlw	1
  2217  000300  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2218  000304  EC09  F005         	call	_s_driver1_set_value
  2219                           
  2220                           ;MELON PAN1_main.c: 122: s_driver2_set_value(make_s_driver_ver1_send_data(1,0));
  2221  000308  0E00               	movlw	0
  2222  00030A  0100               	movlb	0	; () banked
  2223  00030C  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2224  00030E  0E01               	movlw	1
  2225  000310  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2226  000314  ECF6  F004         	call	_s_driver2_set_value
  2227                           
  2228                           ;MELON PAN1_main.c: 123: s_driver3_set_value(make_s_driver_ver1_send_data(1,0));
  2229  000318  0E00               	movlw	0
  2230  00031A  0100               	movlb	0	; () banked
  2231  00031C  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2232  00031E  0E01               	movlw	1
  2233  000320  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2234  000324  ECE3  F004         	call	_s_driver3_set_value
  2235                           
  2236                           ;MELON PAN1_main.c: 124: s_driver4_set_value(make_s_driver_ver1_send_data(1,0));
  2237  000328  0E00               	movlw	0
  2238  00032A  0100               	movlb	0	; () banked
  2239  00032C  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  2240  00032E  0E01               	movlw	1
  2241  000330  ECFD  F003         	call	_make_s_driver_ver1_send_data
  2242  000334  ECD0  F004         	call	_s_driver4_set_value
  2243  000338  0012               	return	
  2244  00033A                     __end_of_GOOD_de_gozaru:
  2245                           	opt stack 0
  2246                           tblptru	equ	0xFF8
  2247                           tblptrh	equ	0xFF7
  2248                           tblptrl	equ	0xFF6
  2249                           tablat	equ	0xFF5
  2250                           prodh	equ	0xFF4
  2251                           prodl	equ	0xFF3
  2252                           intcon	equ	0xFF2
  2253                           postinc0	equ	0xFEE
  2254                           wreg	equ	0xFE8
  2255                           indf1	equ	0xFE7
  2256                           postdec1	equ	0xFE5
  2257                           fsr1h	equ	0xFE2
  2258                           fsr1l	equ	0xFE1
  2259                           indf2	equ	0xFDF
  2260                           postinc2	equ	0xFDE
  2261                           fsr2h	equ	0xFDA
  2262                           fsr2l	equ	0xFD9
  2263                           status	equ	0xFD8
  2264                           
  2265 ;; *************** function _s_driver4_set_value *****************
  2266 ;; Defined at:
  2267 ;;		line 285 in file "pindef.h"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  value           1    wreg     unsigned char 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  value           1    2[BANK0 ] unsigned char 
  2272 ;;  temp            1    1[BANK0 ] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      unsigned char 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2283 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2285 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;Total ram usage:        2 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    4
  2289 ;; This function calls:
  2290 ;;		_SPI_transfer
  2291 ;; This function is called by:
  2292 ;;		_GOOD_de_gozaru
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text11
  2297  0009A0                     __ptext11:
  2298                           	opt stack 0
  2299  0009A0                     _s_driver4_set_value:
  2300                           	opt stack 24
  2301                           
  2302                           ;incstack = 0
  2303                           ;s_driver4_set_value@value stored from wreg
  2304  0009A0  0100               	movlb	0	; () banked
  2305  0009A2  6F6C               	movwf	s_driver4_set_value@value& (0+255),b
  2306                           
  2307                           ;pindef.h: 286: char temp;
  2308                           ;pindef.h: 287: LATAbits.LATA0=0;
  2309  0009A4  9079               	bcf	3961,0,c	;volatile
  2310                           
  2311                           ;pindef.h: 288: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2312  0009A6  0E35               	movlw	53
  2313  0009A8                     u2147:
  2314  0009A8  2EE8               	decfsz	wreg,f,c
  2315  0009AA  D7FE               	bra	u2147
  2316  0009AC  F000               	nop	
  2317                           
  2318                           ;pindef.h: 289: temp = SPI_transfer(value);
  2319  0009AE  0100               	movlb	0	; () banked
  2320  0009B0  516C               	movf	s_driver4_set_value@value& (0+255),w,b
  2321  0009B2  EC1C  F005         	call	_SPI_transfer
  2322  0009B6  0100               	movlb	0	; () banked
  2323  0009B8  6F6B               	movwf	s_driver4_set_value@temp& (0+255),b
  2324                           
  2325                           ;pindef.h: 290: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2326  0009BA  0E35               	movlw	53
  2327  0009BC                     u2157:
  2328  0009BC  2EE8               	decfsz	wreg,f,c
  2329  0009BE  D7FE               	bra	u2157
  2330  0009C0  F000               	nop	
  2331                           
  2332                           ;pindef.h: 291: LATAbits.LATA0=1;
  2333  0009C2  8079               	bsf	3961,0,c	;volatile
  2334  0009C4  0012               	return	
  2335  0009C6                     __end_of_s_driver4_set_value:
  2336                           	opt stack 0
  2337                           tblptru	equ	0xFF8
  2338                           tblptrh	equ	0xFF7
  2339                           tblptrl	equ	0xFF6
  2340                           tablat	equ	0xFF5
  2341                           prodh	equ	0xFF4
  2342                           prodl	equ	0xFF3
  2343                           intcon	equ	0xFF2
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           indf1	equ	0xFE7
  2347                           postdec1	equ	0xFE5
  2348                           fsr1h	equ	0xFE2
  2349                           fsr1l	equ	0xFE1
  2350                           indf2	equ	0xFDF
  2351                           postinc2	equ	0xFDE
  2352                           fsr2h	equ	0xFDA
  2353                           fsr2l	equ	0xFD9
  2354                           status	equ	0xFD8
  2355                           
  2356 ;; *************** function _s_driver3_set_value *****************
  2357 ;; Defined at:
  2358 ;;		line 275 in file "pindef.h"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  value           1    wreg     unsigned char 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  value           1    2[BANK0 ] unsigned char 
  2363 ;;  temp            1    1[BANK0 ] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      unsigned char 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2376 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2377 ;;Total ram usage:        2 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    4
  2380 ;; This function calls:
  2381 ;;		_SPI_transfer
  2382 ;; This function is called by:
  2383 ;;		_GOOD_de_gozaru
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text12
  2388  0009C6                     __ptext12:
  2389                           	opt stack 0
  2390  0009C6                     _s_driver3_set_value:
  2391                           	opt stack 24
  2392                           
  2393                           ;incstack = 0
  2394                           ;s_driver3_set_value@value stored from wreg
  2395  0009C6  0100               	movlb	0	; () banked
  2396  0009C8  6F6C               	movwf	s_driver3_set_value@value& (0+255),b
  2397                           
  2398                           ;pindef.h: 276: char temp;
  2399                           ;pindef.h: 277: LATAbits.LATA1=0;
  2400  0009CA  9279               	bcf	3961,1,c	;volatile
  2401                           
  2402                           ;pindef.h: 278: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2403  0009CC  0E35               	movlw	53
  2404  0009CE                     u2167:
  2405  0009CE  2EE8               	decfsz	wreg,f,c
  2406  0009D0  D7FE               	bra	u2167
  2407  0009D2  F000               	nop	
  2408                           
  2409                           ;pindef.h: 279: temp = SPI_transfer(value);
  2410  0009D4  0100               	movlb	0	; () banked
  2411  0009D6  516C               	movf	s_driver3_set_value@value& (0+255),w,b
  2412  0009D8  EC1C  F005         	call	_SPI_transfer
  2413  0009DC  0100               	movlb	0	; () banked
  2414  0009DE  6F6B               	movwf	s_driver3_set_value@temp& (0+255),b
  2415                           
  2416                           ;pindef.h: 280: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2417  0009E0  0E35               	movlw	53
  2418  0009E2                     u2177:
  2419  0009E2  2EE8               	decfsz	wreg,f,c
  2420  0009E4  D7FE               	bra	u2177
  2421  0009E6  F000               	nop	
  2422                           
  2423                           ;pindef.h: 281: LATAbits.LATA1=1;
  2424  0009E8  8279               	bsf	3961,1,c	;volatile
  2425  0009EA  0012               	return	
  2426  0009EC                     __end_of_s_driver3_set_value:
  2427                           	opt stack 0
  2428                           tblptru	equ	0xFF8
  2429                           tblptrh	equ	0xFF7
  2430                           tblptrl	equ	0xFF6
  2431                           tablat	equ	0xFF5
  2432                           prodh	equ	0xFF4
  2433                           prodl	equ	0xFF3
  2434                           intcon	equ	0xFF2
  2435                           postinc0	equ	0xFEE
  2436                           wreg	equ	0xFE8
  2437                           indf1	equ	0xFE7
  2438                           postdec1	equ	0xFE5
  2439                           fsr1h	equ	0xFE2
  2440                           fsr1l	equ	0xFE1
  2441                           indf2	equ	0xFDF
  2442                           postinc2	equ	0xFDE
  2443                           fsr2h	equ	0xFDA
  2444                           fsr2l	equ	0xFD9
  2445                           status	equ	0xFD8
  2446                           
  2447 ;; *************** function _s_driver2_set_value *****************
  2448 ;; Defined at:
  2449 ;;		line 265 in file "pindef.h"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  value           1    wreg     unsigned char 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  value           1    2[BANK0 ] unsigned char 
  2454 ;;  temp            1    1[BANK0 ] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      unsigned char 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2467 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;Total ram usage:        2 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    4
  2471 ;; This function calls:
  2472 ;;		_SPI_transfer
  2473 ;; This function is called by:
  2474 ;;		_GOOD_de_gozaru
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text13
  2479  0009EC                     __ptext13:
  2480                           	opt stack 0
  2481  0009EC                     _s_driver2_set_value:
  2482                           	opt stack 24
  2483                           
  2484                           ;incstack = 0
  2485                           ;s_driver2_set_value@value stored from wreg
  2486  0009EC  0100               	movlb	0	; () banked
  2487  0009EE  6F6C               	movwf	s_driver2_set_value@value& (0+255),b
  2488                           
  2489                           ;pindef.h: 266: char temp;
  2490                           ;pindef.h: 267: LATAbits.LATA2=0;
  2491  0009F0  9479               	bcf	3961,2,c	;volatile
  2492                           
  2493                           ;pindef.h: 268: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2494  0009F2  0E35               	movlw	53
  2495  0009F4                     u2187:
  2496  0009F4  2EE8               	decfsz	wreg,f,c
  2497  0009F6  D7FE               	bra	u2187
  2498  0009F8  F000               	nop	
  2499                           
  2500                           ;pindef.h: 269: temp = SPI_transfer(value);
  2501  0009FA  0100               	movlb	0	; () banked
  2502  0009FC  516C               	movf	s_driver2_set_value@value& (0+255),w,b
  2503  0009FE  EC1C  F005         	call	_SPI_transfer
  2504  000A02  0100               	movlb	0	; () banked
  2505  000A04  6F6B               	movwf	s_driver2_set_value@temp& (0+255),b
  2506                           
  2507                           ;pindef.h: 270: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2508  000A06  0E35               	movlw	53
  2509  000A08                     u2197:
  2510  000A08  2EE8               	decfsz	wreg,f,c
  2511  000A0A  D7FE               	bra	u2197
  2512  000A0C  F000               	nop	
  2513                           
  2514                           ;pindef.h: 271: LATAbits.LATA2=1;
  2515  000A0E  8479               	bsf	3961,2,c	;volatile
  2516  000A10  0012               	return	
  2517  000A12                     __end_of_s_driver2_set_value:
  2518                           	opt stack 0
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           prodh	equ	0xFF4
  2524                           prodl	equ	0xFF3
  2525                           intcon	equ	0xFF2
  2526                           postinc0	equ	0xFEE
  2527                           wreg	equ	0xFE8
  2528                           indf1	equ	0xFE7
  2529                           postdec1	equ	0xFE5
  2530                           fsr1h	equ	0xFE2
  2531                           fsr1l	equ	0xFE1
  2532                           indf2	equ	0xFDF
  2533                           postinc2	equ	0xFDE
  2534                           fsr2h	equ	0xFDA
  2535                           fsr2l	equ	0xFD9
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function _s_driver1_set_value *****************
  2539 ;; Defined at:
  2540 ;;		line 255 in file "pindef.h"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  value           1    wreg     unsigned char 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  value           1    2[BANK0 ] unsigned char 
  2545 ;;  temp            1    1[BANK0 ] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      unsigned char 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2556 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2558 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2559 ;;Total ram usage:        2 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    4
  2562 ;; This function calls:
  2563 ;;		_SPI_transfer
  2564 ;; This function is called by:
  2565 ;;		_GOOD_de_gozaru
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text14
  2570  000A12                     __ptext14:
  2571                           	opt stack 0
  2572  000A12                     _s_driver1_set_value:
  2573                           	opt stack 24
  2574                           
  2575                           ;incstack = 0
  2576                           ;s_driver1_set_value@value stored from wreg
  2577  000A12  0100               	movlb	0	; () banked
  2578  000A14  6F6C               	movwf	s_driver1_set_value@value& (0+255),b
  2579                           
  2580                           ;pindef.h: 256: char temp;
  2581                           ;pindef.h: 257: LATAbits.LATA3=0;
  2582  000A16  9679               	bcf	3961,3,c	;volatile
  2583                           
  2584                           ;pindef.h: 258: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2585  000A18  0E35               	movlw	53
  2586  000A1A                     u2207:
  2587  000A1A  2EE8               	decfsz	wreg,f,c
  2588  000A1C  D7FE               	bra	u2207
  2589  000A1E  F000               	nop	
  2590                           
  2591                           ;pindef.h: 259: temp = SPI_transfer(value);
  2592  000A20  0100               	movlb	0	; () banked
  2593  000A22  516C               	movf	s_driver1_set_value@value& (0+255),w,b
  2594  000A24  EC1C  F005         	call	_SPI_transfer
  2595  000A28  0100               	movlb	0	; () banked
  2596  000A2A  6F6B               	movwf	s_driver1_set_value@temp& (0+255),b
  2597                           
  2598                           ;pindef.h: 260: _delay((unsigned long)((10)*(64000000/4000000.0)));
  2599  000A2C  0E35               	movlw	53
  2600  000A2E                     u2217:
  2601  000A2E  2EE8               	decfsz	wreg,f,c
  2602  000A30  D7FE               	bra	u2217
  2603  000A32  F000               	nop	
  2604                           
  2605                           ;pindef.h: 261: LATAbits.LATA3=1;
  2606  000A34  8679               	bsf	3961,3,c	;volatile
  2607  000A36  0012               	return	
  2608  000A38                     __end_of_s_driver1_set_value:
  2609                           	opt stack 0
  2610                           tblptru	equ	0xFF8
  2611                           tblptrh	equ	0xFF7
  2612                           tblptrl	equ	0xFF6
  2613                           tablat	equ	0xFF5
  2614                           prodh	equ	0xFF4
  2615                           prodl	equ	0xFF3
  2616                           intcon	equ	0xFF2
  2617                           postinc0	equ	0xFEE
  2618                           wreg	equ	0xFE8
  2619                           indf1	equ	0xFE7
  2620                           postdec1	equ	0xFE5
  2621                           fsr1h	equ	0xFE2
  2622                           fsr1l	equ	0xFE1
  2623                           indf2	equ	0xFDF
  2624                           postinc2	equ	0xFDE
  2625                           fsr2h	equ	0xFDA
  2626                           fsr2l	equ	0xFD9
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _SPI_transfer *****************
  2630 ;; Defined at:
  2631 ;;		line 392 in file "MELONPAN1_lib_ver1.20.h"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  send_data       1    wreg     unsigned char 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  send_data       1    0[BANK0 ] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      unsigned char 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2649 ;;Total ram usage:        1 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    3
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_s_driver1_set_value
  2656 ;;		_s_driver2_set_value
  2657 ;;		_s_driver3_set_value
  2658 ;;		_s_driver4_set_value
  2659 ;;		_s_driver5_set_value
  2660 ;;		_s_driver6_set_value
  2661 ;;		_s_driver7_set_value
  2662 ;;		_s_driver8_set_value
  2663 ;;		_s_driver9_set_value
  2664 ;;		_s_driver10_set_value
  2665 ;;		_s_driver11_set_value
  2666 ;;		_s_driver12_set_value
  2667 ;;		_s_driver13_set_value
  2668 ;;		_s_driver14_set_value
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text15
  2673  000A38                     __ptext15:
  2674                           	opt stack 0
  2675  000A38                     _SPI_transfer:
  2676                           	opt stack 24
  2677                           
  2678                           ;incstack = 0
  2679                           ;SPI_transfer@send_data stored from wreg
  2680  000A38  0100               	movlb	0	; () banked
  2681  000A3A  6F6A               	movwf	SPI_transfer@send_data& (0+255),b
  2682                           
  2683                           ;MELONPAN1_lib_ver1.20.h: 394: SSP1CON1bits.WCOL = 0;
  2684  000A3C  9E95               	bcf	3989,7,c	;volatile
  2685                           
  2686                           ;MELONPAN1_lib_ver1.20.h: 395: SSP1BUF = send_data;
  2687  000A3E  C06A  FF91         	movff	SPI_transfer@send_data,3985	;volatile
  2688  000A42  A094               	btfss	3988,0,c	;volatile
  2689  000A44  D7FE               	goto	l403
  2690                           
  2691                           ;MELONPAN1_lib_ver1.20.h: 397: return (SSP1BUF);
  2692  000A46  5091               	movf	3985,w,c	;volatile
  2693  000A48  0012               	return		;funcret
  2694  000A4A                     __end_of_SPI_transfer:
  2695                           	opt stack 0
  2696                           tblptru	equ	0xFF8
  2697                           tblptrh	equ	0xFF7
  2698                           tblptrl	equ	0xFF6
  2699                           tablat	equ	0xFF5
  2700                           prodh	equ	0xFF4
  2701                           prodl	equ	0xFF3
  2702                           intcon	equ	0xFF2
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           indf1	equ	0xFE7
  2706                           postdec1	equ	0xFE5
  2707                           fsr1h	equ	0xFE2
  2708                           fsr1l	equ	0xFE1
  2709                           indf2	equ	0xFDF
  2710                           postinc2	equ	0xFDE
  2711                           fsr2h	equ	0xFDA
  2712                           fsr2l	equ	0xFD9
  2713                           status	equ	0xFD8
  2714                           
  2715 ;; *************** function _output_LED5 *****************
  2716 ;; Defined at:
  2717 ;;		line 151 in file "pindef.h"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  num             1    wreg     unsigned char 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  num             1    0[BANK0 ] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2732 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2735 ;;Total ram usage:        1 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    3
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_GOOD_de_gozaru
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text16
  2746  00061C                     __ptext16:
  2747                           	opt stack 0
  2748  00061C                     _output_LED5:
  2749                           	opt stack 25
  2750                           
  2751                           ;incstack = 0
  2752                           ;output_LED5@num stored from wreg
  2753  00061C  0100               	movlb	0	; () banked
  2754  00061E  6F6A               	movwf	output_LED5@num& (0+255),b
  2755                           
  2756                           ;pindef.h: 152: switch(num){
  2757  000620  D02A               	goto	l885
  2758  000622                     l886:
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;pindef.h: 154: LATEbits.LATE3=0;
  2762  000622  967D               	bcf	3965,3,c	;volatile
  2763                           
  2764                           ;pindef.h: 155: LATEbits.LATE4=0;
  2765  000624  987D               	bcf	3965,4,c	;volatile
  2766                           
  2767                           ;pindef.h: 156: LATEbits.LATE5=0;
  2768  000626  9A7D               	bcf	3965,5,c	;volatile
  2769                           
  2770                           ;pindef.h: 157: LATEbits.LATE6=0;
  2771  000628  9C7D               	bcf	3965,6,c	;volatile
  2772                           
  2773                           ;pindef.h: 158: LATEbits.LATE7=0;
  2774  00062A  9E7D               	bcf	3965,7,c	;volatile
  2775                           
  2776                           ;pindef.h: 159: break;
  2777  00062C  0012               	return	
  2778  00062E                     l888:
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;pindef.h: 161: LATEbits.LATE3=0;
  2782  00062E  967D               	bcf	3965,3,c	;volatile
  2783                           
  2784                           ;pindef.h: 162: LATEbits.LATE4=0;
  2785  000630  987D               	bcf	3965,4,c	;volatile
  2786                           
  2787                           ;pindef.h: 163: LATEbits.LATE5=0;
  2788  000632  9A7D               	bcf	3965,5,c	;volatile
  2789                           
  2790                           ;pindef.h: 164: LATEbits.LATE6=0;
  2791  000634  9C7D               	bcf	3965,6,c	;volatile
  2792                           
  2793                           ;pindef.h: 165: LATEbits.LATE7=1;
  2794  000636  8E7D               	bsf	3965,7,c	;volatile
  2795                           
  2796                           ;pindef.h: 166: break;
  2797  000638  0012               	return	
  2798  00063A                     l889:
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;pindef.h: 168: LATEbits.LATE3=0;
  2802  00063A  967D               	bcf	3965,3,c	;volatile
  2803                           
  2804                           ;pindef.h: 169: LATEbits.LATE4=0;
  2805  00063C  987D               	bcf	3965,4,c	;volatile
  2806                           
  2807                           ;pindef.h: 170: LATEbits.LATE5=0;
  2808  00063E  9A7D               	bcf	3965,5,c	;volatile
  2809                           
  2810                           ;pindef.h: 171: LATEbits.LATE6=1;
  2811  000640  8C7D               	bsf	3965,6,c	;volatile
  2812                           
  2813                           ;pindef.h: 172: LATEbits.LATE7=1;
  2814  000642  8E7D               	bsf	3965,7,c	;volatile
  2815                           
  2816                           ;pindef.h: 173: break;
  2817  000644  0012               	return	
  2818  000646                     l890:
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;pindef.h: 175: LATEbits.LATE3=0;
  2822  000646  967D               	bcf	3965,3,c	;volatile
  2823                           
  2824                           ;pindef.h: 176: LATEbits.LATE4=0;
  2825  000648  987D               	bcf	3965,4,c	;volatile
  2826                           
  2827                           ;pindef.h: 177: LATEbits.LATE5=1;
  2828  00064A  8A7D               	bsf	3965,5,c	;volatile
  2829                           
  2830                           ;pindef.h: 178: LATEbits.LATE6=1;
  2831  00064C  8C7D               	bsf	3965,6,c	;volatile
  2832                           
  2833                           ;pindef.h: 179: LATEbits.LATE7=1;
  2834  00064E  8E7D               	bsf	3965,7,c	;volatile
  2835                           
  2836                           ;pindef.h: 180: break;
  2837  000650  0012               	return	
  2838  000652                     l891:
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;pindef.h: 182: LATEbits.LATE3=0;
  2842  000652  967D               	bcf	3965,3,c	;volatile
  2843                           
  2844                           ;pindef.h: 183: LATEbits.LATE4=1;
  2845  000654  887D               	bsf	3965,4,c	;volatile
  2846                           
  2847                           ;pindef.h: 184: LATEbits.LATE5=1;
  2848  000656  8A7D               	bsf	3965,5,c	;volatile
  2849                           
  2850                           ;pindef.h: 185: LATEbits.LATE6=1;
  2851  000658  8C7D               	bsf	3965,6,c	;volatile
  2852                           
  2853                           ;pindef.h: 186: LATEbits.LATE7=1;
  2854  00065A  8E7D               	bsf	3965,7,c	;volatile
  2855                           
  2856                           ;pindef.h: 187: break;
  2857  00065C  0012               	return	
  2858  00065E                     l892:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;pindef.h: 189: LATEbits.LATE3=1;
  2862  00065E  867D               	bsf	3965,3,c	;volatile
  2863                           
  2864                           ;pindef.h: 190: LATEbits.LATE4=1;
  2865  000660  887D               	bsf	3965,4,c	;volatile
  2866                           
  2867                           ;pindef.h: 191: LATEbits.LATE5=1;
  2868  000662  8A7D               	bsf	3965,5,c	;volatile
  2869                           
  2870                           ;pindef.h: 192: LATEbits.LATE6=1;
  2871  000664  8C7D               	bsf	3965,6,c	;volatile
  2872                           
  2873                           ;pindef.h: 193: LATEbits.LATE7=1;
  2874  000666  8E7D               	bsf	3965,7,c	;volatile
  2875                           
  2876                           ;pindef.h: 194: break;
  2877  000668  0012               	return	
  2878  00066A                     l893:
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;pindef.h: 196: LATEbits.LATE3=0;
  2882  00066A  967D               	bcf	3965,3,c	;volatile
  2883                           
  2884                           ;pindef.h: 197: LATEbits.LATE4=0;
  2885  00066C  987D               	bcf	3965,4,c	;volatile
  2886                           
  2887                           ;pindef.h: 198: LATEbits.LATE5=0;
  2888  00066E  9A7D               	bcf	3965,5,c	;volatile
  2889                           
  2890                           ;pindef.h: 199: LATEbits.LATE6=0;
  2891  000670  9C7D               	bcf	3965,6,c	;volatile
  2892                           
  2893                           ;pindef.h: 200: LATEbits.LATE7=0;
  2894  000672  9E7D               	bcf	3965,7,c	;volatile
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;pindef.h: 202: }
  2898                           
  2899                           ;pindef.h: 201: break;
  2900  000674  0012               	return	
  2901  000676                     l885:
  2902                           
  2903                           ; BSR set to: 0
  2904  000676  0100               	movlb	0	; () banked
  2905  000678  516A               	movf	output_LED5@num& (0+255),w,b
  2906                           
  2907                           ; Switch size 1, requested type "space"
  2908                           ; Number of cases is 6, Range of values is 0 to 5
  2909                           ; switch strategies available:
  2910                           ; Name         Instructions Cycles
  2911                           ; simple_byte           19    10 (average)
  2912                           ;	Chosen strategy is simple_byte
  2913  00067A  0A00               	xorlw	0	; case 0
  2914  00067C  B4D8               	btfsc	status,2,c
  2915  00067E  D7D1               	goto	l886
  2916  000680  0A01               	xorlw	1	; case 1
  2917  000682  B4D8               	btfsc	status,2,c
  2918  000684  D7D4               	goto	l888
  2919  000686  0A03               	xorlw	3	; case 2
  2920  000688  B4D8               	btfsc	status,2,c
  2921  00068A  D7D7               	goto	l889
  2922  00068C  0A01               	xorlw	1	; case 3
  2923  00068E  B4D8               	btfsc	status,2,c
  2924  000690  D7DA               	goto	l890
  2925  000692  0A07               	xorlw	7	; case 4
  2926  000694  B4D8               	btfsc	status,2,c
  2927  000696  D7DD               	goto	l891
  2928  000698  0A01               	xorlw	1	; case 5
  2929  00069A  B4D8               	btfsc	status,2,c
  2930  00069C  D7E0               	goto	l892
  2931  00069E  D7E5               	goto	l893
  2932  0006A0                     __end_of_output_LED5:
  2933                           	opt stack 0
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           prodh	equ	0xFF4
  2939                           prodl	equ	0xFF3
  2940                           intcon	equ	0xFF2
  2941                           postinc0	equ	0xFEE
  2942                           wreg	equ	0xFE8
  2943                           indf1	equ	0xFE7
  2944                           postdec1	equ	0xFE5
  2945                           fsr1h	equ	0xFE2
  2946                           fsr1l	equ	0xFE1
  2947                           indf2	equ	0xFDF
  2948                           postinc2	equ	0xFDE
  2949                           fsr2h	equ	0xFDA
  2950                           fsr2l	equ	0xFD9
  2951                           status	equ	0xFD8
  2952                           
  2953 ;; *************** function _make_s_driver_ver1_send_data *****************
  2954 ;; Defined at:
  2955 ;;		line 223 in file "pindef.h"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  mode            1    wreg     unsigned char 
  2958 ;;  pwm_value       1    0[BANK0 ] unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  mode            1    1[BANK0 ] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      unsigned char 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2970 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;Total ram usage:        2 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    3
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_GOOD_de_gozaru
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text17
  2985  0007FA                     __ptext17:
  2986                           	opt stack 0
  2987  0007FA                     _make_s_driver_ver1_send_data:
  2988                           	opt stack 25
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;incstack = 0
  2992                           ;make_s_driver_ver1_send_data@mode stored from wreg
  2993  0007FA  0100               	movlb	0	; () banked
  2994  0007FC  6F6B               	movwf	make_s_driver_ver1_send_data@mode& (0+255),b
  2995                           
  2996                           ;pindef.h: 224: pwm_value = pwm_value >> 1;
  2997  0007FE  0100               	movlb	0	; () banked
  2998  000800  90D8               	bcf	status,0,c
  2999  000802  316A               	rrcf	make_s_driver_ver1_send_data@pwm_value& (0+255),w,b
  3000  000804  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;pindef.h: 225: if(!pwm_value){
  3004  000806  516A               	movf	make_s_driver_ver1_send_data@pwm_value& (0+255),w,b
  3005  000808  A4D8               	btfss	status,2,c
  3006  00080A  D00C               	goto	l901
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;pindef.h: 226: pwm_value = 1;
  3010  00080C  0E01               	movlw	1
  3011  00080E  6F6A               	movwf	make_s_driver_ver1_send_data@pwm_value& (0+255),b
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;pindef.h: 227: }
  3015                           ;pindef.h: 228: switch(mode){
  3016  000810  D009               	goto	l901
  3017  000812                     
  3018                           ; BSR set to: 0
  3019                           ;pindef.h: 230: return 0b00000000;
  3020                           
  3021                           ; BSR set to: 0
  3022  000812  0E00               	movlw	0
  3023                           
  3024                           ; BSR set to: 0
  3025  000814  0012               	return	
  3026  000816                     
  3027                           ; BSR set to: 0
  3028                           ;pindef.h: 233: return 0b10000000;
  3029                           
  3030                           ; BSR set to: 0
  3031  000816  0E80               	movlw	128
  3032                           
  3033                           ; BSR set to: 0
  3034  000818  0012               	return	
  3035  00081A                     
  3036                           ; BSR set to: 0
  3037                           ;pindef.h: 236: return 0b10000000 + pwm_value;
  3038                           
  3039                           ; BSR set to: 0
  3040  00081A  516A               	movf	make_s_driver_ver1_send_data@pwm_value& (0+255),w,b
  3041  00081C  0F80               	addlw	128
  3042                           
  3043                           ; BSR set to: 0
  3044  00081E  0012               	return	
  3045  000820                     
  3046                           ; BSR set to: 0
  3047                           ;pindef.h: 239: return 0b00000000 + pwm_value;
  3048                           
  3049                           ; BSR set to: 0
  3050  000820  516A               	movf	make_s_driver_ver1_send_data@pwm_value& (0+255),w,b
  3051                           
  3052                           ; BSR set to: 0
  3053  000822  0012               	return	
  3054  000824                     l901:
  3055                           
  3056                           ; BSR set to: 0
  3057                           
  3058                           ; BSR set to: 0
  3059  000824  516B               	movf	make_s_driver_ver1_send_data@mode& (0+255),w,b
  3060                           
  3061                           ; Switch size 1, requested type "space"
  3062                           ; Number of cases is 4, Range of values is 0 to 3
  3063                           ; switch strategies available:
  3064                           ; Name         Instructions Cycles
  3065                           ; simple_byte           13     7 (average)
  3066                           ;	Chosen strategy is simple_byte
  3067  000826  0A00               	xorlw	0	; case 0
  3068  000828  B4D8               	btfsc	status,2,c
  3069  00082A  D7F3               	goto	l902
  3070  00082C  0A01               	xorlw	1	; case 1
  3071  00082E  B4D8               	btfsc	status,2,c
  3072  000830  D7F2               	goto	l905
  3073  000832  0A03               	xorlw	3	; case 2
  3074  000834  B4D8               	btfsc	status,2,c
  3075  000836  D7F1               	goto	l906
  3076  000838  0A01               	xorlw	1	; case 3
  3077  00083A  B4D8               	btfsc	status,2,c
  3078  00083C  D7F1               	goto	l907
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;pindef.h: 242: return 0b10000000;
  3082                           
  3083                           ; BSR set to: 0
  3084  00083E  0E80               	movlw	128
  3085  000840  0012               	return	
  3086  000842                     __end_of_make_s_driver_ver1_send_data:
  3087                           	opt stack 0
  3088                           tblptru	equ	0xFF8
  3089                           tblptrh	equ	0xFF7
  3090                           tblptrl	equ	0xFF6
  3091                           tablat	equ	0xFF5
  3092                           prodh	equ	0xFF4
  3093                           prodl	equ	0xFF3
  3094                           intcon	equ	0xFF2
  3095                           postinc0	equ	0xFEE
  3096                           wreg	equ	0xFE8
  3097                           indf1	equ	0xFE7
  3098                           postdec1	equ	0xFE5
  3099                           fsr1h	equ	0xFE2
  3100                           fsr1l	equ	0xFE1
  3101                           indf2	equ	0xFDF
  3102                           postinc2	equ	0xFDE
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _bit_test *****************
  3108 ;; Defined at:
  3109 ;;		line 1191 in file "MELONPAN1_lib_ver1.20.h"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  number          1    wreg     unsigned char 
  3112 ;;  bit_place       1    0[BANK0 ] unsigned char 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  number          1    3[BANK0 ] unsigned char 
  3115 ;;  i               1    4[BANK0 ] unsigned char 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      unsigned char 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3125 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3126 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3127 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3128 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3129 ;;Total ram usage:        5 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    3
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_GOOD_de_gozaru
  3136 ;;		_bit_clear
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text18
  3141  000944                     __ptext18:
  3142                           	opt stack 0
  3143  000944                     _bit_test:
  3144                           	opt stack 25
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;incstack = 0
  3148                           ;bit_test@number stored from wreg
  3149  000944  0100               	movlb	0	; () banked
  3150  000946  6F6D               	movwf	bit_test@number& (0+255),b
  3151                           
  3152                           ;MELONPAN1_lib_ver1.20.h: 1192: char i;
  3153                           ;MELONPAN1_lib_ver1.20.h: 1193: i=number & (0b00000001<<bit_place);
  3154  000948  C06A  F06B         	movff	bit_test@bit_place,??_bit_test
  3155  00094C  0E01               	movlw	1
  3156  00094E  0100               	movlb	0	; () banked
  3157  000950  6F6C               	movwf	(??_bit_test+1)& (0+255),b
  3158  000952  2B6B               	incf	??_bit_test& (0+255),f,b
  3159  000954  D002               	goto	u1824
  3160  000956                     u1825:
  3161  000956  90D8               	bcf	status,0,c
  3162  000958  376C               	rlcf	(??_bit_test+1)& (0+255),f,b
  3163  00095A                     u1824:
  3164  00095A  2F6B               	decfsz	??_bit_test& (0+255),f,b
  3165  00095C  D7FC               	goto	u1825
  3166  00095E  0100               	movlb	0	; () banked
  3167  000960  516C               	movf	(??_bit_test+1)& (0+255),w,b
  3168  000962  156D               	andwf	bit_test@number& (0+255),w,b
  3169  000964  6F6E               	movwf	bit_test@i& (0+255),b
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;MELONPAN1_lib_ver1.20.h: 1194: if(i>0){
  3173  000966  516E               	movf	bit_test@i& (0+255),w,b
  3174  000968  B4D8               	btfsc	status,2,c
  3175  00096A  D002               	goto	l874
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;MELONPAN1_lib_ver1.20.h: 1195: return 1;
  3179  00096C  0E01               	movlw	1
  3180                           
  3181                           ; BSR set to: 0
  3182  00096E  0012               	return	
  3183  000970                     l874:
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;MELONPAN1_lib_ver1.20.h: 1196: }
  3187                           ;MELONPAN1_lib_ver1.20.h: 1197: return 0;
  3188                           
  3189                           ; BSR set to: 0
  3190  000970  0E00               	movlw	0
  3191  000972  0012               	return	
  3192  000974                     __end_of_bit_test:
  3193                           	opt stack 0
  3194                           tblptru	equ	0xFF8
  3195                           tblptrh	equ	0xFF7
  3196                           tblptrl	equ	0xFF6
  3197                           tablat	equ	0xFF5
  3198                           prodh	equ	0xFF4
  3199                           prodl	equ	0xFF3
  3200                           intcon	equ	0xFF2
  3201                           postinc0	equ	0xFEE
  3202                           wreg	equ	0xFE8
  3203                           indf1	equ	0xFE7
  3204                           postdec1	equ	0xFE5
  3205                           fsr1h	equ	0xFE2
  3206                           fsr1l	equ	0xFE1
  3207                           indf2	equ	0xFDF
  3208                           postinc2	equ	0xFDE
  3209                           fsr2h	equ	0xFDA
  3210                           fsr2l	equ	0xFD9
  3211                           status	equ	0xFD8
  3212                           
  3213 ;; *************** function _DS_RIGHT_LR_signed_VALUE *****************
  3214 ;; Defined at:
  3215 ;;		line 233 in file "ds_dual_wood.h"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;		None
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;		None
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  2    0[BANK0 ] int 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3233 ;;Total ram usage:        2 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    3
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_GOOD_de_gozaru
  3240 ;;		_DS_RIGHT_DISTANCE_VALUE
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text19
  3245  000842                     __ptext19:
  3246                           	opt stack 0
  3247  000842                     _DS_RIGHT_LR_signed_VALUE:
  3248                           	opt stack 25
  3249                           
  3250                           ;ds_dual_wood.h: 234: if(DS_data[8]==127 || DS_data[8]==128){
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;incstack = 0
  3254  000842  0E7F               	movlw	127
  3255  000844  1809               	xorwf	_DS_data+8,w,c
  3256  000846  B4D8               	btfsc	status,2,c
  3257  000848  D004               	goto	u1860
  3258  00084A  0E80               	movlw	128
  3259  00084C  1809               	xorwf	_DS_data+8,w,c
  3260  00084E  A4D8               	btfss	status,2,c
  3261  000850  D006               	goto	l1041
  3262  000852                     u1860:
  3263                           
  3264                           ;ds_dual_wood.h: 235: return 0;
  3265  000852  0E00               	movlw	0
  3266  000854  0100               	movlb	0	; () banked
  3267  000856  6F6B               	movwf	(?_DS_RIGHT_LR_signed_VALUE+1)& (0+255),b
  3268  000858  0E00               	movlw	0
  3269  00085A  6F6A               	movwf	?_DS_RIGHT_LR_signed_VALUE& (0+255),b
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;ds_dual_wood.h: 236: }else if(DS_data[8]>128){
  3273                           
  3274                           ; BSR set to: 0
  3275  00085C  0012               	return	
  3276  00085E                     l1041:
  3277                           
  3278                           ; BSR set to: 0
  3279  00085E  0E80               	movlw	128
  3280  000860  6409               	cpfsgt	_DS_data+8,c
  3281  000862  D008               	goto	l1046
  3282                           
  3283                           ;ds_dual_wood.h: 237: return (signed int)DS_data[8]-128;
  3284  000864  0E80               	movlw	128
  3285  000866  2409               	addwf	_DS_data+8,w,c
  3286  000868  0100               	movlb	0	; () banked
  3287  00086A  6F6A               	movwf	?_DS_RIGHT_LR_signed_VALUE& (0+255),b
  3288  00086C  6B6B               	clrf	(?_DS_RIGHT_LR_signed_VALUE+1)& (0+255),b
  3289  00086E  0EFF               	movlw	255
  3290  000870  236B               	addwfc	(?_DS_RIGHT_LR_signed_VALUE+1)& (0+255),f,b
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;ds_dual_wood.h: 238: }else if(DS_data[8]<127){
  3294                           
  3295                           ; BSR set to: 0
  3296  000872  0012               	return	
  3297  000874                     l1046:
  3298                           
  3299                           ; BSR set to: 0
  3300  000874  0E7F               	movlw	127
  3301  000876  6009               	cpfslt	_DS_data+8,c
  3302  000878  0012               	return	
  3303                           
  3304                           ;ds_dual_wood.h: 239: return (signed int)DS_data[8]-127;
  3305  00087A  0E81               	movlw	129
  3306  00087C  2409               	addwf	_DS_data+8,w,c
  3307  00087E  0100               	movlb	0	; () banked
  3308  000880  6F6A               	movwf	?_DS_RIGHT_LR_signed_VALUE& (0+255),b
  3309  000882  6B6B               	clrf	(?_DS_RIGHT_LR_signed_VALUE+1)& (0+255),b
  3310  000884  0EFF               	movlw	255
  3311  000886  236B               	addwfc	(?_DS_RIGHT_LR_signed_VALUE+1)& (0+255),f,b
  3312                           
  3313                           ; BSR set to: 0
  3314                           
  3315                           ; BSR set to: 0
  3316                           
  3317                           ; BSR set to: 0
  3318  000888  0012               	return	
  3319  00088A                     __end_of_DS_RIGHT_LR_signed_VALUE:
  3320                           	opt stack 0
  3321                           tblptru	equ	0xFF8
  3322                           tblptrh	equ	0xFF7
  3323                           tblptrl	equ	0xFF6
  3324                           tablat	equ	0xFF5
  3325                           prodh	equ	0xFF4
  3326                           prodl	equ	0xFF3
  3327                           intcon	equ	0xFF2
  3328                           postinc0	equ	0xFEE
  3329                           wreg	equ	0xFE8
  3330                           indf1	equ	0xFE7
  3331                           postdec1	equ	0xFE5
  3332                           fsr1h	equ	0xFE2
  3333                           fsr1l	equ	0xFE1
  3334                           indf2	equ	0xFDF
  3335                           postinc2	equ	0xFDE
  3336                           fsr2h	equ	0xFDA
  3337                           fsr2l	equ	0xFD9
  3338                           status	equ	0xFD8
  3339                           
  3340 ;; *************** function _DS_LEFT_UD_signed_VALUE *****************
  3341 ;; Defined at:
  3342 ;;		line 263 in file "ds_dual_wood.h"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;		None
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  2    0[BANK0 ] int 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3356 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3358 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3359 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;Total ram usage:        4 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    3
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_GOOD_de_gozaru
  3367 ;;		_DS_LEFT_DISTANCE_VALUE
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text20
  3372  000796                     __ptext20:
  3373                           	opt stack 0
  3374  000796                     _DS_LEFT_UD_signed_VALUE:
  3375                           	opt stack 25
  3376                           
  3377                           ;ds_dual_wood.h: 264: if(DS_data[11]==127 || DS_data[11]==128){
  3378                           
  3379                           ;incstack = 0
  3380  000796  0E7F               	movlw	127
  3381  000798  180C               	xorwf	_DS_data+11,w,c
  3382  00079A  B4D8               	btfsc	status,2,c
  3383  00079C  D004               	goto	u1900
  3384  00079E  0E80               	movlw	128
  3385  0007A0  180C               	xorwf	_DS_data+11,w,c
  3386  0007A2  A4D8               	btfss	status,2,c
  3387  0007A4  D006               	goto	l1071
  3388  0007A6                     u1900:
  3389                           
  3390                           ;ds_dual_wood.h: 265: return 0;
  3391  0007A6  0E00               	movlw	0
  3392  0007A8  0100               	movlb	0	; () banked
  3393  0007AA  6F6B               	movwf	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),b
  3394  0007AC  0E00               	movlw	0
  3395  0007AE  6F6A               	movwf	?_DS_LEFT_UD_signed_VALUE& (0+255),b
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;ds_dual_wood.h: 266: }else if(DS_data[11]>128){
  3399                           
  3400                           ; BSR set to: 0
  3401  0007B0  0012               	return	
  3402  0007B2                     l1071:
  3403                           
  3404                           ; BSR set to: 0
  3405  0007B2  0E80               	movlw	128
  3406  0007B4  640C               	cpfsgt	_DS_data+11,c
  3407  0007B6  D00F               	goto	l1076
  3408                           
  3409                           ;ds_dual_wood.h: 267: return 128-(signed int)DS_data[11];
  3410  0007B8  500C               	movf	_DS_data+11,w,c
  3411  0007BA  0100               	movlb	0	; () banked
  3412  0007BC  6F6C               	movwf	??_DS_LEFT_UD_signed_VALUE& (0+255),b
  3413  0007BE  6B6D               	clrf	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),b
  3414  0007C0  1F6C               	comf	??_DS_LEFT_UD_signed_VALUE& (0+255),f,b
  3415  0007C2  1F6D               	comf	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),f,b
  3416  0007C4  4B6C               	infsnz	??_DS_LEFT_UD_signed_VALUE& (0+255),f,b
  3417  0007C6  2B6D               	incf	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),f,b
  3418  0007C8  0E80               	movlw	128
  3419  0007CA  256C               	addwf	??_DS_LEFT_UD_signed_VALUE& (0+255),w,b
  3420  0007CC  6F6A               	movwf	?_DS_LEFT_UD_signed_VALUE& (0+255),b
  3421  0007CE  0E00               	movlw	0
  3422  0007D0  216D               	addwfc	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),w,b
  3423  0007D2  6F6B               	movwf	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),b
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;ds_dual_wood.h: 268: }else if(DS_data[11]<127){
  3427                           
  3428                           ; BSR set to: 0
  3429  0007D4  0012               	return	
  3430  0007D6                     l1076:
  3431                           
  3432                           ; BSR set to: 0
  3433  0007D6  0E7F               	movlw	127
  3434  0007D8  600C               	cpfslt	_DS_data+11,c
  3435  0007DA  0012               	return	
  3436                           
  3437                           ;ds_dual_wood.h: 269: return 127-(signed int)DS_data[11];
  3438  0007DC  500C               	movf	_DS_data+11,w,c
  3439  0007DE  0100               	movlb	0	; () banked
  3440  0007E0  6F6C               	movwf	??_DS_LEFT_UD_signed_VALUE& (0+255),b
  3441  0007E2  6B6D               	clrf	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),b
  3442  0007E4  1F6C               	comf	??_DS_LEFT_UD_signed_VALUE& (0+255),f,b
  3443  0007E6  1F6D               	comf	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),f,b
  3444  0007E8  4B6C               	infsnz	??_DS_LEFT_UD_signed_VALUE& (0+255),f,b
  3445  0007EA  2B6D               	incf	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),f,b
  3446  0007EC  0E7F               	movlw	127
  3447  0007EE  256C               	addwf	??_DS_LEFT_UD_signed_VALUE& (0+255),w,b
  3448  0007F0  6F6A               	movwf	?_DS_LEFT_UD_signed_VALUE& (0+255),b
  3449  0007F2  0E00               	movlw	0
  3450  0007F4  216D               	addwfc	(??_DS_LEFT_UD_signed_VALUE+1)& (0+255),w,b
  3451  0007F6  6F6B               	movwf	(?_DS_LEFT_UD_signed_VALUE+1)& (0+255),b
  3452                           
  3453                           ; BSR set to: 0
  3454                           
  3455                           ; BSR set to: 0
  3456                           
  3457                           ; BSR set to: 0
  3458  0007F8  0012               	return	
  3459  0007FA                     __end_of_DS_LEFT_UD_signed_VALUE:
  3460                           	opt stack 0
  3461                           tblptru	equ	0xFF8
  3462                           tblptrh	equ	0xFF7
  3463                           tblptrl	equ	0xFF6
  3464                           tablat	equ	0xFF5
  3465                           prodh	equ	0xFF4
  3466                           prodl	equ	0xFF3
  3467                           intcon	equ	0xFF2
  3468                           postinc0	equ	0xFEE
  3469                           wreg	equ	0xFE8
  3470                           indf1	equ	0xFE7
  3471                           postdec1	equ	0xFE5
  3472                           fsr1h	equ	0xFE2
  3473                           fsr1l	equ	0xFE1
  3474                           indf2	equ	0xFDF
  3475                           postinc2	equ	0xFDE
  3476                           fsr2h	equ	0xFDA
  3477                           fsr2l	equ	0xFD9
  3478                           status	equ	0xFD8
  3479                           
  3480 ;; *************** function _BAD_de_gozaru *****************
  3481 ;; Defined at:
  3482 ;;		line 129 in file "MELON PAN1_main.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		None
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    3
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_read_ds_dual_de_gozaru
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text21
  3511  000AAE                     __ptext21:
  3512                           	opt stack 0
  3513  000AAE                     _BAD_de_gozaru:
  3514                           	opt stack 26
  3515                           
  3516                           ;MELON PAN1_main.c: 130: LATHbits.LATH2=0;
  3517                           
  3518                           ;incstack = 0
  3519  000AAE  9480               	bcf	3968,2,c	;volatile
  3520                           
  3521                           ;MELON PAN1_main.c: 131: LATDbits.LATD0=1;
  3522  000AB0  807C               	bsf	3964,0,c	;volatile
  3523  000AB2  0012               	return		;funcret
  3524  000AB4                     __end_of_BAD_de_gozaru:
  3525                           	opt stack 0
  3526                           tblptru	equ	0xFF8
  3527                           tblptrh	equ	0xFF7
  3528                           tblptrl	equ	0xFF6
  3529                           tablat	equ	0xFF5
  3530                           prodh	equ	0xFF4
  3531                           prodl	equ	0xFF3
  3532                           intcon	equ	0xFF2
  3533                           postinc0	equ	0xFEE
  3534                           wreg	equ	0xFE8
  3535                           indf1	equ	0xFE7
  3536                           postdec1	equ	0xFE5
  3537                           fsr1h	equ	0xFE2
  3538                           fsr1l	equ	0xFE1
  3539                           indf2	equ	0xFDF
  3540                           postinc2	equ	0xFDE
  3541                           fsr2h	equ	0xFDA
  3542                           fsr2l	equ	0xFD9
  3543                           status	equ	0xFD8
  3544                           
  3545 ;; *************** function _pin_init *****************
  3546 ;; Defined at:
  3547 ;;		line 75 in file "pindef.h"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3565 ;;Total ram usage:        0 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    3
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text22
  3576  000438                     __ptext22:
  3577                           	opt stack 0
  3578  000438                     _pin_init:
  3579                           	opt stack 27
  3580                           
  3581                           ;pindef.h: 77: LATA = 0x00;
  3582                           
  3583                           ;incstack = 0
  3584  000438  0E00               	movlw	0
  3585  00043A  6E79               	movwf	3961,c	;volatile
  3586                           
  3587                           ;pindef.h: 78: LATB = 0x00;
  3588  00043C  0E00               	movlw	0
  3589  00043E  6E7A               	movwf	3962,c	;volatile
  3590                           
  3591                           ;pindef.h: 79: LATC = 0x00;
  3592  000440  0E00               	movlw	0
  3593  000442  6E7B               	movwf	3963,c	;volatile
  3594                           
  3595                           ;pindef.h: 80: LATD = 0x50;
  3596  000444  0E50               	movlw	80
  3597  000446  6E7C               	movwf	3964,c	;volatile
  3598                           
  3599                           ;pindef.h: 81: LATE = 0x00;
  3600  000448  0E00               	movlw	0
  3601  00044A  6E7D               	movwf	3965,c	;volatile
  3602                           
  3603                           ;pindef.h: 82: LATF = 0x00;
  3604  00044C  0E00               	movlw	0
  3605  00044E  6E7E               	movwf	3966,c	;volatile
  3606                           
  3607                           ;pindef.h: 83: LATG = 0x00;
  3608  000450  0E00               	movlw	0
  3609  000452  6E7F               	movwf	3967,c	;volatile
  3610                           
  3611                           ;pindef.h: 84: LATH = 0x00;
  3612  000454  0E00               	movlw	0
  3613  000456  6E80               	movwf	3968,c	;volatile
  3614                           
  3615                           ;pindef.h: 87: TRISA = 0b11000000;
  3616  000458  0EC0               	movlw	192
  3617  00045A  6E81               	movwf	3969,c	;volatile
  3618                           
  3619                           ;pindef.h: 88: TRISB = 0b11111111;
  3620  00045C  6882               	setf	3970,c	;volatile
  3621                           
  3622                           ;pindef.h: 89: TRISC = 0b10111110;
  3623  00045E  0EBE               	movlw	190
  3624  000460  6E83               	movwf	3971,c	;volatile
  3625                           
  3626                           ;pindef.h: 90: TRISD = 0b10101000;
  3627  000462  0EA8               	movlw	168
  3628  000464  6E84               	movwf	3972,c	;volatile
  3629                           
  3630                           ;pindef.h: 91: TRISE = 0b00000000;
  3631  000466  0E00               	movlw	0
  3632  000468  6E85               	movwf	3973,c	;volatile
  3633                           
  3634                           ;pindef.h: 92: TRISF = 0b11111111;
  3635  00046A  6886               	setf	3974,c	;volatile
  3636                           
  3637                           ;pindef.h: 93: TRISG = 0b10111100;
  3638  00046C  0EBC               	movlw	188
  3639  00046E  6E87               	movwf	3975,c	;volatile
  3640                           
  3641                           ;pindef.h: 94: TRISH = 0b11110000;
  3642  000470  0EF0               	movlw	240
  3643  000472  6E88               	movwf	3976,c	;volatile
  3644                           
  3645                           ;pindef.h: 106: ANSELA = 0x00;
  3646  000474  0E00               	movlw	0
  3647  000476  010E               	movlb	14	; () banked
  3648  000478  6F92               	movwf	146,b	;volatile
  3649                           
  3650                           ;pindef.h: 107: ANSELB = 0x00;
  3651  00047A  0E00               	movlw	0
  3652  00047C  6F9A               	movwf	154,b	;volatile
  3653                           
  3654                           ;pindef.h: 108: ANSELD = 0x00;
  3655  00047E  0E00               	movlw	0
  3656  000480  6FA7               	movwf	167,b	;volatile
  3657                           
  3658                           ;pindef.h: 109: ANSELE = 0x00;
  3659  000482  0E00               	movlw	0
  3660  000484  6FAF               	movwf	175,b	;volatile
  3661                           
  3662                           ;pindef.h: 110: ANSELF = 0x00;
  3663  000486  0E00               	movlw	0
  3664  000488  6FB4               	movwf	180,b	;volatile
  3665                           
  3666                           ;pindef.h: 111: ANSELG = 0x00;
  3667  00048A  0E00               	movlw	0
  3668  00048C  6FBC               	movwf	188,b	;volatile
  3669                           
  3670                           ;pindef.h: 114: WPUA = 0x00;
  3671  00048E  0E00               	movlw	0
  3672  000490  6F91               	movwf	145,b	;volatile
  3673                           
  3674                           ;pindef.h: 115: WPUB = 0x00;
  3675  000492  0E00               	movlw	0
  3676  000494  6F99               	movwf	153,b	;volatile
  3677                           
  3678                           ;pindef.h: 116: WPUC = 0x00;
  3679  000496  0E00               	movlw	0
  3680  000498  6FA1               	movwf	161,b	;volatile
  3681                           
  3682                           ;pindef.h: 117: WPUD = 0x00;
  3683  00049A  0E00               	movlw	0
  3684  00049C  6FA6               	movwf	166,b	;volatile
  3685                           
  3686                           ;pindef.h: 118: WPUE = 0x00;
  3687  00049E  0E00               	movlw	0
  3688  0004A0  6FAE               	movwf	174,b	;volatile
  3689                           
  3690                           ;pindef.h: 119: WPUF = 0x00;
  3691  0004A2  0E00               	movlw	0
  3692  0004A4  6FB3               	movwf	179,b	;volatile
  3693                           
  3694                           ;pindef.h: 120: WPUG = 0x00;
  3695  0004A6  0E00               	movlw	0
  3696  0004A8  6FBB               	movwf	187,b	;volatile
  3697                           
  3698                           ;pindef.h: 121: WPUH = 0x00;
  3699  0004AA  0E00               	movlw	0
  3700  0004AC  6FC0               	movwf	192,b	;volatile
  3701                           
  3702                           ;pindef.h: 124: ODCONA = 0x00;
  3703  0004AE  0E00               	movlw	0
  3704  0004B0  6F90               	movwf	144,b	;volatile
  3705                           
  3706                           ;pindef.h: 125: ODCONB = 0x00;
  3707  0004B2  0E00               	movlw	0
  3708  0004B4  6F98               	movwf	152,b	;volatile
  3709                           
  3710                           ;pindef.h: 126: ODCONC = 0x00;
  3711  0004B6  0E00               	movlw	0
  3712  0004B8  6FA0               	movwf	160,b	;volatile
  3713                           
  3714                           ;pindef.h: 127: ODCOND = 0x00;
  3715  0004BA  0E00               	movlw	0
  3716  0004BC  6FA5               	movwf	165,b	;volatile
  3717                           
  3718                           ;pindef.h: 128: ODCONE = 0x00;
  3719  0004BE  0E00               	movlw	0
  3720  0004C0  6FAD               	movwf	173,b	;volatile
  3721                           
  3722                           ;pindef.h: 129: ODCONF = 0x00;
  3723  0004C2  0E00               	movlw	0
  3724  0004C4  6FB2               	movwf	178,b	;volatile
  3725                           
  3726                           ;pindef.h: 130: ODCONG = 0x00;
  3727  0004C6  0E00               	movlw	0
  3728  0004C8  6FBA               	movwf	186,b	;volatile
  3729                           
  3730                           ;pindef.h: 131: ODCONH = 0x00;
  3731  0004CA  0E00               	movlw	0
  3732  0004CC  6FBF               	movwf	191,b	;volatile
  3733                           
  3734                           ;pindef.h: 134: RC0PPS = 0x1A;
  3735  0004CE  0E1A               	movlw	26
  3736  0004D0  6F62               	movwf	98,b	;volatile
  3737                           
  3738                           ; BSR set to: 14
  3739                           ;pindef.h: 135: SSP1DATPPSbits.SSP1DATPPS = 0x11;
  3740  0004D2  811A               	bsf	26,0,b	;volatile
  3741  0004D4  931A               	bcf	26,1,b	;volatile
  3742  0004D6  951A               	bcf	26,2,b	;volatile
  3743  0004D8  971A               	bcf	26,3,b	;volatile
  3744  0004DA  891A               	bsf	26,4,b	;volatile
  3745  0004DC  9B1A               	bcf	26,5,b	;volatile
  3746                           
  3747                           ; BSR set to: 14
  3748                           ;pindef.h: 136: SSP1CLKPPSbits.SSP1CLKPPS = 0x16;
  3749  0004DE  9119               	bcf	25,0,b	;volatile
  3750  0004E0  8319               	bsf	25,1,b	;volatile
  3751  0004E2  8519               	bsf	25,2,b	;volatile
  3752  0004E4  9719               	bcf	25,3,b	;volatile
  3753  0004E6  8919               	bsf	25,4,b	;volatile
  3754  0004E8  9B19               	bcf	25,5,b	;volatile
  3755                           
  3756                           ;pindef.h: 137: RC6PPS = 0x19;
  3757  0004EA  0E19               	movlw	25
  3758  0004EC  6F68               	movwf	104,b	;volatile
  3759                           
  3760                           ;pindef.h: 139: RB0PPS = 0x1C;
  3761  0004EE  0E1C               	movlw	28
  3762  0004F0  6F5A               	movwf	90,b	;volatile
  3763                           
  3764                           ;pindef.h: 140: RB1PPS = 0x1B;
  3765  0004F2  0E1B               	movlw	27
  3766  0004F4  6F5B               	movwf	91,b	;volatile
  3767                           
  3768                           ; BSR set to: 14
  3769                           ;pindef.h: 141: SSP2DATPPSbits.SSP2DATPPS = 0x08;
  3770  0004F6  911D               	bcf	29,0,b	;volatile
  3771  0004F8  931D               	bcf	29,1,b	;volatile
  3772  0004FA  951D               	bcf	29,2,b	;volatile
  3773  0004FC  871D               	bsf	29,3,b	;volatile
  3774  0004FE  991D               	bcf	29,4,b	;volatile
  3775  000500  9B1D               	bcf	29,5,b	;volatile
  3776                           
  3777                           ; BSR set to: 14
  3778                           ;pindef.h: 142: SSP2CLKPPSbits.SSP2CLKPPS = 0x09;
  3779  000502  811C               	bsf	28,0,b	;volatile
  3780  000504  931C               	bcf	28,1,b	;volatile
  3781  000506  951C               	bcf	28,2,b	;volatile
  3782  000508  871C               	bsf	28,3,b	;volatile
  3783  00050A  991C               	bcf	28,4,b	;volatile
  3784  00050C  9B1C               	bcf	28,5,b	;volatile
  3785                           
  3786                           ; BSR set to: 14
  3787                           ;pindef.h: 144: RX1PPSbits.RX1PPS = 0x1B;
  3788  00050E  810F               	bsf	15,0,b	;volatile
  3789  000510  830F               	bsf	15,1,b	;volatile
  3790  000512  950F               	bcf	15,2,b	;volatile
  3791  000514  870F               	bsf	15,3,b	;volatile
  3792  000516  890F               	bsf	15,4,b	;volatile
  3793  000518  9B0F               	bcf	15,5,b	;volatile
  3794                           
  3795                           ;pindef.h: 145: RD4PPS = 0x0C;
  3796  00051A  0E0C               	movlw	12
  3797  00051C  6F6E               	movwf	110,b	;volatile
  3798                           
  3799                           ; BSR set to: 14
  3800                           ;pindef.h: 147: RX2PPSbits.RX2PPS = 0x1D;
  3801  00051E  8111               	bsf	17,0,b	;volatile
  3802  000520  9311               	bcf	17,1,b	;volatile
  3803  000522  8511               	bsf	17,2,b	;volatile
  3804  000524  8711               	bsf	17,3,b	;volatile
  3805  000526  8911               	bsf	17,4,b	;volatile
  3806  000528  9B11               	bcf	17,5,b	;volatile
  3807                           
  3808                           ;pindef.h: 148: RD6PPS = 0x0E;
  3809  00052A  0E0E               	movlw	14
  3810  00052C  6F70               	movwf	112,b	;volatile
  3811                           
  3812                           ; BSR set to: 14
  3813  00052E  0012               	return		;funcret
  3814  000530                     __end_of_pin_init:
  3815                           	opt stack 0
  3816                           tblptru	equ	0xFF8
  3817                           tblptrh	equ	0xFF7
  3818                           tblptrl	equ	0xFF6
  3819                           tablat	equ	0xFF5
  3820                           prodh	equ	0xFF4
  3821                           prodl	equ	0xFF3
  3822                           intcon	equ	0xFF2
  3823                           postinc0	equ	0xFEE
  3824                           wreg	equ	0xFE8
  3825                           indf1	equ	0xFE7
  3826                           postdec1	equ	0xFE5
  3827                           fsr1h	equ	0xFE2
  3828                           fsr1l	equ	0xFE1
  3829                           indf2	equ	0xFDF
  3830                           postinc2	equ	0xFDE
  3831                           fsr2h	equ	0xFDA
  3832                           fsr2l	equ	0xFD9
  3833                           status	equ	0xFD8
  3834                           
  3835 ;; *************** function _TIMER1_setup *****************
  3836 ;; Defined at:
  3837 ;;		line 735 in file "MELONPAN1_lib_ver1.20.h"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  data            2    0[BANK0 ] unsigned int 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3851 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3854 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3855 ;;Total ram usage:        2 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    3
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_main
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text23
  3866  000A4A                     __ptext23:
  3867                           	opt stack 0
  3868  000A4A                     _TIMER1_setup:
  3869                           	opt stack 27
  3870                           
  3871                           ;MELONPAN1_lib_ver1.20.h: 736: T1GCON=0;
  3872                           
  3873                           ; BSR set to: 14
  3874                           ;incstack = 0
  3875  000A4A  0E00               	movlw	0
  3876  000A4C  6ED0               	movwf	4048,c	;volatile
  3877                           
  3878                           ;MELONPAN1_lib_ver1.20.h: 737: TMR1CLK=(char)((data>>8) & 0xff);
  3879  000A4E  0100               	movlb	0	; () banked
  3880  000A50  516B               	movf	(TIMER1_setup@data+1)& (0+255),w,b
  3881  000A52  6ED2               	movwf	4050,c	;volatile
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;MELONPAN1_lib_ver1.20.h: 738: T1CON=((char)(data & 0xff)) | 0x03;
  3885  000A54  516A               	movf	TIMER1_setup@data& (0+255),w,b
  3886  000A56  0903               	iorlw	3
  3887  000A58  6ECF               	movwf	4047,c	;volatile
  3888                           
  3889                           ; BSR set to: 0
  3890  000A5A  0012               	return		;funcret
  3891  000A5C                     __end_of_TIMER1_setup:
  3892                           	opt stack 0
  3893                           tblptru	equ	0xFF8
  3894                           tblptrh	equ	0xFF7
  3895                           tblptrl	equ	0xFF6
  3896                           tablat	equ	0xFF5
  3897                           prodh	equ	0xFF4
  3898                           prodl	equ	0xFF3
  3899                           intcon	equ	0xFF2
  3900                           postinc0	equ	0xFEE
  3901                           wreg	equ	0xFE8
  3902                           indf1	equ	0xFE7
  3903                           postdec1	equ	0xFE5
  3904                           fsr1h	equ	0xFE2
  3905                           fsr1l	equ	0xFE1
  3906                           indf2	equ	0xFDF
  3907                           postinc2	equ	0xFDE
  3908                           fsr2h	equ	0xFDA
  3909                           fsr2l	equ	0xFD9
  3910                           status	equ	0xFD8
  3911                           
  3912 ;; *************** function _TIMER1_set_count *****************
  3913 ;; Defined at:
  3914 ;;		line 745 in file "MELONPAN1_lib_ver1.20.h"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  data            2    0[BANK0 ] unsigned int 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3928 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3932 ;;Total ram usage:        2 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    3
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_main
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text24
  3943  000A84                     __ptext24:
  3944                           	opt stack 0
  3945  000A84                     _TIMER1_set_count:
  3946                           	opt stack 27
  3947                           
  3948                           ;MELONPAN1_lib_ver1.20.h: 746: TMR1H=(char)(data>>8);
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;incstack = 0
  3952  000A84  0100               	movlb	0	; () banked
  3953  000A86  516B               	movf	(TIMER1_set_count@data+1)& (0+255),w,b
  3954  000A88  6ECE               	movwf	4046,c	;volatile
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;MELONPAN1_lib_ver1.20.h: 747: TMR1L=(char)(data);
  3958  000A8A  C06A  FFCD         	movff	TIMER1_set_count@data,4045	;volatile
  3959                           
  3960                           ; BSR set to: 0
  3961  000A8E  0012               	return		;funcret
  3962  000A90                     __end_of_TIMER1_set_count:
  3963                           	opt stack 0
  3964                           tblptru	equ	0xFF8
  3965                           tblptrh	equ	0xFF7
  3966                           tblptrl	equ	0xFF6
  3967                           tablat	equ	0xFF5
  3968                           prodh	equ	0xFF4
  3969                           prodl	equ	0xFF3
  3970                           intcon	equ	0xFF2
  3971                           postinc0	equ	0xFEE
  3972                           wreg	equ	0xFE8
  3973                           indf1	equ	0xFE7
  3974                           postdec1	equ	0xFE5
  3975                           fsr1h	equ	0xFE2
  3976                           fsr1l	equ	0xFE1
  3977                           indf2	equ	0xFDF
  3978                           postinc2	equ	0xFDE
  3979                           fsr2h	equ	0xFDA
  3980                           fsr2l	equ	0xFD9
  3981                           status	equ	0xFD8
  3982                           
  3983 ;; *************** function _wood_isr *****************
  3984 ;; Defined at:
  3985 ;;		line 16 in file "MELON PAN1_main.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;Total ram usage:       18 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    2
  4006 ;; This function calls:
  4007 ;;		_read_ds_dual_byte
  4008 ;;		i2_TIMER0_16bit_set_count
  4009 ;;		i2_TIMER1_set_count
  4010 ;; This function is called by:
  4011 ;;		Interrupt level 2
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	intcode
  4016  000008                     __pintcode:
  4017                           	opt stack 0
  4018  000008                     _wood_isr:
  4019                           	opt stack 24
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;incstack = 0
  4023  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4024  00000A  CFFA F039          	movff	pclath,??_wood_isr
  4025  00000E  CFFB F03A          	movff	pclatu,??_wood_isr+1
  4026  000012  CFE9 F03B          	movff	fsr0l,??_wood_isr+2
  4027  000016  CFEA F03C          	movff	fsr0h,??_wood_isr+3
  4028  00001A  CFE1 F03D          	movff	fsr1l,??_wood_isr+4
  4029  00001E  CFE2 F03E          	movff	fsr1h,??_wood_isr+5
  4030  000022  CFD9 F03F          	movff	fsr2l,??_wood_isr+6
  4031  000026  CFDA F040          	movff	fsr2h,??_wood_isr+7
  4032  00002A  CFF3 F041          	movff	prodl,??_wood_isr+8
  4033  00002E  CFF4 F042          	movff	prodh,??_wood_isr+9
  4034  000032  CFF6 F043          	movff	tblptrl,??_wood_isr+10
  4035  000036  CFF7 F044          	movff	tblptrh,??_wood_isr+11
  4036  00003A  CFF8 F045          	movff	tblptru,??_wood_isr+12
  4037  00003E  CFF5 F046          	movff	tablat,??_wood_isr+13
  4038  000042  C04F  F047         	movff	btemp,??_wood_isr+14
  4039  000046  C050  F048         	movff	btemp+1,??_wood_isr+15
  4040  00004A  C051  F049         	movff	btemp+2,??_wood_isr+16
  4041  00004E  C052  F04A         	movff	btemp+3,??_wood_isr+17
  4042                           
  4043                           ;MELON PAN1_main.c: 17: if(PIR3bits.RC1IF){
  4044  000052  010E               	movlb	14	; () banked
  4045  000054  BB36               	btfsc	54,5,b	;volatile
  4046                           
  4047                           ; BSR set to: 14
  4048                           ;MELON PAN1_main.c: 19: read_ds_dual_byte();
  4049  000056  EC50  F003         	call	_read_ds_dual_byte	;wreg free
  4050                           
  4051                           ;MELON PAN1_main.c: 20: }
  4052                           ;MELON PAN1_main.c: 21: if(PIR0bits.TMR0IF){
  4053  00005A  010E               	movlb	14	; () banked
  4054  00005C  AB33               	btfss	51,5,b	;volatile
  4055  00005E  D00A               	goto	i2l1154
  4056                           
  4057                           ; BSR set to: 14
  4058                           ;MELON PAN1_main.c: 22: PIR0bits.TMR0IF=0;
  4059  000060  9B33               	bcf	51,5,b	;volatile
  4060                           
  4061                           ; BSR set to: 14
  4062                           ;MELON PAN1_main.c: 24: TIMER0_16bit_set_count(25536);
  4063  000062  0E63               	movlw	99
  4064  000064  6E38               	movwf	i2TIMER0_16bit_set_count@data+1,c
  4065  000066  0EC0               	movlw	192
  4066  000068  6E37               	movwf	i2TIMER0_16bit_set_count@data,c
  4067  00006A  EC4D  F005         	call	i2_TIMER0_16bit_set_count	;wreg free
  4068                           
  4069                           ;MELON PAN1_main.c: 26: DS_time_out++;
  4070  00006E  2A4E               	incf	_DS_time_out,f,c
  4071                           
  4072                           ;MELON PAN1_main.c: 27: DS_communication_error_time++;
  4073  000070  4A2D               	infsnz	_DS_communication_error_time,f,c
  4074  000072  2A2E               	incf	_DS_communication_error_time+1,f,c
  4075  000074                     i2l1154:
  4076                           
  4077                           ;MELON PAN1_main.c: 28: }
  4078                           ;MELON PAN1_main.c: 29: if(PIR5bits.TMR1IF){
  4079  000074  010E               	movlb	14	; () banked
  4080  000076  A138               	btfss	56,0,b	;volatile
  4081  000078  D007               	goto	i2l1155
  4082                           
  4083                           ; BSR set to: 14
  4084                           ;MELON PAN1_main.c: 30: PIR5bits.TMR1IF=0;
  4085  00007A  9138               	bcf	56,0,b	;volatile
  4086                           
  4087                           ; BSR set to: 14
  4088                           ;MELON PAN1_main.c: 32: TIMER1_set_count(25536);
  4089  00007C  0E63               	movlw	99
  4090  00007E  6E38               	movwf	i2TIMER1_set_count@data+1,c
  4091  000080  0EC0               	movlw	192
  4092  000082  6E37               	movwf	i2TIMER1_set_count@data,c
  4093  000084  EC48  F005         	call	i2_TIMER1_set_count	;wreg free
  4094  000088                     i2l1155:
  4095  000088  C04A  F052         	movff	??_wood_isr+17,btemp+3
  4096  00008C  C049  F051         	movff	??_wood_isr+16,btemp+2
  4097  000090  C048  F050         	movff	??_wood_isr+15,btemp+1
  4098  000094  C047  F04F         	movff	??_wood_isr+14,btemp
  4099  000098  C046  FFF5         	movff	??_wood_isr+13,tablat
  4100  00009C  C045  FFF8         	movff	??_wood_isr+12,tblptru
  4101  0000A0  C044  FFF7         	movff	??_wood_isr+11,tblptrh
  4102  0000A4  C043  FFF6         	movff	??_wood_isr+10,tblptrl
  4103  0000A8  C042  FFF4         	movff	??_wood_isr+9,prodh
  4104  0000AC  C041  FFF3         	movff	??_wood_isr+8,prodl
  4105  0000B0  C040  FFDA         	movff	??_wood_isr+7,fsr2h
  4106  0000B4  C03F  FFD9         	movff	??_wood_isr+6,fsr2l
  4107  0000B8  C03E  FFE2         	movff	??_wood_isr+5,fsr1h
  4108  0000BC  C03D  FFE1         	movff	??_wood_isr+4,fsr1l
  4109  0000C0  C03C  FFEA         	movff	??_wood_isr+3,fsr0h
  4110  0000C4  C03B  FFE9         	movff	??_wood_isr+2,fsr0l
  4111  0000C8  C03A  FFFB         	movff	??_wood_isr+1,pclatu
  4112  0000CC  C039  FFFA         	movff	??_wood_isr,pclath
  4113  0000D0  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4114  0000D2  0011               	retfie		f
  4115  0000D4                     __end_of_wood_isr:
  4116                           	opt stack 0
  4117                           pclatu	equ	0xFFB
  4118                           pclath	equ	0xFFA
  4119                           tblptru	equ	0xFF8
  4120                           tblptrh	equ	0xFF7
  4121                           tblptrl	equ	0xFF6
  4122                           tablat	equ	0xFF5
  4123                           prodh	equ	0xFF4
  4124                           prodl	equ	0xFF3
  4125                           intcon	equ	0xFF2
  4126                           postinc0	equ	0xFEE
  4127                           fsr0h	equ	0xFEA
  4128                           fsr0l	equ	0xFE9
  4129                           wreg	equ	0xFE8
  4130                           indf1	equ	0xFE7
  4131                           postdec1	equ	0xFE5
  4132                           fsr1h	equ	0xFE2
  4133                           fsr1l	equ	0xFE1
  4134                           indf2	equ	0xFDF
  4135                           postinc2	equ	0xFDE
  4136                           fsr2h	equ	0xFDA
  4137                           fsr2l	equ	0xFD9
  4138                           status	equ	0xFD8
  4139                           
  4140 ;; *************** function i2_TIMER1_set_count *****************
  4141 ;; Defined at:
  4142 ;;		line 745 in file "MELONPAN1_lib_ver1.20.h"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  data            2    0[COMRAM] unsigned int 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;		None
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4159 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4160 ;;Total ram usage:        2 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_wood_isr
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text26
  4170  000A90                     __ptext26:
  4171                           	opt stack 0
  4172  000A90                     i2_TIMER1_set_count:
  4173                           	opt stack 25
  4174                           
  4175                           ;MELONPAN1_lib_ver1.20.h: 746: TMR1H=(char)(data>>8);
  4176                           
  4177                           ;incstack = 0
  4178  000A90  5038               	movf	i2TIMER1_set_count@data+1,w,c
  4179  000A92  6ECE               	movwf	4046,c	;volatile
  4180                           
  4181                           ;MELONPAN1_lib_ver1.20.h: 747: TMR1L=(char)(data);
  4182  000A94  C037  FFCD         	movff	i2TIMER1_set_count@data,4045	;volatile
  4183  000A98  0012               	return		;funcret
  4184  000A9A                     __end_ofi2_TIMER1_set_count:
  4185                           	opt stack 0
  4186                           pclatu	equ	0xFFB
  4187                           pclath	equ	0xFFA
  4188                           tblptru	equ	0xFF8
  4189                           tblptrh	equ	0xFF7
  4190                           tblptrl	equ	0xFF6
  4191                           tablat	equ	0xFF5
  4192                           prodh	equ	0xFF4
  4193                           prodl	equ	0xFF3
  4194                           intcon	equ	0xFF2
  4195                           postinc0	equ	0xFEE
  4196                           fsr0h	equ	0xFEA
  4197                           fsr0l	equ	0xFE9
  4198                           wreg	equ	0xFE8
  4199                           indf1	equ	0xFE7
  4200                           postdec1	equ	0xFE5
  4201                           fsr1h	equ	0xFE2
  4202                           fsr1l	equ	0xFE1
  4203                           indf2	equ	0xFDF
  4204                           postinc2	equ	0xFDE
  4205                           fsr2h	equ	0xFDA
  4206                           fsr2l	equ	0xFD9
  4207                           status	equ	0xFD8
  4208                           
  4209 ;; *************** function i2_TIMER0_16bit_set_count *****************
  4210 ;; Defined at:
  4211 ;;		line 721 in file "MELONPAN1_lib_ver1.20.h"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  data            2    0[COMRAM] unsigned int 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      void 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4229 ;;Total ram usage:        2 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_wood_isr
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text27
  4239  000A9A                     __ptext27:
  4240                           	opt stack 0
  4241  000A9A                     i2_TIMER0_16bit_set_count:
  4242                           	opt stack 25
  4243                           
  4244                           ;MELONPAN1_lib_ver1.20.h: 722: TMR0H=(char)(data>>8);
  4245                           
  4246                           ;incstack = 0
  4247  000A9A  5038               	movf	i2TIMER0_16bit_set_count@data+1,w,c
  4248  000A9C  6ED4               	movwf	4052,c	;volatile
  4249                           
  4250                           ;MELONPAN1_lib_ver1.20.h: 723: TMR0L=(char)(data);
  4251  000A9E  C037  FFD3         	movff	i2TIMER0_16bit_set_count@data,4051	;volatile
  4252  000AA2  0012               	return		;funcret
  4253  000AA4                     __end_ofi2_TIMER0_16bit_set_count:
  4254                           	opt stack 0
  4255                           pclatu	equ	0xFFB
  4256                           pclath	equ	0xFFA
  4257                           tblptru	equ	0xFF8
  4258                           tblptrh	equ	0xFF7
  4259                           tblptrl	equ	0xFF6
  4260                           tablat	equ	0xFF5
  4261                           prodh	equ	0xFF4
  4262                           prodl	equ	0xFF3
  4263                           intcon	equ	0xFF2
  4264                           postinc0	equ	0xFEE
  4265                           fsr0h	equ	0xFEA
  4266                           fsr0l	equ	0xFE9
  4267                           wreg	equ	0xFE8
  4268                           indf1	equ	0xFE7
  4269                           postdec1	equ	0xFE5
  4270                           fsr1h	equ	0xFE2
  4271                           fsr1l	equ	0xFE1
  4272                           indf2	equ	0xFDF
  4273                           postinc2	equ	0xFDE
  4274                           fsr2h	equ	0xFDA
  4275                           fsr2l	equ	0xFD9
  4276                           status	equ	0xFD8
  4277                           
  4278 ;; *************** function _read_ds_dual_byte *****************
  4279 ;; Defined at:
  4280 ;;		line 112 in file "ds_dual_wood.h"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4298 ;;Total ram usage:        1 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    1
  4301 ;; This function calls:
  4302 ;;		_Serial1_read
  4303 ;; This function is called by:
  4304 ;;		_wood_isr
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text28
  4309  0006A0                     __ptext28:
  4310                           	opt stack 0
  4311  0006A0                     _read_ds_dual_byte:
  4312                           	opt stack 24
  4313                           
  4314                           ;ds_dual_wood.h: 113: if(DS_read_stop==0){
  4315                           
  4316                           ;incstack = 0
  4317  0006A0  5035               	movf	_DS_read_stop,w,c
  4318  0006A2  A4D8               	btfss	status,2,c
  4319  0006A4  D038               	goto	i2l978
  4320                           
  4321                           ;ds_dual_wood.h: 114: sinyounai_DS_data[DS_uart_number]=Serial1_read();
  4322  0006A6  5036               	movf	_DS_uart_number,w,c
  4323  0006A8  0D01               	mullw	1
  4324  0006AA  0E0E               	movlw	low _sinyounai_DS_data
  4325  0006AC  24F3               	addwf	prodl,w,c
  4326  0006AE  6ED9               	movwf	fsr2l,c
  4327  0006B0  0E00               	movlw	high _sinyounai_DS_data
  4328  0006B2  20F4               	addwfc	prodh,w,c
  4329  0006B4  6EDA               	movwf	fsr2h,c
  4330  0006B6  EC52  F005         	call	_Serial1_read	;wreg free
  4331  0006BA  6EDF               	movwf	indf2,c
  4332                           
  4333                           ;ds_dual_wood.h: 115: if(DS_uart_number==1 && sinyounai_DS_data[DS_uart_number]==0x0D){
  4334  0006BC  0436               	decf	_DS_uart_number,w,c
  4335  0006BE  A4D8               	btfss	status,2,c
  4336  0006C0  D00F               	goto	i2l979
  4337  0006C2  5036               	movf	_DS_uart_number,w,c
  4338  0006C4  0D01               	mullw	1
  4339  0006C6  0E0E               	movlw	low _sinyounai_DS_data
  4340  0006C8  24F3               	addwf	prodl,w,c
  4341  0006CA  6ED9               	movwf	fsr2l,c
  4342  0006CC  0E00               	movlw	high _sinyounai_DS_data
  4343  0006CE  20F4               	addwfc	prodh,w,c
  4344  0006D0  6EDA               	movwf	fsr2h,c
  4345  0006D2  0E0D               	movlw	13
  4346  0006D4  18DE               	xorwf	postinc2,w,c
  4347  0006D6  A4D8               	btfss	status,2,c
  4348  0006D8  D003               	goto	i2l979
  4349                           
  4350                           ;ds_dual_wood.h: 116: DS_uart_number=1;
  4351  0006DA  0E01               	movlw	1
  4352  0006DC  6E36               	movwf	_DS_uart_number,c
  4353                           
  4354                           ;ds_dual_wood.h: 117: }else if((DS_uart_number==0 && sinyounai_DS_data[0]!=0x0D)||(DS_ua
      +                          rt_number==1 && sinyounai_DS_data[1]!=0x00 && sinyounai_DS_data[1]!=0xCB)){
  4355  0006DE  0012               	return	
  4356  0006E0                     i2l979:
  4357  0006E0  5036               	movf	_DS_uart_number,w,c
  4358  0006E2  A4D8               	btfss	status,2,c
  4359  0006E4  D004               	goto	i2u60_40
  4360  0006E6  0E0D               	movlw	13
  4361  0006E8  180E               	xorwf	_sinyounai_DS_data,w,c
  4362  0006EA  A4D8               	btfss	status,2,c
  4363  0006EC  D00A               	goto	i2u63_40
  4364  0006EE                     i2u60_40:
  4365  0006EE  0436               	decf	_DS_uart_number,w,c
  4366  0006F0  A4D8               	btfss	status,2,c
  4367  0006F2  D00A               	goto	i2l981
  4368  0006F4  500F               	movf	_sinyounai_DS_data+1,w,c
  4369  0006F6  B4D8               	btfsc	status,2,c
  4370  0006F8  D007               	goto	i2l981
  4371  0006FA  0ECB               	movlw	203
  4372  0006FC  180F               	xorwf	_sinyounai_DS_data+1,w,c
  4373  0006FE  B4D8               	btfsc	status,2,c
  4374  000700  D003               	goto	i2l981
  4375  000702                     i2u63_40:
  4376                           
  4377                           ;ds_dual_wood.h: 118: DS_uart_number=0;
  4378  000702  0E00               	movlw	0
  4379  000704  6E36               	movwf	_DS_uart_number,c
  4380                           
  4381                           ;ds_dual_wood.h: 119: }else{
  4382  000706  0012               	return	
  4383  000708                     i2l981:
  4384                           
  4385                           ;ds_dual_wood.h: 120: DS_uart_number++;
  4386  000708  2A36               	incf	_DS_uart_number,f,c
  4387                           
  4388                           ;ds_dual_wood.h: 121: if(DS_uart_number>(13-1)){
  4389  00070A  0E0C               	movlw	12
  4390  00070C  6436               	cpfsgt	_DS_uart_number,c
  4391  00070E  0012               	return	
  4392                           
  4393                           ;ds_dual_wood.h: 122: DS_read_stop=1;
  4394  000710  0E01               	movlw	1
  4395  000712  6E35               	movwf	_DS_read_stop,c
  4396                           
  4397                           ;ds_dual_wood.h: 123: }
  4398                           ;ds_dual_wood.h: 124: }
  4399                           ;ds_dual_wood.h: 125: }else{
  4400  000714  0012               	return	
  4401  000716                     i2l978:
  4402                           
  4403                           ;ds_dual_wood.h: 126: Serial1_read();
  4404  000716  EC52  F005         	call	_Serial1_read	;wreg free
  4405  00071A  0012               	return	
  4406  00071C                     __end_of_read_ds_dual_byte:
  4407                           	opt stack 0
  4408                           pclatu	equ	0xFFB
  4409                           pclath	equ	0xFFA
  4410                           tblptru	equ	0xFF8
  4411                           tblptrh	equ	0xFF7
  4412                           tblptrl	equ	0xFF6
  4413                           tablat	equ	0xFF5
  4414                           prodh	equ	0xFF4
  4415                           prodl	equ	0xFF3
  4416                           intcon	equ	0xFF2
  4417                           postinc0	equ	0xFEE
  4418                           fsr0h	equ	0xFEA
  4419                           fsr0l	equ	0xFE9
  4420                           wreg	equ	0xFE8
  4421                           indf1	equ	0xFE7
  4422                           postdec1	equ	0xFE5
  4423                           fsr1h	equ	0xFE2
  4424                           fsr1l	equ	0xFE1
  4425                           indf2	equ	0xFDF
  4426                           postinc2	equ	0xFDE
  4427                           fsr2h	equ	0xFDA
  4428                           fsr2l	equ	0xFD9
  4429                           status	equ	0xFD8
  4430                           
  4431 ;; *************** function _Serial1_read *****************
  4432 ;; Defined at:
  4433 ;;		line 490 in file "MELONPAN1_lib_ver1.20.h"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;		None
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;		None
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      unsigned char 
  4440 ;; Registers used:
  4441 ;;		wreg, status,2
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;Total ram usage:        0 bytes
  4452 ;; Hardware stack levels used:    1
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_read_ds_dual_byte
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text29
  4461  000AA4                     __ptext29:
  4462                           	opt stack 0
  4463  000AA4                     _Serial1_read:
  4464                           	opt stack 24
  4465                           
  4466                           ;MELONPAN1_lib_ver1.20.h: 491: while(!PIR3bits.RC1IF);
  4467                           
  4468                           ;incstack = 0
  4469  000AA4  010E               	movlb	14	; () banked
  4470  000AA6  AB36               	btfss	54,5,b	;volatile
  4471  000AA8  D7FD               	goto	_Serial1_read
  4472                           
  4473                           ; BSR set to: 14
  4474                           ;MELONPAN1_lib_ver1.20.h: 492: return RC1REG;
  4475                           
  4476                           ; BSR set to: 14
  4477  000AAA  5098               	movf	3992,w,c	;volatile
  4478  000AAC  0012               	return	
  4479  000AAE                     __end_of_Serial1_read:
  4480                           	opt stack 0
  4481  0000                     pclatu	equ	0xFFB
  4482                           pclath	equ	0xFFA
  4483                           tblptru	equ	0xFF8
  4484                           tblptrh	equ	0xFF7
  4485                           tblptrl	equ	0xFF6
  4486                           tablat	equ	0xFF5
  4487                           prodh	equ	0xFF4
  4488                           prodl	equ	0xFF3
  4489                           intcon	equ	0xFF2
  4490                           postinc0	equ	0xFEE
  4491                           fsr0h	equ	0xFEA
  4492                           fsr0l	equ	0xFE9
  4493                           wreg	equ	0xFE8
  4494                           indf1	equ	0xFE7
  4495                           postdec1	equ	0xFE5
  4496                           fsr1h	equ	0xFE2
  4497                           fsr1l	equ	0xFE1
  4498                           indf2	equ	0xFDF
  4499                           postinc2	equ	0xFDE
  4500                           fsr2h	equ	0xFDA
  4501                           fsr2l	equ	0xFD9
  4502                           status	equ	0xFD8
  4503                           pclatu	equ	0xFFB
  4504                           pclath	equ	0xFFA
  4505                           tblptru	equ	0xFF8
  4506                           tblptrh	equ	0xFF7
  4507                           tblptrl	equ	0xFF6
  4508                           tablat	equ	0xFF5
  4509                           prodh	equ	0xFF4
  4510                           prodl	equ	0xFF3
  4511                           intcon	equ	0xFF2
  4512                           postinc0	equ	0xFEE
  4513                           fsr0h	equ	0xFEA
  4514                           fsr0l	equ	0xFE9
  4515                           wreg	equ	0xFE8
  4516                           indf1	equ	0xFE7
  4517                           postdec1	equ	0xFE5
  4518                           fsr1h	equ	0xFE2
  4519                           fsr1l	equ	0xFE1
  4520                           indf2	equ	0xFDF
  4521                           postinc2	equ	0xFDE
  4522                           fsr2h	equ	0xFDA
  4523                           fsr2l	equ	0xFD9
  4524                           status	equ	0xFD8
  4525                           
  4526                           	psect	rparam
  4527  0000                     pclatu	equ	0xFFB
  4528                           pclath	equ	0xFFA
  4529                           tblptru	equ	0xFF8
  4530                           tblptrh	equ	0xFF7
  4531                           tblptrl	equ	0xFF6
  4532                           tablat	equ	0xFF5
  4533                           prodh	equ	0xFF4
  4534                           prodl	equ	0xFF3
  4535                           intcon	equ	0xFF2
  4536                           postinc0	equ	0xFEE
  4537                           fsr0h	equ	0xFEA
  4538                           fsr0l	equ	0xFE9
  4539                           wreg	equ	0xFE8
  4540                           indf1	equ	0xFE7
  4541                           postdec1	equ	0xFE5
  4542                           fsr1h	equ	0xFE2
  4543                           fsr1l	equ	0xFE1
  4544                           indf2	equ	0xFDF
  4545                           postinc2	equ	0xFDE
  4546                           fsr2h	equ	0xFDA
  4547                           fsr2l	equ	0xFD9
  4548                           status	equ	0xFD8
  4549                           
  4550                           	psect	temp
  4551  00004F                     btemp:
  4552                           	opt stack 0
  4553  00004F                     	ds	1
  4554  0000                     int$flags	set	btemp
  4555  0000                     wtemp6	set	btemp+1
  4556                           pclatu	equ	0xFFB
  4557                           pclath	equ	0xFFA
  4558                           tblptru	equ	0xFF8
  4559                           tblptrh	equ	0xFF7
  4560                           tblptrl	equ	0xFF6
  4561                           tablat	equ	0xFF5
  4562                           prodh	equ	0xFF4
  4563                           prodl	equ	0xFF3
  4564                           intcon	equ	0xFF2
  4565                           postinc0	equ	0xFEE
  4566                           fsr0h	equ	0xFEA
  4567                           fsr0l	equ	0xFE9
  4568                           wreg	equ	0xFE8
  4569                           indf1	equ	0xFE7
  4570                           postdec1	equ	0xFE5
  4571                           fsr1h	equ	0xFE2
  4572                           fsr1l	equ	0xFE1
  4573                           indf2	equ	0xFDF
  4574                           postinc2	equ	0xFDE
  4575                           fsr2h	equ	0xFDA
  4576                           fsr2l	equ	0xFD9
  4577                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      78
    BANK0           160      7      17
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _wood_isr in COMRAM

    _wood_isr->i2_TIMER0_16bit_set_count
    _wood_isr->i2_TIMER1_set_count

Critical Paths under _main in BANK0

    _main->_read_ds_dual_de_gozaru
    _spi_init->_SPI_begin
    _read_ds_dual_init->_Serial1_begin
    _read_ds_dual_de_gozaru->_GOOD_de_gozaru
    _GOOD_de_gozaru->_bit_test
    _s_driver4_set_value->_SPI_transfer
    _s_driver3_set_value->_SPI_transfer
    _s_driver2_set_value->_SPI_transfer
    _s_driver1_set_value->_SPI_transfer

Critical Paths under _wood_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _wood_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _wood_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _wood_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _wood_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _wood_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _wood_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _wood_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _wood_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _wood_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _wood_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _wood_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _wood_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _wood_isr in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4193
                   _TIMER1_set_count
                       _TIMER1_setup
                  _enable_interrupts
                           _pin_init
             _read_ds_dual_de_gozaru
                  _read_ds_dual_init
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0     152
                          _SPI_begin
 ---------------------------------------------------------------------------------
 (2) _SPI_begin                                            2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _read_ds_dual_init                                    0     0      0     747
                      _Serial1_begin
             _TIMER0_16bit_set_count
                       _TIMER0_setup
                  _enable_interrupts
 ---------------------------------------------------------------------------------
 (2) _enable_interrupts                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_setup                                         2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TIMER0_16bit_set_count                               2     0      2     207
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Serial1_begin                                        3     0      3     366
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _read_ds_dual_de_gozaru                               1     1      0    2913
                                              6 BANK0      1     1      0
                      _BAD_de_gozaru
                     _GOOD_de_gozaru
                   _always_de_gozaru
 ---------------------------------------------------------------------------------
 (2) _always_de_gozaru                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GOOD_de_gozaru                                       1     1      0    2913
                                              5 BANK0      1     1      0
            _DS_LEFT_UD_signed_VALUE
           _DS_RIGHT_LR_signed_VALUE
                           _bit_test
       _make_s_driver_ver1_send_data
                        _output_LED5
                _s_driver1_set_value
                _s_driver2_set_value
                _s_driver3_set_value
                _s_driver4_set_value
 ---------------------------------------------------------------------------------
 (3) _s_driver4_set_value                                  2     2      0      51
                                              1 BANK0      2     2      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _s_driver3_set_value                                  2     2      0      51
                                              1 BANK0      2     2      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _s_driver2_set_value                                  2     2      0      51
                                              1 BANK0      2     2      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _s_driver1_set_value                                  2     2      0      51
                                              1 BANK0      2     2      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _SPI_transfer                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _output_LED5                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _make_s_driver_ver1_send_data                         2     1      1    2321
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _bit_test                                             5     4      1     366
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _DS_RIGHT_LR_signed_VALUE                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DS_LEFT_UD_signed_VALUE                              4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _BAD_de_gozaru                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER1_setup                                         2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TIMER1_set_count                                     2     0      2     207
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _wood_isr                                            18    18      0     140
                                              2 COMRAM    18    18      0
                  _read_ds_dual_byte
           i2_TIMER0_16bit_set_count
                 i2_TIMER1_set_count
 ---------------------------------------------------------------------------------
 (6) i2_TIMER1_set_count                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) i2_TIMER0_16bit_set_count                             2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _read_ds_dual_byte                                    1     1      0       0
                                              0 COMRAM     1     1      0
                       _Serial1_read
 ---------------------------------------------------------------------------------
 (7) _Serial1_read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TIMER1_set_count
   _TIMER1_setup
   _enable_interrupts
   _pin_init
   _read_ds_dual_de_gozaru
     _BAD_de_gozaru
     _GOOD_de_gozaru
       _DS_LEFT_UD_signed_VALUE
       _DS_RIGHT_LR_signed_VALUE
       _bit_test
       _make_s_driver_ver1_send_data
       _output_LED5
       _s_driver1_set_value
         _SPI_transfer
       _s_driver2_set_value
         _SPI_transfer
       _s_driver3_set_value
         _SPI_transfer
       _s_driver4_set_value
         _SPI_transfer
     _always_de_gozaru
   _read_ds_dual_init
     _Serial1_begin
     _TIMER0_16bit_set_count
     _TIMER0_setup
     _enable_interrupts
   _spi_init
     _SPI_begin

 _wood_isr (ROOT)
   _read_ds_dual_byte
     _Serial1_read
   i2_TIMER0_16bit_set_count
   i2_TIMER1_set_count

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      7      11       5       10.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      4E       1       83.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5F       8        0.0%
DATA                 0      0      5F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Feb 22 13:52:46 2021

                              __CFG_CP$OFF 000000                                        l403 0A42  
                                      l460 0742                                        l462 0758  
                                      l464 076E                                        l457 0784  
                                      l466 0784                                        l458 0730  
                                      l901 0824                                        l902 0812  
                                      l742 05BC                                        l750 056C  
                                      l751 0576                                        l743 0536  
                                      l752 0580                                        l905 0816  
                                      l753 058A                                        l745 053A  
                                      l906 081A                                        l754 0594  
                                      l746 0544                                        l907 0820  
                                      l755 059C                                        l747 054E  
                                      l756 05A4                                        l748 0558  
                                      l757 05AC                                        l749 0562  
                                      l758 05B4                                        l874 0970  
                                      l890 0646                                        l891 0652  
                                      l892 065E                                        l885 0676  
                                      l893 066A                                        l886 0622  
                                      l888 062E                                        l889 063A  
                             __CFG_CPD$OFF 000000             ??_make_s_driver_ver1_send_data 006B  
                     ??i2_TIMER1_set_count 0039                                        prod 000FF3  
                                      wreg 000FE8  read_ds_dual_de_gozaru@first_communication 004D  
                             __CFG_LVP$OFF 000000                               __CFG_ZCD$OFF 000000  
           ten_bit_test_unsignedint@F17526 001B                                       l1001 0414  
                                     l1002 0346                                       l1003 0428  
                                     l1004 0356                                       l1006 039C  
                                     l1007 040E                                       l1041 085E  
                                     l1009 0432                                       l1046 0874  
                                     l1071 07B2                      __size_of_SPI_transfer 0012  
                                     l1161 093E                                       l1170 01A0  
                                     l1076 07D6                                       l1172 01F6  
                                     l1174 024C                                       l1167 00E8  
                                     l1176 02A2                                       l1168 011A  
                                     l1169 014A                                       l1178 02F8  
                              _output_LED5 061C                                       l3762 076E  
                                     l3758 0758                                       u2000 0102  
                                     u2020 0134                                       u2030 0160  
                                     u2006 0104                                       u2026 0136  
                                     u2060 0262                                       _LATA 000F79  
                                     _LATB 000F7A                                       u2207 0A1A  
                                     _LATC 000F7B                                       _LATD 000F7C  
                                     u2217 0A2E                                       _LATE 000F7D  
                                     _LATF 000F7E                                       u2147 09A8  
                                     _LATG 000F7F                                       _LATH 000F80  
                                     u2157 09BC                                       u2167 09CE  
                                     u2177 09E2                                       _T2PR 000FBC  
                                     u2187 09F4                                       u1900 07A6  
                                     u2197 0A08                                       u1824 095A  
                                     u1825 0956                                       _T4PR 000FB6  
                                     u1860 0852                                       _T6PR 000FB0  
                                     _T8PR 000F29                      __end_of_Serial1_begin 0796  
                                     _TMR2 000FBB                                       _TMR4 000FB5  
                                     _TMR6 000FAF                                       _TMR8 000F28  
                 ??_TIMER0_16bit_set_count 006C                                       _WPUA 000E91  
                                     _WPUB 000E99                                       _WPUC 000EA1  
                                     _WPUD 000EA6                                       _WPUE 000EAE  
                                     _WPUF 000EB3                                       _WPUG 000EBB  
                                     _WPUH 000EC0                                       _data 0060  
                                     _main 0910                   _DS_RIGHT_LR_signed_VALUE 0842  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 004F                              __CFG_BOREN$ON 000000  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 00D4            __size_of_read_ds_dual_de_gozaru 00FE  
                            __CFG_CSWEN$ON 000000                               ___param_bank 000000  
                            __CFG_SCANE$ON 000000                   ?_DS_LEFT_UD_signed_VALUE 006A  
             __size_of_s_driver1_set_value 0026                                      _ADACQ 000F5C  
                                    ?_main 0037                                      _ADCLK 000F57  
                                    _ADPCH 000F5F                                      _ADREF 000F58  
                                    _ADPRE 000F5E                              __CFG_WDTE$OFF 000000  
                                    _T1CON 000FCF                                      _T2CON 000FBD  
                                    _T3CON 000FC9                                      _T4CON 000FB7  
                                    _T2HLT 000FBE                                      _T5CON 000FC3  
                                    _T6CON 000FB1                                      _T4HLT 000FB8  
                           __CFG_DEBUG$OFF 000000                                      _T7CON 000F30  
                                    _T8CON 000F2A                                      _T6HLT 000FB2  
                                    _T8HLT 000F2B                                      _T2RST 000FC0  
                                    _T4RST 000FBA                                      _T6RST 000FB4  
                                    _T8RST 000F2D                                      i2l981 0708  
                                    i2l978 0716                                      i2l979 06E0  
                             _SPI_transfer 0A38                                      _TMR0H 000FD4  
                                    _TMR1H 000FCE                                      _TMR0L 000FD3  
                                    _TMR1L 000FCD                                      _TMR3H 000FC8  
                                    _TMR3L 000FC7                                      _TMR5H 000FC2  
                                    _TMR5L 000FC1                                      _TMR7H 000F2F  
                                    _TMR7L 000F2E                                      _TRISA 000F81  
                                    _TRISB 000F82                                      _TRISC 000F83  
                                    _TRISD 000F84                                      _TRISE 000F85  
                                    _TRISF 000F86                                      _TRISG 000F87  
                                    _TRISH 000F88                           _always_de_gozaru 0AB8  
                            __CFG_WRT0$OFF 000000                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                              __CFG_WRT3$OFF 000000  
                            __CFG_PWRTE$ON 000000                              __CFG_WRT4$OFF 000000  
             __size_of_s_driver2_set_value 0026                              __CFG_WRT5$OFF 000000  
                            __CFG_WRT6$OFF 000000                              __CFG_WRT7$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                             __CFG_EBTR4$OFF 000000  
                           __CFG_EBTR5$OFF 000000                             __CFG_EBTR6$OFF 000000  
                           __CFG_EBTR7$OFF 000000                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           __CFG_EBTRB$OFF 000000                         __CFG_MCLRE$EXTMCLR 000000  
                                    pclath 000FFA                                      tablat 000FF5  
             __size_of_s_driver3_set_value 0026                                      status 000FD8  
                                    wtemp6 0050                         __size_of_SPI_begin 000E  
             __size_of_s_driver4_set_value 0026                            __initialization 08CE  
                        ?_TIMER1_set_count 006A                               __end_of_main 0944  
                       ??_TIMER1_set_count 006C                                     ??_main 0071  
                            __activetblptr 000003                    s_driver2_set_value@temp 006B  
                   _read_ds_dual_de_gozaru 033A                                     _ADCON0 000F60  
                                   _ADCON1 000F59                                     _ADCON2 000F5A  
                                   _ADCON3 000F5B                                     _ADRESH 000F64  
                                   _ADRESL 000F63                             _GOOD_de_gozaru 00D8  
                                   _ANSELA 000E92                                     _ANSELB 000E9A  
                                   _ANSELD 000EA7                                     _ANSELE 000EAF  
                                   _ANSELF 000EB4                                     _ANSELG 000EBC  
                                   _T0CON0 000FD5                                     _T0CON1 000FD6  
                                   _T1GCON 000FD0                                     _T3GCON 000FCA  
                                   _T5GCON 000FC4                                     _RC1REG 000F98  
                                   _RB0PPS 000E5A                                     _RC2REG 000EF1  
                                   _RB1PPS 000E5B                                     _T7GCON 000F31  
                                   _RC3REG 000EEA                                     _RC0PPS 000E62  
                                   _RC4REG 000EE3                                     _RC1STA 000F9C  
                                   _RC5REG 000EDC                                     _RC2STA 000EF5  
                                   _RC3STA 000EEE                                     _RC4STA 000EE7  
                                   _RC5STA 000EE0                                     _ODCONA 000E90  
                                   _ODCONB 000E98                                     _ODCONC 000EA0  
                                   _RC6PPS 000E68                                     _RD4PPS 000E6E  
                                   _ODCOND 000EA5                                     _ODCONE 000EAD  
                                   _ODCONF 000EB2                                     _ODCONG 000EBA  
                                   _ODCONH 000EBF                                     _RD6PPS 000E70  
                                   i2l1154 0074                                     i2l1155 0088  
                           __CFG_WDTCCS$SC 000000            __size_of_TIMER0_16bit_set_count 000C  
                    _CSV_lib_transmit_flag 0027                                     _TX1REG 000F99  
                                   _TX2REG 000EF2                                     _TX3REG 000EEB  
                                   _TX4REG 000EE4                                     _TX1STA 000F9D  
                                   _TX5REG 000EDD                                     _TX2STA 000EF6  
                                   _TX3STA 000EEF                                     _TX4STA 000EE8  
                                   _TX5STA 000EE1                           __end_of_bit_test 0974  
          __end_of_DS_LEFT_UD_signed_VALUE 07FA                             __CFG_XINST$OFF 000000  
                           __CFG_STVREN$ON 000000                                     clear_0 08F4  
                                   clear_1 0900                           __end_of_pin_init 0530  
                           output_LED5@num 006A                          __end_of_SPI_begin 0A6A  
                             __pdataCOMRAM 004B                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                         __end_of_spi_init 09A0                     __end_of_GOOD_de_gozaru 033A  
                 s_driver1_set_value@value 006C                     __size_of_BAD_de_gozaru 0006  
                  s_driver4_set_value@temp 006B                           __end_of_wood_isr 00D4  
                               __accesstop 0060                    __end_of__initialization 0906  
                          __CFG_FEXTOSC$HS 000000                              ___rparam_used 000001  
                           __pcstackCOMRAM 0037      make_s_driver_ver1_send_data@pwm_value 006A  
        __size_ofi2_TIMER0_16bit_set_count 000A                  ?i2_TIMER0_16bit_set_count 0037  
                   _TIMER0_16bit_set_count 0A78                              ?_Serial1_read 0037  
                          ?_GOOD_de_gozaru 0037                 ??_DS_RIGHT_LR_signed_VALUE 006C  
                             ?_output_LED5 0037                                 __pbssBANK0 0060  
                      _s_driver1_set_value 0A12                   s_driver2_set_value@value 006C  
                        _read_ds_dual_byte 06A0                          _read_ds_dual_init 088A  
                            ?_TIMER0_setup 006A                              ?_TIMER1_setup 006A  
                       ?_read_ds_dual_byte 0037                         ?_read_ds_dual_init 0037  
                 __end_of_always_de_gozaru 0ABA                        _s_driver2_set_value 09EC  
                           _SSP1DATPPSbits 000E1A                     i2TIMER1_set_count@data 0037  
                            _BAD_de_gozaru 0AAE                        ??_read_ds_dual_byte 0037  
                      ??_read_ds_dual_init 006D                       ?_s_driver1_set_value 0037  
                      _s_driver3_set_value 09C6                             _SSP2DATPPSbits 000E1D  
                           _SSP1CLKPPSbits 000E19                             ??_Serial1_read 0037  
                     ?_s_driver2_set_value 0037                                    _SP1BRGH 000F9B  
                                  _SP1BRGL 000F9A                __size_ofi2_TIMER1_set_count 000A  
                                  _SP2BRGH 000EF4                                    _SP2BRGL 000EF3  
                                  _SP3BRGH 000EED                                    _SP3BRGL 000EEC  
                                  _SP4BRGH 000EE6                                    _SP4BRGL 000EE5  
                                  _SP5BRGH 000EDF                                    _SP5BRGL 000EDE  
                      _s_driver4_set_value 09A0                                    i2u60_40 06EE  
                           _SSP2CLKPPSbits 000E1C                                    i2u63_40 0702  
                                  _TMR1CLK 000FD2                                    _DS_data 0001  
                                  _TMR3CLK 000FCC                                    _TMR5CLK 000FC6  
                                  _TMR7CLK 000F33                                  ?_bit_test 006A  
                                  _SSP2ADD 000ED6                                    _SSP1BUF 000F91  
                                  _SSP2BUF 000ED5           __size_of_DS_LEFT_UD_signed_VALUE 0064  
                __end_of_read_ds_dual_byte 071C                  __end_of_read_ds_dual_init 08CE  
                     ?_s_driver3_set_value 0037                             ??_TIMER0_setup 006C  
                           ??_TIMER1_setup 006C                                  ?_pin_init 0037  
                                  __Hparam 0000                       ?_s_driver4_set_value 0037  
                                  __Lparam 0000                   s_driver3_set_value@value 006C  
                         TIMER0_setup@data 006A                             ?_BAD_de_gozaru 0037  
                                ?_spi_init 0037                      ??_s_driver1_set_value 006B  
               read_ds_dual_de_gozaru@mode 0033                                    __pcinit 08CE  
                  ?_read_ds_dual_de_gozaru 0037                                  ?_wood_isr 0037  
                                  __ramtop 0E00                     __size_of_Serial1_begin 007A  
                                  __ptext0 0910                                    __ptext1 0974  
                                  __ptext2 0A5C                                    __ptext3 088A  
                                  __ptext4 0530                                    __ptext5 0A6A  
                                  __ptext6 0A78                                    __ptext7 071C  
                                  __ptext8 033A                                    __ptext9 0AB8  
                                _T1CONbits 000FCF                              SPI_begin@data 006A  
                                _T2CONbits 000FBD                      ??_s_driver2_set_value 006B  
                                _T3CONbits 000FC9                                  _T4CONbits 000FB7  
                __size_of_TIMER1_set_count 000C                                  _T5CONbits 000FC3  
                                _T6CONbits 000FB1                                 ??_bit_test 006B  
                         TIMER1_setup@data 006A                                  _T7CONbits 000F30  
                                _T8CONbits 000F2A                       end_of_initialization 0906  
                    ??_s_driver3_set_value 006B                          _sinyounai_DS_data 000E  
                    ??_s_driver4_set_value 006B                                 ??_pin_init 006A  
                        bit_test@bit_place 006A                                    postdec1 000FE5  
                               ??_spi_init 006C                                    postinc0 000FEE  
                                  postinc2 000FDE             __end_of_read_ds_dual_de_gozaru 0438  
                    __CFG_WDTCPS$WDTCPS_31 000000                                 ??_wood_isr 0039  
                 s_driver4_set_value@value 006C                                  _SPI_begin 0A5C  
               __size_of_read_ds_dual_byte 007C                 __size_of_read_ds_dual_init 0044  
                            _Serial1_begin 071C                       __size_of_output_LED5 0084  
         __end_ofi2_TIMER0_16bit_set_count 0AA4                             _DS_uart_number 0036  
                     __end_of_Serial1_read 0AAE                         _CSV_lib_cycle_time 002B  
                          ??_BAD_de_gozaru 006A                    ?_TIMER0_16bit_set_count 006A  
         make_s_driver_ver1_send_data@mode 006B                _DS_communication_error_time 002D  
                            __pidataCOMRAM 0AB4                           ??_GOOD_de_gozaru 006F  
                     __end_of_TIMER0_setup 0A78                          _enable_interrupts 0530  
                     __end_of_TIMER1_setup 0A5C                         ?_enable_interrupts 0037  
                      start_initialization 08CE                    _DS_LEFT_UD_signed_VALUE 0796  
                           bit_test@number 006D                                 ?_SPI_begin 006A  
                      ??_enable_interrupts 006A                             ?_Serial1_begin 006A  
             i2TIMER0_16bit_set_count@data 0037             __end_of_TIMER0_16bit_set_count 0A84  
                         __CFG_LPBOREN$OFF 000000                          ?_always_de_gozaru 0037  
                       ??_always_de_gozaru 006A                  __end_of_enable_interrupts 061C  
                  s_driver1_set_value@temp 006B                              ?_SPI_transfer 0037  
                              __pbssCOMRAM 0001                           _TIMER1_set_count 0A84  
                            __pcstackBANK0 006A                          __size_of_bit_test 0030  
               TIMER0_16bit_set_count@data 006A          __size_of_DS_RIGHT_LR_signed_VALUE 0048  
                       ten_bit_test@F17522 0020                  ?_DS_RIGHT_LR_signed_VALUE 006A  
                 i2_TIMER0_16bit_set_count 0A9A                                  __pintcode 0008  
                        __size_of_pin_init 00F8                           __CFG_PPS1WAY$OFF 000000  
                        __size_of_spi_init 002C                             ??_SPI_transfer 006A  
               __end_ofi2_TIMER1_set_count 0A9A                  ??_DS_LEFT_UD_signed_VALUE 006C  
                                 _BAUD1CON 000F9E                                   _BAUD2CON 000EF7  
                                 _BAUD3CON 000EF0                                   _BAUD4CON 000EE9  
                                 _BAUD5CON 000EE2                          __size_of_wood_isr 00CC  
                  s_driver3_set_value@temp 006B                                ??_SPI_begin 006C  
                          ??_Serial1_begin 006D                                   _T2CLKCON 000FBF  
                       Serial1_begin@speed 006A                                   _T4CLKCON 000FB9  
                    __size_of_Serial1_read 000A                                   _T6CLKCON 000FB3  
                                 _T8CLKCON 000F2C                             _CSV_lib_enable 0031  
                                 _LATAbits 000F79                                   _LATDbits 000F7C  
                                 _LATEbits 000F7D                                   _LATGbits 000F7F  
                                 _LATHbits 000F80                                   _PIE0bits 000E29  
                                 _PIE3bits 000E2C                                   _PIE4bits 000E2D  
                                 _PIE5bits 000E2E                        __CFG_BORV$VBOR_2P45 000000  
              __end_of_s_driver1_set_value 0A38                                   _PIR0bits 000E33  
                                 _PIR3bits 000E36                                   _PIR4bits 000E37  
                                 _PIR5bits 000E38                                  bit_test@i 006E  
                    __size_of_TIMER0_setup 000E                                   _SSP1CON1 000F95  
                                 _SSP2CON1 000ED9                                   _SSP2CON3 000EDB  
                    __size_of_TIMER1_setup 0012                       TIMER1_set_count@data 006A  
                                 _SSP1STAT 000F94                                   _SSP2STAT 000ED8  
              __end_of_s_driver2_set_value 0A12                 __size_of_enable_interrupts 00EC  
                               _ADCON0bits 000F60                               _Serial1_read 0AA4  
              __end_of_s_driver3_set_value 09EC                                  copy_data0 08E2  
              __end_of_s_driver4_set_value 09C6                               _TIMER0_setup 0A6A  
                             _TIMER1_setup 0A4A                                   __Hrparam 0000  
                  __CFG_RSTOSC$EXTOSC_4PLL 000000                                   __Lrparam 0000  
     __end_of_make_s_driver_ver1_send_data 0842      __size_of_make_s_driver_ver1_send_data 0048  
             _make_s_driver_ver1_send_data 07FA                                   _bit_test 0944  
                                 __ptext10 00D8                                   __ptext11 09A0  
                                 __ptext20 0796                                   __ptext12 09C6  
                                 __ptext21 0AAE                                   __ptext13 09EC  
                                 __ptext22 0438                                   __ptext14 0A12  
                                 __ptext23 0A4A                                   __ptext15 0A38  
                                 __ptext24 0A84                                   __ptext16 061C  
                                 __ptext17 07FA                                   __ptext26 0A90  
                                 __ptext18 0944                                   __ptext27 0A9A  
                                 __ptext19 0842                                   __ptext28 06A0  
                                 __ptext29 0AA4                               _SSP1CON1bits 000F95  
                            ??_output_LED5 006A                               _SSP2CON2bits 000EDA  
                                 _csv_data 0023                               _DS_read_stop 0035  
                        Serial1_begin@data 006C                              __size_of_main 0034  
                     __end_of_SPI_transfer 0A4A                       __CFG_WDTCWS$WDTCWS_7 000000  
                                 _pin_init 0438                   __end_of_TIMER1_set_count 0A90  
                    __end_of_BAD_de_gozaru 0AB4                                   _spi_init 0974  
                                 int$flags 004F              ?_make_s_driver_ver1_send_data 006A  
                    enable_interrupts@data 006A                               _SSP1STATbits 000F94  
                                 _wood_isr 0008                               _SSP2STATbits 000ED8  
                               _INTCONbits 000FF2                  __size_of_always_de_gozaru 0002  
                         _CSV_lib_now_time 0029           __end_of_DS_RIGHT_LR_signed_VALUE 088A  
                                 intlevel2 0000                 ??i2_TIMER0_16bit_set_count 0039  
                        __CFG_CLKOUTEN$OFF 000000                        __end_of_output_LED5 06A0  
                 ??_read_ds_dual_de_gozaru 0070                             _before_DS_data 004B  
                              _DS_time_out 004E          read_ds_dual_de_gozaru@read_number 0034  
                               _RX1PPSbits 000E0F                                 _RX2PPSbits 000E11  
                    SPI_transfer@send_data 006A                                 _TX1STAbits 000F9D  
                               _TX2STAbits 000EF6                                 _TX3STAbits 000EEF  
                  __size_of_GOOD_de_gozaru 0262                                 _TX4STAbits 000EE8  
                               _TX5STAbits 000EE1                         i2_TIMER1_set_count 0A90  
              CSV_timer_task@CSV_lib_count 0025                               _push_DS_data 002F  
          read_ds_dual_de_gozaru@check_sum 0032                        ?i2_TIMER1_set_count 0037  
